; SMT 2
(set-info :source "Generated by CBMC 5.7")
(set-option :produce-models true)
(set-logic QF_AUFBV)

; find_symbols
(declare-fun |goto_symex::&92;guard#1| () Bool)
; convert
(define-fun |B0| () Bool |goto_symex::&92;guard#1|)

; find_symbols
(declare-fun |goto_symex::&92;guard#2| () Bool)
; convert
(define-fun |B1| () Bool (and |goto_symex::&92;guard#1| |goto_symex::&92;guard#2|))

; convert
(define-fun |B2| () Bool (and |goto_symex::&92;guard#1| |goto_symex::&92;guard#2|))

; convert
(define-fun |B3| () Bool |goto_symex::&92;guard#1|)

; convert
(define-fun |B4| () Bool (not |goto_symex::&92;guard#1|))

; find_symbols
(declare-fun |goto_symex::&92;guard#3| () Bool)
; convert
(define-fun |B5| () Bool (and (not |goto_symex::&92;guard#1|) |goto_symex::&92;guard#3|))

; convert
(define-fun |B6| () Bool (and (not |goto_symex::&92;guard#1|) |goto_symex::&92;guard#3|))

; convert
(define-fun |B7| () Bool (and (not |goto_symex::&92;guard#1|) |goto_symex::&92;guard#3|))

; convert
(define-fun |B8| () Bool (and (not |goto_symex::&92;guard#1|) |goto_symex::&92;guard#3|))

; convert
(define-fun |B9| () Bool (and (not |goto_symex::&92;guard#1|) |goto_symex::&92;guard#3|))

; convert
(define-fun |B10| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|)))

; find_symbols
(declare-fun |goto_symex::&92;guard#4| () Bool)
; convert
(define-fun |B11| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) |goto_symex::&92;guard#4|))

; find_symbols
(declare-fun |goto_symex::&92;guard#5| () Bool)
; convert
(define-fun |B12| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) |goto_symex::&92;guard#4| |goto_symex::&92;guard#5|))

; convert
(define-fun |B13| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) |goto_symex::&92;guard#4| |goto_symex::&92;guard#5|))

; convert
(define-fun |B14| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) |goto_symex::&92;guard#4| |goto_symex::&92;guard#5|))

; convert
(define-fun |B15| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) |goto_symex::&92;guard#4| (not |goto_symex::&92;guard#5|)))

; convert
(define-fun |B16| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) |goto_symex::&92;guard#4| (not |goto_symex::&92;guard#5|)))

; convert
(define-fun |B17| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) |goto_symex::&92;guard#4|))

; convert
(define-fun |B18| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) (not |goto_symex::&92;guard#4|)))

; find_symbols
(declare-fun |goto_symex::&92;guard#6| () Bool)
; convert
(define-fun |B19| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) (not |goto_symex::&92;guard#4|) |goto_symex::&92;guard#6|))

; find_symbols
(declare-fun |goto_symex::&92;guard#7| () Bool)
; convert
(define-fun |B20| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) (not |goto_symex::&92;guard#4|) |goto_symex::&92;guard#6| |goto_symex::&92;guard#7|))

; convert
(define-fun |B21| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) (not |goto_symex::&92;guard#4|) |goto_symex::&92;guard#6| |goto_symex::&92;guard#7|))

; convert
(define-fun |B22| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) (not |goto_symex::&92;guard#4|) |goto_symex::&92;guard#6| |goto_symex::&92;guard#7|))

; convert
(define-fun |B23| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) (not |goto_symex::&92;guard#4|) |goto_symex::&92;guard#6| (not |goto_symex::&92;guard#7|)))

; convert
(define-fun |B24| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) (not |goto_symex::&92;guard#4|) |goto_symex::&92;guard#6| (not |goto_symex::&92;guard#7|)))

; convert
(define-fun |B25| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) (not |goto_symex::&92;guard#4|) |goto_symex::&92;guard#6| (not |goto_symex::&92;guard#7|)))

; convert
(define-fun |B26| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) (not |goto_symex::&92;guard#4|) |goto_symex::&92;guard#6| (not |goto_symex::&92;guard#7|)))

; convert
(define-fun |B27| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) (not |goto_symex::&92;guard#4|) |goto_symex::&92;guard#6|))

; convert
(define-fun |B28| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) (not |goto_symex::&92;guard#4|) (not |goto_symex::&92;guard#6|)))

; find_symbols
(declare-fun |goto_symex::&92;guard#8| () Bool)
; convert
(define-fun |B29| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) (not |goto_symex::&92;guard#4|) (not |goto_symex::&92;guard#6|) |goto_symex::&92;guard#8|))

; find_symbols
(declare-fun |goto_symex::&92;guard#9| () Bool)
; convert
(define-fun |B30| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) (not |goto_symex::&92;guard#4|) (not |goto_symex::&92;guard#6|) |goto_symex::&92;guard#8| |goto_symex::&92;guard#9|))

; convert
(define-fun |B31| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) (not |goto_symex::&92;guard#4|) (not |goto_symex::&92;guard#6|) |goto_symex::&92;guard#8| |goto_symex::&92;guard#9|))

; convert
(define-fun |B32| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) (not |goto_symex::&92;guard#4|) (not |goto_symex::&92;guard#6|) |goto_symex::&92;guard#8| |goto_symex::&92;guard#9|))

; convert
(define-fun |B33| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) (not |goto_symex::&92;guard#4|) (not |goto_symex::&92;guard#6|) |goto_symex::&92;guard#8| |goto_symex::&92;guard#9|))

; convert
(define-fun |B34| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) (not |goto_symex::&92;guard#4|) (not |goto_symex::&92;guard#6|) |goto_symex::&92;guard#8|))

; convert
(define-fun |B35| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) (not |goto_symex::&92;guard#4|) (not |goto_symex::&92;guard#6|) (not |goto_symex::&92;guard#8|)))

; find_symbols
(declare-fun |goto_symex::&92;guard#10| () Bool)
; convert
(define-fun |B36| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) (not |goto_symex::&92;guard#4|) (not |goto_symex::&92;guard#6|) (not |goto_symex::&92;guard#8|) |goto_symex::&92;guard#10|))

; find_symbols
(declare-fun |goto_symex::&92;guard#11| () Bool)
; convert
(define-fun |B37| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) (not |goto_symex::&92;guard#4|) (not |goto_symex::&92;guard#6|) (not |goto_symex::&92;guard#8|) |goto_symex::&92;guard#10| |goto_symex::&92;guard#11|))

; convert
(define-fun |B38| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) (not |goto_symex::&92;guard#4|) (not |goto_symex::&92;guard#6|) (not |goto_symex::&92;guard#8|) |goto_symex::&92;guard#10| |goto_symex::&92;guard#11|))

; convert
(define-fun |B39| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) (not |goto_symex::&92;guard#4|) (not |goto_symex::&92;guard#6|) (not |goto_symex::&92;guard#8|) |goto_symex::&92;guard#10|))

; convert
(define-fun |B40| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) (not |goto_symex::&92;guard#4|) (not |goto_symex::&92;guard#6|) (not |goto_symex::&92;guard#8|) (not |goto_symex::&92;guard#10|)))

; find_symbols
(declare-fun |goto_symex::&92;guard#12| () Bool)
; convert
(define-fun |B41| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) (not |goto_symex::&92;guard#4|) (not |goto_symex::&92;guard#6|) (not |goto_symex::&92;guard#8|) (not |goto_symex::&92;guard#10|) |goto_symex::&92;guard#12|))

; convert
(define-fun |B42| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) (not |goto_symex::&92;guard#4|) (not |goto_symex::&92;guard#6|) (not |goto_symex::&92;guard#8|) (not |goto_symex::&92;guard#10|) |goto_symex::&92;guard#12|))

; convert
(define-fun |B43| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) (not |goto_symex::&92;guard#4|) (not |goto_symex::&92;guard#6|) (not |goto_symex::&92;guard#8|) (not |goto_symex::&92;guard#10|) |goto_symex::&92;guard#12|))

; convert
(define-fun |B44| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) (not |goto_symex::&92;guard#4|) (not |goto_symex::&92;guard#6|) (not |goto_symex::&92;guard#8|) (not |goto_symex::&92;guard#10|) |goto_symex::&92;guard#12|))

; convert
(define-fun |B45| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) (not |goto_symex::&92;guard#4|) (not |goto_symex::&92;guard#6|) (not |goto_symex::&92;guard#8|) (not |goto_symex::&92;guard#10|) |goto_symex::&92;guard#12|))

; convert
(define-fun |B46| () Bool (and (not |goto_symex::&92;guard#1|) (not |goto_symex::&92;guard#3|) (not |goto_symex::&92;guard#4|) (not |goto_symex::&92;guard#6|) (not |goto_symex::&92;guard#8|) (not |goto_symex::&92;guard#10|) |goto_symex::&92;guard#12|))

; find_symbols
(declare-fun |goto_symex::&92;guard#13| () Bool)
; convert
(define-fun |B47| () Bool |goto_symex::&92;guard#13|)

; convert
(define-fun |B48| () Bool |goto_symex::&92;guard#13|)

; convert
(define-fun |B49| () Bool (not |goto_symex::&92;guard#13|))

; set_to true (equal)
(define-fun |L0#1| () (_ BitVec 32) (_ bv0 32))

; set_to true (equal)
(define-fun |L1#1| () (_ BitVec 32) (_ bv1 32))

; set_to true (equal)
(define-fun |L2#1| () (_ BitVec 32) (_ bv2 32))

; set_to true (equal)
(define-fun |L3#1| () (_ BitVec 32) (_ bv3 32))

; set_to true (equal)
(define-fun |L4#1| () (_ BitVec 32) (_ bv4 32))

; set_to true (equal)
(define-fun |L5#1| () (_ BitVec 32) (_ bv5 32))

; set_to true (equal)
(define-fun |L6#1| () (_ BitVec 32) (_ bv6 32))

; set_to true (equal)
(define-fun |__CPROVER_dead_object#1| () (_ BitVec 64) (_ bv0 64))

; set_to true (equal)
(define-fun |__CPROVER_deallocated#1| () (_ BitVec 64) (_ bv0 64))

; set_to true (equal)
(define-fun |__CPROVER_malloc_is_new_array#1| () Bool false)

; set_to true (equal)
(define-fun |__CPROVER_malloc_object#1| () (_ BitVec 64) (_ bv0 64))

; set_to true (equal)
(define-fun |__CPROVER_malloc_size#1| () (_ BitVec 64) (_ bv0 64))

; set_to true (equal)
(define-fun |__CPROVER_memory_leak#1| () (_ BitVec 64) (_ bv0 64))

; set_to true (equal)
(define-fun |__CPROVER_next_thread_id#1| () (_ BitVec 64) (_ bv0 64))

; set_to true (equal)
(define-fun |__CPROVER_pipe_count#1| () (_ BitVec 32) (_ bv0 32))

; set_to true (equal)
(define-fun |__CPROVER_rounding_mode!0#1| () (_ BitVec 32) (_ bv0 32))

; set_to true (equal)
(define-fun |__CPROVER_thread_id!0#1| () (_ BitVec 64) (_ bv0 64))

; the following is a substitute for lambda i. x
(declare-fun array_of.0 () (Array (_ BitVec 64) (_ BitVec 1)))
; set_to true (equal)
(define-fun |__CPROVER_threads_exited#1| () (Array (_ BitVec 64) (_ BitVec 1)) array_of.0)

; find_symbols
(declare-fun |main::1::smain!0@1| () (_ BitVec 48))
; set_to true (equal)
(define-fun |initial::smain!0@1#1| () (_ BitVec 64) (concat (_ bv2 8) (_ bv0 56)))

; find_symbols
(declare-fun |main::1::clock!0@1#1| () (_ BitVec 8))
; set_to true (equal)
(define-fun |initial::clock!0@1#1| () (_ BitVec 8) |main::1::clock!0@1#1|)

; find_symbols
(declare-fun |main::1::select!0@1#1| () (_ BitVec 8))
; set_to true (equal)
(define-fun |initial::select!0@1#1| () (_ BitVec 8) |main::1::select!0@1#1|)

; find_symbols
(declare-fun |main::1::pause!0@1#1| () (_ BitVec 8))
; set_to true (equal)
(define-fun |initial::pause!0@1#1| () (_ BitVec 8) |main::1::pause!0@1#1|)

; find_symbols
(declare-fun |main::1::smain!0@1#1| () (_ BitVec 48))
; set_to true (equal)
(define-fun |main::1::smain!0@1#2| () (_ BitVec 48) (let ((?withop |main::1::smain!0@1#1|)) (concat (let ((distance? (bvmul (_ bv8 16) ((_ extract 15 0) (_ bv0 64))))) (bvor (bvand (bvlshr (_ bv65535 16) distance?) ((_ extract 47 32) |main::1::smain!0@1#1|)) (bvlshr ((_ zero_extend 8) (_ bv0 8)) distance?)))((_ extract 31 0) ?withop))))

; set_to true (equal)
(define-fun |main::1::smain!0@1#3| () (_ BitVec 48) (let ((?withop |main::1::smain!0@1#2|)) (concat (let ((distance? (bvmul (_ bv8 16) ((_ extract 15 0) (_ bv1 64))))) (bvor (bvand (bvlshr (_ bv65535 16) distance?) ((_ extract 47 32) |main::1::smain!0@1#2|)) (bvlshr ((_ zero_extend 8) (_ bv0 8)) distance?)))((_ extract 31 0) ?withop))))

; set_to true (equal)
(define-fun |main::1::smain!0@1#4| () (_ BitVec 48) (let ((?withop |main::1::smain!0@1#3|)) (concat ((_ extract 47 16) ?withop) (let ((distance? (bvmul (_ bv8 16) ((_ extract 15 0) (_ bv0 64))))) (bvor (bvand (bvlshr (_ bv65535 16) distance?) ((_ extract 15 0) |main::1::smain!0@1#3|)) (bvlshr ((_ zero_extend 8) (_ bv1 8)) distance?))))))

; set_to true (equal)
(define-fun |main::1::smain!0@1#5| () (_ BitVec 48) (let ((?withop |main::1::smain!0@1#4|)) (concat ((_ extract 47 16) ?withop) (let ((distance? (bvmul (_ bv8 16) ((_ extract 15 0) (_ bv1 64))))) (bvor (bvand (bvlshr (_ bv65535 16) distance?) ((_ extract 15 0) |main::1::smain!0@1#4|)) (bvlshr ((_ zero_extend 8) (_ bv1 8)) distance?))))))

; set_to true (equal)
(define-fun |main::1::smain!0@1#6| () (_ BitVec 48) (let ((?withop |main::1::smain!0@1#5|)) (concat (concat ((_ extract 47 32) ?withop) |initial::select!0@1#1|) ((_ extract 23 0) ?withop))))

; find_symbols
(declare-fun |nondet_symex::nondet0| () Bool)
; set_to true (equal)
(define-fun |main::1::select!0@1#2| () (_ BitVec 8) (ite (not (= |nondet_symex::nondet0| false))  (_ bv1 8) (_ bv0 8)))

; set_to true (equal)
(define-fun |dekker::smain!0@1#1| () (_ BitVec 64) (concat (_ bv2 8) (_ bv0 56)))

; set_to true (equal)
(define-fun |dekker::clock!0@1#1| () (_ BitVec 8) |main::1::clock!0@1#1|)

; set_to true (equal)
(define-fun |dekker::select!0@1#1| () (_ BitVec 8) |main::1::select!0@1#2|)

; set_to true (equal)
(define-fun |dekker::pause!0@1#1| () (_ BitVec 8) |main::1::pause!0@1#1|)

; set_to true (equal)
(define-fun |main::1::smain!0@1#7| () (_ BitVec 48) (let ((?withop |main::1::smain!0@1#6|)) (concat (concat ((_ extract 47 32) ?withop) |dekker::select!0@1#1|) ((_ extract 23 0) ?withop))))

; set_to true
(assert (= |goto_symex::&92;guard#1| (= ((_ zero_extend 24) ((_ extract 7 0) (bvlshr ((_ extract 47 32) |main::1::smain!0@1#7|) (bvmul (_ bv8 16) ((_ extract 15 0) ((_ zero_extend 56) ((_ extract 31 24) |main::1::smain!0@1#7|))))))) (_ bv0 32))))

; set_to true
(assert (= |goto_symex::&92;guard#2| (not (not (= |dekker::pause!0@1#1| (_ bv0 8))))))

; set_to true (equal)
(define-fun |main::1::smain!0@1#8| () (_ BitVec 48) (let ((?withop |main::1::smain!0@1#7|)) (concat (let ((distance? (bvmul (_ bv8 16) ((_ extract 15 0) ((_ zero_extend 56) ((_ extract 31 24) |main::1::smain!0@1#7|)))))) (bvor (bvand (bvlshr (_ bv65535 16) distance?) ((_ extract 47 32) |main::1::smain!0@1#7|)) (bvlshr ((_ zero_extend 8) (_ bv1 8)) distance?)))((_ extract 31 0) ?withop))))

; set_to true (equal)
(define-fun |main::1::smain!0@1#9| () (_ BitVec 48) (ite |goto_symex::&92;guard#2| |main::1::smain!0@1#8| |main::1::smain!0@1#7|))

; set_to true (equal)
(define-fun |main::1::smain!0@1#10| () (_ BitVec 48) |main::1::smain!0@1#7|)

; set_to true
(assert (= |goto_symex::&92;guard#3| (= ((_ zero_extend 24) ((_ extract 7 0) (bvlshr ((_ extract 47 32) |main::1::smain!0@1#10|) (bvmul (_ bv8 16) ((_ extract 15 0) ((_ zero_extend 56) ((_ extract 31 24) |main::1::smain!0@1#10|))))))) (_ bv1 32))))

; set_to true (equal)
(define-fun |main::1::smain!0@1#11| () (_ BitVec 48) (let ((?withop |main::1::smain!0@1#10|)) (concat ((_ extract 47 16) ?withop) (let ((distance? (bvmul (_ bv8 16) ((_ extract 15 0) ((_ zero_extend 56) ((_ extract 31 24) |main::1::smain!0@1#10|)))))) (bvor (bvand (bvlshr (_ bv65535 16) distance?) ((_ extract 15 0) |main::1::smain!0@1#10|)) (bvlshr ((_ zero_extend 8) (_ bv0 8)) distance?))))))

; set_to true (equal)
(define-fun |main::1::smain!0@1#12| () (_ BitVec 48) (let ((?withop |main::1::smain!0@1#11|)) (concat (let ((distance? (bvmul (_ bv8 16) ((_ extract 15 0) ((_ zero_extend 56) ((_ extract 31 24) |main::1::smain!0@1#11|)))))) (bvor (bvand (bvlshr (_ bv65535 16) distance?) ((_ extract 47 32) |main::1::smain!0@1#11|)) (bvlshr ((_ zero_extend 8) (_ bv2 8)) distance?)))((_ extract 31 0) ?withop))))

; set_to true (equal)
(define-fun |main::1::smain!0@1#13| () (_ BitVec 48) |main::1::smain!0@1#10|)

; set_to true
(assert (= |goto_symex::&92;guard#4| (= ((_ zero_extend 24) ((_ extract 7 0) (bvlshr ((_ extract 47 32) |main::1::smain!0@1#13|) (bvmul (_ bv8 16) ((_ extract 15 0) ((_ zero_extend 56) ((_ extract 31 24) |main::1::smain!0@1#13|))))))) (_ bv2 32))))

; set_to true
(assert (= |goto_symex::&92;guard#5| (= ((_ zero_extend 24) ((_ extract 7 0) (bvlshr ((_ extract 15 0) |main::1::smain!0@1#13|) (bvmul (_ bv8 16) ((_ extract 15 0) (ite (= ((_ extract 31 24) |main::1::smain!0@1#13|) (_ bv0 8)) (_ bv1 64) (_ bv0 64))))))) (_ bv1 32))))

; set_to true (equal)
(define-fun |main::1::smain!0@1#14| () (_ BitVec 48) (let ((?withop |main::1::smain!0@1#13|)) (concat (let ((distance? (bvmul (_ bv8 16) ((_ extract 15 0) ((_ zero_extend 56) ((_ extract 31 24) |main::1::smain!0@1#13|)))))) (bvor (bvand (bvlshr (_ bv65535 16) distance?) ((_ extract 47 32) |main::1::smain!0@1#13|)) (bvlshr ((_ zero_extend 8) (_ bv5 8)) distance?)))((_ extract 31 0) ?withop))))

; set_to true (equal)
(define-fun |main::1::smain!0@1#15| () (_ BitVec 48) |main::1::smain!0@1#13|)

; set_to true (equal)
(define-fun |main::1::smain!0@1#16| () (_ BitVec 48) (let ((?withop |main::1::smain!0@1#15|)) (concat (let ((distance? (bvmul (_ bv8 16) ((_ extract 15 0) ((_ zero_extend 56) ((_ extract 31 24) |main::1::smain!0@1#15|)))))) (bvor (bvand (bvlshr (_ bv65535 16) distance?) ((_ extract 47 32) |main::1::smain!0@1#15|)) (bvlshr ((_ zero_extend 8) (_ bv3 8)) distance?)))((_ extract 31 0) ?withop))))

; set_to true (equal)
(define-fun |main::1::smain!0@1#17| () (_ BitVec 48) (ite |goto_symex::&92;guard#5| |main::1::smain!0@1#14| |main::1::smain!0@1#16|))

; set_to true (equal)
(define-fun |main::1::smain!0@1#18| () (_ BitVec 48) |main::1::smain!0@1#13|)

; set_to true
(assert (= |goto_symex::&92;guard#6| (= ((_ zero_extend 24) ((_ extract 7 0) (bvlshr ((_ extract 47 32) |main::1::smain!0@1#18|) (bvmul (_ bv8 16) ((_ extract 15 0) ((_ zero_extend 56) ((_ extract 31 24) |main::1::smain!0@1#18|))))))) (_ bv3 32))))

; set_to true
(assert (= |goto_symex::&92;guard#7| (= ((_ extract 23 16) |main::1::smain!0@1#18|) ((_ extract 31 24) |main::1::smain!0@1#18|))))

; set_to true (equal)
(define-fun |main::1::smain!0@1#19| () (_ BitVec 48) (let ((?withop |main::1::smain!0@1#18|)) (concat (let ((distance? (bvmul (_ bv8 16) ((_ extract 15 0) ((_ zero_extend 56) ((_ extract 31 24) |main::1::smain!0@1#18|)))))) (bvor (bvand (bvlshr (_ bv65535 16) distance?) ((_ extract 47 32) |main::1::smain!0@1#18|)) (bvlshr ((_ zero_extend 8) (_ bv2 8)) distance?)))((_ extract 31 0) ?withop))))

; set_to true (equal)
(define-fun |main::1::smain!0@1#20| () (_ BitVec 48) |main::1::smain!0@1#18|)

; set_to true (equal)
(define-fun |main::1::smain!0@1#21| () (_ BitVec 48) (let ((?withop |main::1::smain!0@1#20|)) (concat ((_ extract 47 16) ?withop) (let ((distance? (bvmul (_ bv8 16) ((_ extract 15 0) ((_ zero_extend 56) ((_ extract 31 24) |main::1::smain!0@1#20|)))))) (bvor (bvand (bvlshr (_ bv65535 16) distance?) ((_ extract 15 0) |main::1::smain!0@1#20|)) (bvlshr ((_ zero_extend 8) (_ bv1 8)) distance?))))))

; set_to true (equal)
(define-fun |main::1::smain!0@1#22| () (_ BitVec 48) (let ((?withop |main::1::smain!0@1#21|)) (concat (let ((distance? (bvmul (_ bv8 16) ((_ extract 15 0) ((_ zero_extend 56) ((_ extract 31 24) |main::1::smain!0@1#21|)))))) (bvor (bvand (bvlshr (_ bv65535 16) distance?) ((_ extract 47 32) |main::1::smain!0@1#21|)) (bvlshr ((_ zero_extend 8) (_ bv4 8)) distance?)))((_ extract 31 0) ?withop))))

; set_to true (equal)
(define-fun |main::1::smain!0@1#23| () (_ BitVec 48) (ite |goto_symex::&92;guard#7| |main::1::smain!0@1#19| |main::1::smain!0@1#22|))

; set_to true (equal)
(define-fun |main::1::smain!0@1#24| () (_ BitVec 48) |main::1::smain!0@1#18|)

; set_to true
(assert (= |goto_symex::&92;guard#8| (= ((_ zero_extend 24) ((_ extract 7 0) (bvlshr ((_ extract 47 32) |main::1::smain!0@1#24|) (bvmul (_ bv8 16) ((_ extract 15 0) ((_ zero_extend 56) ((_ extract 31 24) |main::1::smain!0@1#24|))))))) (_ bv4 32))))

; set_to true
(assert (= |goto_symex::&92;guard#9| (= ((_ extract 23 16) |main::1::smain!0@1#24|) ((_ extract 31 24) |main::1::smain!0@1#24|))))

; set_to true (equal)
(define-fun |main::1::smain!0@1#25| () (_ BitVec 48) (let ((?withop |main::1::smain!0@1#24|)) (concat ((_ extract 47 16) ?withop) (let ((distance? (bvmul (_ bv8 16) ((_ extract 15 0) ((_ zero_extend 56) ((_ extract 31 24) |main::1::smain!0@1#24|)))))) (bvor (bvand (bvlshr (_ bv65535 16) distance?) ((_ extract 15 0) |main::1::smain!0@1#24|)) (bvlshr ((_ zero_extend 8) (_ bv0 8)) distance?))))))

; set_to true (equal)
(define-fun |main::1::smain!0@1#26| () (_ BitVec 48) (let ((?withop |main::1::smain!0@1#25|)) (concat (let ((distance? (bvmul (_ bv8 16) ((_ extract 15 0) ((_ zero_extend 56) ((_ extract 31 24) |main::1::smain!0@1#25|)))))) (bvor (bvand (bvlshr (_ bv65535 16) distance?) ((_ extract 47 32) |main::1::smain!0@1#25|)) (bvlshr ((_ zero_extend 8) (_ bv2 8)) distance?)))((_ extract 31 0) ?withop))))

; set_to true (equal)
(define-fun |main::1::smain!0@1#27| () (_ BitVec 48) (ite |goto_symex::&92;guard#9| |main::1::smain!0@1#26| |main::1::smain!0@1#24|))

; set_to true (equal)
(define-fun |main::1::smain!0@1#28| () (_ BitVec 48) |main::1::smain!0@1#24|)

; set_to true
(assert (= |goto_symex::&92;guard#10| (= ((_ zero_extend 24) ((_ extract 7 0) (bvlshr ((_ extract 47 32) |main::1::smain!0@1#28|) (bvmul (_ bv8 16) ((_ extract 15 0) ((_ zero_extend 56) ((_ extract 31 24) |main::1::smain!0@1#28|))))))) (_ bv5 32))))

; set_to true
(assert (= |goto_symex::&92;guard#11| (not (not (= |dekker::pause!0@1#1| (_ bv0 8))))))

; set_to true (equal)
(define-fun |main::1::smain!0@1#29| () (_ BitVec 48) (let ((?withop |main::1::smain!0@1#28|)) (concat (let ((distance? (bvmul (_ bv8 16) ((_ extract 15 0) ((_ zero_extend 56) ((_ extract 31 24) |main::1::smain!0@1#28|)))))) (bvor (bvand (bvlshr (_ bv65535 16) distance?) ((_ extract 47 32) |main::1::smain!0@1#28|)) (bvlshr ((_ zero_extend 8) (_ bv6 8)) distance?)))((_ extract 31 0) ?withop))))

; set_to true (equal)
(define-fun |main::1::smain!0@1#30| () (_ BitVec 48) (ite |goto_symex::&92;guard#11| |main::1::smain!0@1#29| |main::1::smain!0@1#28|))

; set_to true (equal)
(define-fun |main::1::smain!0@1#31| () (_ BitVec 48) |main::1::smain!0@1#28|)

; set_to true
(assert (= |goto_symex::&92;guard#12| (= ((_ zero_extend 24) ((_ extract 7 0) (bvlshr ((_ extract 47 32) |main::1::smain!0@1#31|) (bvmul (_ bv8 16) ((_ extract 15 0) ((_ zero_extend 56) ((_ extract 31 24) |main::1::smain!0@1#31|))))))) (_ bv6 32))))

; set_to true (equal)
(define-fun |main::1::smain!0@1#32| () (_ BitVec 48) (let ((?withop |main::1::smain!0@1#31|)) (concat ((_ extract 47 16) ?withop) (let ((distance? (bvmul (_ bv8 16) ((_ extract 15 0) ((_ zero_extend 56) ((_ extract 31 24) |main::1::smain!0@1#31|)))))) (bvor (bvand (bvlshr (_ bv65535 16) distance?) ((_ extract 15 0) |main::1::smain!0@1#31|)) (bvlshr ((_ zero_extend 8) (_ bv1 8)) distance?))))))

; set_to true (equal)
(define-fun |main::1::smain!0@1#33| () (_ BitVec 48) (let ((?withop |main::1::smain!0@1#32|)) (concat (concat ((_ extract 47 24) ?withop) (ite (not (= (= ((_ extract 31 24) |main::1::smain!0@1#32|) (_ bv0 8)) false))  (_ bv1 8) (_ bv0 8))) ((_ extract 15 0) ?withop))))

; set_to true (equal)
(define-fun |main::1::smain!0@1#34| () (_ BitVec 48) (let ((?withop |main::1::smain!0@1#33|)) (concat (let ((distance? (bvmul (_ bv8 16) ((_ extract 15 0) ((_ zero_extend 56) ((_ extract 31 24) |main::1::smain!0@1#33|)))))) (bvor (bvand (bvlshr (_ bv65535 16) distance?) ((_ extract 47 32) |main::1::smain!0@1#33|)) (bvlshr ((_ zero_extend 8) (_ bv0 8)) distance?)))((_ extract 31 0) ?withop))))

; set_to true (equal)
(define-fun |main::1::smain!0@1#35| () (_ BitVec 48) (ite |goto_symex::&92;guard#12| |main::1::smain!0@1#34| |main::1::smain!0@1#31|))

; set_to true (equal)
(define-fun |main::1::smain!0@1#36| () (_ BitVec 48) (ite |goto_symex::&92;guard#10| |main::1::smain!0@1#30| |main::1::smain!0@1#35|))

; set_to true (equal)
(define-fun |main::1::smain!0@1#37| () (_ BitVec 48) (ite |goto_symex::&92;guard#8| |main::1::smain!0@1#27| |main::1::smain!0@1#36|))

; set_to true (equal)
(define-fun |main::1::smain!0@1#38| () (_ BitVec 48) (ite |goto_symex::&92;guard#6| |main::1::smain!0@1#23| |main::1::smain!0@1#37|))

; set_to true (equal)
(define-fun |main::1::smain!0@1#39| () (_ BitVec 48) (ite |goto_symex::&92;guard#4| |main::1::smain!0@1#17| |main::1::smain!0@1#38|))

; set_to true (equal)
(define-fun |main::1::smain!0@1#40| () (_ BitVec 48) (ite |goto_symex::&92;guard#3| |main::1::smain!0@1#12| |main::1::smain!0@1#39|))

; set_to true (equal)
(define-fun |main::1::smain!0@1#41| () (_ BitVec 48) (ite |goto_symex::&92;guard#1| |main::1::smain!0@1#9| |main::1::smain!0@1#40|))

; set_to true
(assert (= |goto_symex::&92;guard#13| (= ((_ zero_extend 24) ((_ extract 7 0) (bvlshr ((_ extract 47 32) |main::1::smain!0@1#41|) (bvmul (_ bv8 16) ((_ extract 15 0) (_ bv0 64)))))) (_ bv5 32))))

; set_to true (equal)
(define-fun |main::$tmp::::tmp_if_expr$1!0@1#2| () Bool (= ((_ zero_extend 24) ((_ extract 7 0) (bvlshr ((_ extract 47 32) |main::1::smain!0@1#41|) (bvmul (_ bv8 16) ((_ extract 15 0) (_ bv1 64)))))) (_ bv5 32)))

; find_symbols
(declare-fun |main::$tmp::::tmp_if_expr$1!0@1#1| () Bool)
; set_to true (equal)
(define-fun |main::$tmp::::tmp_if_expr$1!0@1#3| () Bool |main::$tmp::::tmp_if_expr$1!0@1#1|)

; set_to true (equal)
(define-fun |main::$tmp::::tmp_if_expr$1!0@1#4| () Bool false)

; set_to true (equal)
(define-fun |main::$tmp::::tmp_if_expr$1!0@1#5| () Bool (and |goto_symex::&92;guard#13| |main::$tmp::::tmp_if_expr$1!0@1#2|))

; convert
(define-fun |B50| () Bool (= |main::1::clock!0@1#1| |main::1::clock!0@1#1|))

; convert
(define-fun |B51| () Bool (= |main::1::select!0@1#1| |main::1::select!0@1#1|))

; convert
(define-fun |B52| () Bool (= |main::1::pause!0@1#1| |main::1::pause!0@1#1|))

; convert
(define-fun |B53| () Bool (= |main::1::smain!0@1#1| |main::1::smain!0@1#1|))

; convert
(define-fun |B54| () Bool (= |main::$tmp::::tmp_if_expr$1!0@1#1| |main::$tmp::::tmp_if_expr$1!0@1#1|))

; set_to false
(assert (not |main::$tmp::::tmp_if_expr$1!0@1#5|))

; convert
(define-fun |B55| () Bool (not (= ((_ zero_extend 24) ((_ extract 7 0) (bvlshr ((_ extract 47 32) |main::1::smain!0@1#7|) (bvmul (_ bv8 16) ((_ extract 15 0) ((_ zero_extend 56) ((_ extract 31 24) |main::1::smain!0@1#7|))))))) (_ bv0 32))))

; convert
(define-fun |B56| () Bool (not (= |dekker::pause!0@1#1| (_ bv0 8))))

; convert
(define-fun |B57| () Bool (not (= ((_ zero_extend 24) ((_ extract 7 0) (bvlshr ((_ extract 47 32) |main::1::smain!0@1#10|) (bvmul (_ bv8 16) ((_ extract 15 0) ((_ zero_extend 56) ((_ extract 31 24) |main::1::smain!0@1#10|))))))) (_ bv1 32))))

; convert
(define-fun |B58| () Bool (not (= ((_ zero_extend 24) ((_ extract 7 0) (bvlshr ((_ extract 47 32) |main::1::smain!0@1#13|) (bvmul (_ bv8 16) ((_ extract 15 0) ((_ zero_extend 56) ((_ extract 31 24) |main::1::smain!0@1#13|))))))) (_ bv2 32))))

; convert
(define-fun |B59| () Bool (not (= ((_ zero_extend 24) ((_ extract 7 0) (bvlshr ((_ extract 15 0) |main::1::smain!0@1#13|) (bvmul (_ bv8 16) ((_ extract 15 0) (ite (= ((_ extract 31 24) |main::1::smain!0@1#13|) (_ bv0 8)) (_ bv1 64) (_ bv0 64))))))) (_ bv1 32))))

; convert
(define-fun |B60| () Bool (not (= ((_ zero_extend 24) ((_ extract 7 0) (bvlshr ((_ extract 47 32) |main::1::smain!0@1#18|) (bvmul (_ bv8 16) ((_ extract 15 0) ((_ zero_extend 56) ((_ extract 31 24) |main::1::smain!0@1#18|))))))) (_ bv3 32))))

; convert
(define-fun |B61| () Bool (not (= ((_ extract 23 16) |main::1::smain!0@1#18|) ((_ extract 31 24) |main::1::smain!0@1#18|))))

; convert
(define-fun |B62| () Bool (not (= ((_ zero_extend 24) ((_ extract 7 0) (bvlshr ((_ extract 47 32) |main::1::smain!0@1#24|) (bvmul (_ bv8 16) ((_ extract 15 0) ((_ zero_extend 56) ((_ extract 31 24) |main::1::smain!0@1#24|))))))) (_ bv4 32))))

; convert
(define-fun |B63| () Bool (not (= ((_ extract 23 16) |main::1::smain!0@1#24|) ((_ extract 31 24) |main::1::smain!0@1#24|))))

; convert
(define-fun |B64| () Bool (not (= ((_ zero_extend 24) ((_ extract 7 0) (bvlshr ((_ extract 47 32) |main::1::smain!0@1#28|) (bvmul (_ bv8 16) ((_ extract 15 0) ((_ zero_extend 56) ((_ extract 31 24) |main::1::smain!0@1#28|))))))) (_ bv5 32))))

; convert
(define-fun |B65| () Bool (not (= |dekker::pause!0@1#1| (_ bv0 8))))

; convert
(define-fun |B66| () Bool (not (= ((_ zero_extend 24) ((_ extract 7 0) (bvlshr ((_ extract 47 32) |main::1::smain!0@1#31|) (bvmul (_ bv8 16) ((_ extract 15 0) ((_ zero_extend 56) ((_ extract 31 24) |main::1::smain!0@1#31|))))))) (_ bv6 32))))

; convert
(define-fun |B67| () Bool (not (= ((_ zero_extend 24) ((_ extract 7 0) (bvlshr ((_ extract 47 32) |main::1::smain!0@1#41|) (bvmul (_ bv8 16) ((_ extract 15 0) (_ bv0 64)))))) (_ bv5 32))))

(check-sat)

(get-value (|B0|))
(get-value (|B1|))
(get-value (|B10|))
(get-value (|B11|))
(get-value (|B12|))
(get-value (|B13|))
(get-value (|B14|))
(get-value (|B15|))
(get-value (|B16|))
(get-value (|B17|))
(get-value (|B18|))
(get-value (|B19|))
(get-value (|B2|))
(get-value (|B20|))
(get-value (|B21|))
(get-value (|B22|))
(get-value (|B23|))
(get-value (|B24|))
(get-value (|B25|))
(get-value (|B26|))
(get-value (|B27|))
(get-value (|B28|))
(get-value (|B29|))
(get-value (|B3|))
(get-value (|B30|))
(get-value (|B31|))
(get-value (|B32|))
(get-value (|B33|))
(get-value (|B34|))
(get-value (|B35|))
(get-value (|B36|))
(get-value (|B37|))
(get-value (|B38|))
(get-value (|B39|))
(get-value (|B4|))
(get-value (|B40|))
(get-value (|B41|))
(get-value (|B42|))
(get-value (|B43|))
(get-value (|B44|))
(get-value (|B45|))
(get-value (|B46|))
(get-value (|B47|))
(get-value (|B48|))
(get-value (|B49|))
(get-value (|B5|))
(get-value (|B50|))
(get-value (|B51|))
(get-value (|B52|))
(get-value (|B53|))
(get-value (|B54|))
(get-value (|B55|))
(get-value (|B56|))
(get-value (|B57|))
(get-value (|B58|))
(get-value (|B59|))
(get-value (|B6|))
(get-value (|B60|))
(get-value (|B61|))
(get-value (|B62|))
(get-value (|B63|))
(get-value (|B64|))
(get-value (|B65|))
(get-value (|B66|))
(get-value (|B67|))
(get-value (|B7|))
(get-value (|B8|))
(get-value (|B9|))
(get-value (|L0#1|))
(get-value (|L1#1|))
(get-value (|L2#1|))
(get-value (|L3#1|))
(get-value (|L4#1|))
(get-value (|L5#1|))
(get-value (|L6#1|))
(get-value (|__CPROVER_dead_object#1|))
(get-value (|__CPROVER_deallocated#1|))
(get-value (|__CPROVER_malloc_is_new_array#1|))
(get-value (|__CPROVER_malloc_object#1|))
(get-value (|__CPROVER_malloc_size#1|))
(get-value (|__CPROVER_memory_leak#1|))
(get-value (|__CPROVER_next_thread_id#1|))
(get-value (|__CPROVER_pipe_count#1|))
(get-value (|__CPROVER_rounding_mode!0#1|))
(get-value (|__CPROVER_thread_id!0#1|))
(get-value (|__CPROVER_threads_exited#1|))
(get-value (|dekker::clock!0@1#1|))
(get-value (|dekker::pause!0@1#1|))
(get-value (|dekker::select!0@1#1|))
(get-value (|dekker::smain!0@1#1|))
(get-value (|goto_symex::&92;guard#1|))
(get-value (|goto_symex::&92;guard#10|))
(get-value (|goto_symex::&92;guard#11|))
(get-value (|goto_symex::&92;guard#12|))
(get-value (|goto_symex::&92;guard#13|))
(get-value (|goto_symex::&92;guard#2|))
(get-value (|goto_symex::&92;guard#3|))
(get-value (|goto_symex::&92;guard#4|))
(get-value (|goto_symex::&92;guard#5|))
(get-value (|goto_symex::&92;guard#6|))
(get-value (|goto_symex::&92;guard#7|))
(get-value (|goto_symex::&92;guard#8|))
(get-value (|goto_symex::&92;guard#9|))
(get-value (|initial::clock!0@1#1|))
(get-value (|initial::pause!0@1#1|))
(get-value (|initial::select!0@1#1|))
(get-value (|initial::smain!0@1#1|))
(get-value (|main::$tmp::::tmp_if_expr$1!0@1#1|))
(get-value (|main::$tmp::::tmp_if_expr$1!0@1#2|))
(get-value (|main::$tmp::::tmp_if_expr$1!0@1#3|))
(get-value (|main::$tmp::::tmp_if_expr$1!0@1#4|))
(get-value (|main::$tmp::::tmp_if_expr$1!0@1#5|))
(get-value (|main::1::clock!0@1#1|))
(get-value (|main::1::pause!0@1#1|))
(get-value (|main::1::select!0@1#1|))
(get-value (|main::1::select!0@1#2|))
(get-value (|main::1::smain!0@1|))
(get-value (|main::1::smain!0@1#1|))
(get-value (|main::1::smain!0@1#10|))
(get-value (|main::1::smain!0@1#11|))
(get-value (|main::1::smain!0@1#12|))
(get-value (|main::1::smain!0@1#13|))
(get-value (|main::1::smain!0@1#14|))
(get-value (|main::1::smain!0@1#15|))
(get-value (|main::1::smain!0@1#16|))
(get-value (|main::1::smain!0@1#17|))
(get-value (|main::1::smain!0@1#18|))
(get-value (|main::1::smain!0@1#19|))
(get-value (|main::1::smain!0@1#2|))
(get-value (|main::1::smain!0@1#20|))
(get-value (|main::1::smain!0@1#21|))
(get-value (|main::1::smain!0@1#22|))
(get-value (|main::1::smain!0@1#23|))
(get-value (|main::1::smain!0@1#24|))
(get-value (|main::1::smain!0@1#25|))
(get-value (|main::1::smain!0@1#26|))
(get-value (|main::1::smain!0@1#27|))
(get-value (|main::1::smain!0@1#28|))
(get-value (|main::1::smain!0@1#29|))
(get-value (|main::1::smain!0@1#3|))
(get-value (|main::1::smain!0@1#30|))
(get-value (|main::1::smain!0@1#31|))
(get-value (|main::1::smain!0@1#32|))
(get-value (|main::1::smain!0@1#33|))
(get-value (|main::1::smain!0@1#34|))
(get-value (|main::1::smain!0@1#35|))
(get-value (|main::1::smain!0@1#36|))
(get-value (|main::1::smain!0@1#37|))
(get-value (|main::1::smain!0@1#38|))
(get-value (|main::1::smain!0@1#39|))
(get-value (|main::1::smain!0@1#4|))
(get-value (|main::1::smain!0@1#40|))
(get-value (|main::1::smain!0@1#41|))
(get-value (|main::1::smain!0@1#5|))
(get-value (|main::1::smain!0@1#6|))
(get-value (|main::1::smain!0@1#7|))
(get-value (|main::1::smain!0@1#8|))
(get-value (|main::1::smain!0@1#9|))
(get-value (|nondet_symex::nondet0|))

(exit)
; end of SMT2 file
