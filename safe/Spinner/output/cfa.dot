digraph CFA {
85 [shape="circle" label="N85\n209"]
99 [shape="circle" label="N99\n208"]
100 [shape="circle" label="N100\n207"]
101 [shape="circle" label="N101\n206"]
102 [shape="circle" label="N102\n205"]
103 [shape="circle" label="N103\n204"]
104 [shape="circle" label="N104\n203"]
105 [shape="circle" label="N105\n202"]
106 [shape="circle" label="N106\n201"]
107 [shape="circle" label="N107\n200"]
108 [shape="circle" label="N108\n199"]
109 [shape="circle" label="N109\n198"]
110 [shape="circle" label="N110\n197"]
111 [shape="circle" label="N111\n196"]
112 [shape="circle" label="N112\n195"]
113 [shape="circle" label="N113\n194"]
114 [shape="circle" label="N114\n193"]
115 [shape="circle" label="N115\n192"]
116 [shape="circle" label="N116\n191"]
117 [shape="circle" label="N117\n190"]
118 [shape="circle" label="N118\n189"]
119 [shape="circle" label="N119\n188"]
120 [shape="circle" label="N120\n187"]
121 [shape="circle" label="N121\n186"]
122 [shape="circle" label="N122\n185"]
123 [shape="circle" label="N123\n184"]
124 [shape="circle" label="N124\n183"]
125 [shape="circle" label="N125\n182"]
126 [shape="circle" label="N126\n181"]
127 [shape="circle" label="N127\n180"]
128 [shape="circle" label="N128\n179"]
129 [shape="circle" label="N129\n178"]
130 [shape="circle" label="N130\n177"]
131 [shape="circle" label="N131\n176"]
132 [shape="circle" label="N132\n175"]
133 [shape="circle" label="N133\n174"]
134 [shape="circle" label="N134\n173"]
135 [shape="circle" label="N135\n172"]
136 [shape="circle" label="N136\n171"]
137 [shape="circle" label="N137\n170"]
138 [shape="circle" label="N138\n169"]
139 [shape="circle" label="N139\n168"]
140 [shape="circle" label="N140\n167"]
141 [shape="circle" label="N141\n166"]
142 [shape="circle" label="N142\n165"]
143 [shape="circle" label="N143\n164"]
144 [shape="circle" label="N144\n163"]
145 [shape="circle" label="N145\n162"]
146 [shape="circle" label="N146\n161"]
147 [shape="circle" label="N147\n160"]
148 [shape="circle" label="N148\n159"]
149 [shape="circle" label="N149\n158"]
150 [shape="circle" label="N150\n157"]
151 [shape="circle" label="N151\n156"]
152 [shape="circle" label="N152\n155"]
153 [shape="circle" label="N153\n154"]
154 [shape="circle" label="N154\n153"]
155 [shape="circle" label="N155\n152"]
156 [shape="circle" label="N156\n151"]
157 [shape="circle" label="N157\n150"]
158 [shape="circle" label="N158\n149"]
159 [shape="circle" label="N159\n148"]
160 [shape="circle" label="N160\n147"]
161 [shape="circle" label="N161\n146"]
162 [shape="circle" label="N162\n145"]
163 [shape="circle" label="N163\n144"]
164 [shape="circle" label="N164\n143"]
165 [shape="circle" label="N165\n142"]
166 [shape="circle" label="N166\n141"]
167 [shape="circle" label="N167\n140"]
168 [shape="circle" label="N168\n139"]
169 [shape="circle" label="N169\n138"]
170 [shape="circle" label="N170\n137"]
171 [shape="circle" label="N171\n136"]
172 [shape="circle" label="N172\n135"]
173 [shape="circle" label="N173\n134"]
174 [shape="circle" label="N174\n133"]
175 [shape="circle" label="N175\n132"]
176 [shape="circle" label="N176\n131"]
177 [shape="circle" label="N177\n130"]
178 [shape="circle" label="N178\n129"]
179 [shape="circle" label="N179\n128"]
180 [shape="circle" label="N180\n127"]
181 [shape="circle" label="N181\n126"]
182 [shape="circle" label="N182\n125"]
183 [shape="circle" label="N183\n124"]
184 [shape="circle" label="N184\n123"]
185 [shape="circle" label="N185\n122"]
186 [shape="circle" label="N186\n121"]
187 [shape="circle" label="N187\n120"]
188 [shape="circle" label="N188\n119"]
189 [shape="circle" label="N189\n118"]
190 [shape="circle" label="N190\n117"]
191 [shape="circle" label="N191\n116"]
192 [shape="circle" label="N192\n115"]
193 [shape="circle" label="N193\n114"]
194 [shape="circle" label="N194\n113"]
195 [shape="circle" label="N195\n112"]
196 [shape="circle" label="N196\n111"]
197 [shape="circle" label="N197\n110"]
198 [shape="circle" label="N198\n109"]
199 [shape="circle" label="N199\n108"]
200 [shape="circle" label="N200\n107"]
201 [shape="circle" label="N201\n106"]
202 [shape="circle" label="N202\n105"]
203 [shape="circle" label="N203\n104"]
204 [shape="circle" label="N204\n103"]
205 [shape="circle" label="N205\n102"]
206 [shape="circle" label="N206\n101"]
207 [shape="circle" label="N207\n100"]
208 [shape="circle" label="N208\n99"]
209 [shape="circle" label="N209\n98"]
210 [shape="circle" label="N210\n97"]
211 [shape="circle" label="N211\n96"]
212 [shape="circle" label="N212\n95"]
213 [shape="circle" label="N213\n94"]
214 [shape="circle" label="N214\n93"]
215 [shape="circle" label="N215\n92"]
216 [shape="circle" label="N216\n91"]
217 [shape="circle" label="N217\n90"]
218 [shape="circle" label="N218\n89"]
219 [shape="circle" label="N219\n88"]
220 [shape="circle" label="N220\n87"]
221 [shape="circle" label="N221\n86"]
222 [shape="circle" label="N222\n85"]
223 [shape="circle" label="N223\n84"]
224 [shape="circle" label="N224\n83"]
225 [shape="circle" label="N225\n82"]
226 [shape="circle" label="N226\n81"]
227 [shape="circle" label="N227\n80"]
228 [shape="circle" label="N228\n79"]
229 [shape="circle" label="N229\n78"]
230 [shape="circle" label="N230\n77"]
231 [shape="circle" label="N231\n76"]
232 [shape="circle" label="N232\n75"]
233 [shape="circle" label="N233\n74"]
234 [shape="circle" label="N234\n73"]
235 [shape="circle" label="N235\n72"]
236 [shape="circle" label="N236\n71"]
237 [shape="circle" label="N237\n70"]
238 [shape="circle" label="N238\n69"]
239 [shape="circle" label="N239\n68"]
240 [shape="circle" label="N240\n67"]
241 [shape="circle" label="N241\n66"]
242 [shape="circle" label="N242\n65"]
243 [shape="circle" label="N243\n64"]
244 [shape="circle" label="N244\n63"]
245 [shape="circle" label="N245\n62"]
246 [shape="circle" label="N246\n61"]
247 [shape="circle" label="N247\n60"]
248 [shape="circle" label="N248\n59"]
249 [shape="circle" label="N249\n58"]
250 [shape="circle" label="N250\n57"]
251 [shape="circle" label="N251\n56"]
252 [shape="circle" label="N252\n55"]
253 [shape="circle" label="N253\n54"]
254 [shape="circle" label="N254\n53"]
255 [shape="circle" label="N255\n52"]
256 [shape="circle" label="N256\n51"]
257 [shape="circle" label="N257\n50"]
258 [shape="circle" label="N258\n49"]
259 [shape="circle" label="N259\n48"]
260 [shape="circle" label="N260\n47"]
261 [shape="circle" label="N261\n46"]
262 [shape="circle" label="N262\n45"]
263 [shape="circle" label="N263\n44"]
264 [shape="circle" label="N264\n43"]
265 [shape="circle" label="N265\n42"]
266 [shape="circle" label="N266\n41"]
267 [shape="circle" label="N267\n40"]
268 [shape="circle" label="N268\n39"]
269 [shape="circle" label="N269\n38"]
270 [shape="circle" label="N270\n37"]
271 [shape="circle" label="N271\n36"]
272 [shape="circle" label="N272\n35"]
273 [shape="circle" label="N273\n34"]
274 [shape="circle" label="N274\n33"]
275 [shape="circle" label="N275\n32"]
276 [shape="circle" label="N276\n31"]
277 [shape="circle" label="N277\n30"]
278 [shape="circle" label="N278\n29"]
279 [shape="circle" label="N279\n28"]
280 [shape="circle" label="N280\n27"]
281 [shape="circle" label="N281\n26"]
282 [shape="circle" label="N282\n25"]
283 [shape="circle" label="N283\n24"]
284 [shape="circle" label="N284\n23"]
285 [shape="circle" label="N285\n22"]
286 [shape="circle" label="N286\n21"]
287 [shape="circle" label="N287\n20"]
288 [shape="circle" label="N288\n19"]
289 [shape="circle" label="N289\n18"]
290 [shape="circle" label="N290\n17"]
291 [shape="circle" label="N291\n16"]
292 [shape="circle" label="N292\n15"]
293 [shape="circle" label="N293\n14"]
294 [shape="circle" label="N294\n13"]
295 [shape="circle" label="N295\n12"]
86 [shape="circle" label="N86\n11"]
87 [shape="circle" label="N87\n10"]
88 [shape="circle" label="N88\n9"]
89 [shape="circle" label="N89\n8"]
90 [shape="circle" label="N90\n7"]
91 [shape="circle" label="N91\n6"]
92 [shape="doublecircle" label="N92\n5"]
93 [shape="circle" label="N93\n4"]
95 [shape="circle" label="N95\n3"]
96 [shape="circle" label="N96\n2"]
97 [shape="circle" label="N97\n1"]
1 [shape="circle" label="N1\n83"]
2 [shape="circle" label="N2\n82"]
3 [shape="circle" label="N3\n81"]
4 [shape="circle" label="N4\n80"]
5 [shape="circle" label="N5\n79"]
6 [shape="circle" label="N6\n78"]
7 [shape="circle" label="N7\n77"]
8 [shape="circle" label="N8\n76"]
9 [shape="circle" label="N9\n75"]
10 [shape="diamond" label="N10\n74"]
11 [shape="circle" label="N11\n73"]
13 [shape="circle" label="N13\n71"]
14 [shape="circle" label="N14\n70"]
15 [shape="diamond" label="N15\n69"]
16 [shape="circle" label="N16\n68"]
18 [shape="circle" label="N18\n66"]
19 [shape="circle" label="N19\n65"]
20 [shape="diamond" label="N20\n64"]
21 [shape="circle" label="N21\n63"]
23 [shape="circle" label="N23\n61"]
24 [shape="circle" label="N24\n60"]
25 [shape="diamond" label="N25\n59"]
26 [shape="circle" label="N26\n58"]
28 [shape="circle" label="N28\n56"]
29 [shape="circle" label="N29\n55"]
30 [shape="diamond" label="N30\n54"]
31 [shape="circle" label="N31\n53"]
33 [shape="circle" label="N33\n51"]
34 [shape="circle" label="N34\n50"]
35 [shape="diamond" label="N35\n49"]
36 [shape="circle" label="N36\n48"]
38 [shape="circle" label="N38\n46"]
39 [shape="circle" label="N39\n45"]
40 [shape="diamond" label="N40\n44"]
41 [shape="circle" label="N41\n43"]
43 [shape="circle" label="N43\n41"]
44 [shape="circle" label="N44\n40"]
45 [shape="diamond" label="N45\n39"]
46 [shape="circle" label="N46\n38"]
48 [shape="circle" label="N48\n36"]
49 [shape="circle" label="N49\n35"]
50 [shape="diamond" label="N50\n34"]
51 [shape="circle" label="N51\n33"]
53 [shape="circle" label="N53\n31"]
54 [shape="circle" label="N54\n30"]
55 [shape="diamond" label="N55\n29"]
56 [shape="circle" label="N56\n28"]
58 [shape="circle" label="N58\n26"]
59 [shape="diamond" label="N59\n25"]
61 [shape="circle" label="N61\n24"]
63 [shape="circle" label="N63\n23"]
60 [shape="circle" label="N60\n20"]
65 [shape="circle" label="N65\n19"]
66 [shape="circle" label="N66\n18"]
67 [shape="circle" label="N67\n17"]
68 [shape="diamond" label="N68\n16"]
72 [shape="diamond" label="N72\n15"]
71 [shape="diamond" label="N71\n14"]
73 [shape="diamond" label="N73\n13"]
69 [shape="circle" label="N69\n11"]
74 [shape="circle" label="N74\n10"]
75 [shape="circle" label="N75\n9"]
76 [shape="diamond" label="N76\n8"]
80 [shape="diamond" label="N80\n7"]
79 [shape="diamond" label="N79\n6"]
81 [shape="diamond" label="N81\n5"]
77 [shape="circle" label="N77\n3"]
82 [shape="circle" label="N82\n2"]
83 [shape="circle" label="N83\n1"]
0 [shape="circle" label="N0\n0"]
98 [shape="circle" label="N98\n0"]
78 [shape="circle" label="N78\n4"]
70 [shape="circle" label="N70\n12"]
62 [shape="circle" label="N62\n22"]
64 [shape="circle" label="N64\n21"]
57 [shape="circle" label="N57\n27"]
52 [shape="circle" label="N52\n32"]
47 [shape="circle" label="N47\n37"]
42 [shape="circle" label="N42\n42"]
37 [shape="circle" label="N37\n47"]
32 [shape="circle" label="N32\n52"]
27 [shape="circle" label="N27\n57"]
22 [shape="circle" label="N22\n62"]
17 [shape="circle" label="N17\n67"]
12 [shape="circle" label="N12\n72"]
node [shape="circle"]
subgraph cluster_main {
label="main()"
85 -> 99 [label="INIT GLOBAL VARS"]
99 -> 100 [label="typedef unsigned long int size_t;"]
100 -> 101 [label="typedef unsigned char __u_char;"]
101 -> 102 [label="typedef unsigned short int __u_short;"]
102 -> 103 [label="typedef unsigned int __u_int;"]
103 -> 104 [label="typedef unsigned long int __u_long;"]
104 -> 105 [label="typedef signed char __int8_t;"]
105 -> 106 [label="typedef unsigned char __uint8_t;"]
106 -> 107 [label="typedef signed short int __int16_t;"]
107 -> 108 [label="typedef unsigned short int __uint16_t;"]
108 -> 109 [label="typedef signed int __int32_t;"]
109 -> 110 [label="typedef unsigned int __uint32_t;"]
110 -> 111 [label="typedef signed long int __int64_t;"]
111 -> 112 [label="typedef unsigned long int __uint64_t;"]
112 -> 113 [label="typedef long int __quad_t;"]
113 -> 114 [label="typedef unsigned long int __u_quad_t;"]
114 -> 115 [label="typedef unsigned long int __dev_t;"]
115 -> 116 [label="typedef unsigned int __uid_t;"]
116 -> 117 [label="typedef unsigned int __gid_t;"]
117 -> 118 [label="typedef unsigned long int __ino_t;"]
118 -> 119 [label="typedef unsigned long int __ino64_t;"]
119 -> 120 [label="typedef unsigned int __mode_t;"]
120 -> 121 [label="typedef unsigned long int __nlink_t;"]
121 -> 122 [label="typedef long int __off_t;"]
122 -> 123 [label="typedef long int __off64_t;"]
123 -> 124 [label="typedef int __pid_t;"]
124 -> 125 [label="struct __anon_type___fsid_t {   int __val[2]; } ;"]
125 -> 126 [label="typedef struct __anon_type___fsid_t __fsid_t;"]
126 -> 127 [label="typedef long int __clock_t;"]
127 -> 128 [label="typedef unsigned long int __rlim_t;"]
128 -> 129 [label="typedef unsigned long int __rlim64_t;"]
129 -> 130 [label="typedef unsigned int __id_t;"]
130 -> 131 [label="typedef long int __time_t;"]
131 -> 132 [label="typedef unsigned int __useconds_t;"]
132 -> 133 [label="typedef long int __suseconds_t;"]
133 -> 134 [label="typedef int __daddr_t;"]
134 -> 135 [label="typedef int __key_t;"]
135 -> 136 [label="typedef int __clockid_t;"]
136 -> 137 [label="typedef void *__timer_t;"]
137 -> 138 [label="typedef long int __blksize_t;"]
138 -> 139 [label="typedef long int __blkcnt_t;"]
139 -> 140 [label="typedef long int __blkcnt64_t;"]
140 -> 141 [label="typedef unsigned long int __fsblkcnt_t;"]
141 -> 142 [label="typedef unsigned long int __fsblkcnt64_t;"]
142 -> 143 [label="typedef unsigned long int __fsfilcnt_t;"]
143 -> 144 [label="typedef unsigned long int __fsfilcnt64_t;"]
144 -> 145 [label="typedef long int __fsword_t;"]
145 -> 146 [label="typedef long int __ssize_t;"]
146 -> 147 [label="typedef long int __syscall_slong_t;"]
147 -> 148 [label="typedef unsigned long int __syscall_ulong_t;"]
148 -> 149 [label="typedef __off64_t __loff_t;"]
149 -> 150 [label="typedef __quad_t *__qaddr_t;"]
150 -> 151 [label="typedef char *__caddr_t;"]
151 -> 152 [label="typedef long int __intptr_t;"]
152 -> 153 [label="typedef unsigned int __socklen_t;"]
153 -> 154 [label="struct _IO_FILE ;"]
154 -> 155 [label="typedef struct _IO_FILE FILE;"]
155 -> 156 [label="typedef struct _IO_FILE __FILE;"]
156 -> 157 [label="union __anon_type_0 {   unsigned int __wch;   char __wchb[4]; } ;"]
157 -> 158 [label="struct __anon_type___mbstate_t {   int __count;   union __anon_type_0 __value; } ;"]
158 -> 159 [label="typedef struct __anon_type___mbstate_t __mbstate_t;"]
159 -> 160 [label="struct __anon_type__G_fpos_t {   __off_t __pos;   __mbstate_t __state; } ;"]
160 -> 161 [label="typedef struct __anon_type__G_fpos_t _G_fpos_t;"]
161 -> 162 [label="struct __anon_type__G_fpos64_t {   __off64_t __pos;   __mbstate_t __state; } ;"]
162 -> 163 [label="typedef struct __anon_type__G_fpos_t _G_fpos64_t;"]
163 -> 164 [label="typedef __builtin_va_list __gnuc_va_list;"]
164 -> 165 [label="struct _IO_jump_t ;"]
165 -> 166 [label="typedef void _IO_lock_t;"]
166 -> 167 [label="struct _IO_marker {   struct _IO_marker *_next;   struct _IO_FILE *_sbuf;   int _pos; } ;"]
167 -> 168 [label="enum __codecvt_result {   __codecvt_ok = 0,   __codecvt_partial = 1,   __codecvt_error = 2,   __codecvt_noconv = 3 } ;"]
168 -> 169 [label="struct _IO_FILE {   int _flags;   char *_IO_read_ptr;   char *_IO_read_end;   char *_IO_read_base;   char *_IO_write_base;   char *_IO_write_ptr;   char *_IO_write_end;   char *_IO_buf_base;   char *_IO_buf_end;   char *_IO_save_base;   char *_IO_backup_base;   char *_IO_save_end;   struct _IO_marker *_markers;   struct _IO_FILE *_chain;   int _fileno;   int _flags2;   __off_t _old_offset;   unsigned short _cur_column;   signed char _vtable_offset;   char _shortbuf[1];   _IO_lock_t *_lock;   __off64_t _offset;   void *__pad1;   void *__pad2;   void *__pad3;   void *__pad4;   size_t __pad5;   int _mode;   char _unused2[40]; } ;"]
169 -> 170 [label="typedef struct _IO_FILE _IO_FILE;"]
170 -> 171 [label="struct _IO_FILE_plus ;"]
171 -> 172 [label="extern struct _IO_FILE_plus _IO_2_1_stdin_;"]
172 -> 173 [label="extern struct _IO_FILE_plus _IO_2_1_stdout_;"]
173 -> 174 [label="extern struct _IO_FILE_plus _IO_2_1_stderr_;"]
174 -> 175 [label="typedef __ssize_t  __io_read_fn(void *__cookie, char *__buf, size_t __nbytes);"]
175 -> 176 [label="typedef __ssize_t  __io_write_fn(void *__cookie, const char *__buf, size_t __n);"]
176 -> 177 [label="typedef int __io_seek_fn(void *__cookie, __off64_t *__pos, int __w);"]
177 -> 178 [label="typedef int __io_close_fn(void *__cookie);"]
178 -> 179 [label="int __underflow(_IO_FILE *);"]
179 -> 180 [label="int __uflow(_IO_FILE *);"]
180 -> 181 [label="int __overflow(_IO_FILE *, int);"]
181 -> 182 [label="int _IO_getc(_IO_FILE *__fp);"]
182 -> 183 [label="int _IO_putc(int __c, _IO_FILE *__fp);"]
183 -> 184 [label="int _IO_feof(_IO_FILE *__fp);"]
184 -> 185 [label="int _IO_ferror(_IO_FILE *__fp);"]
185 -> 186 [label="int _IO_peekc_locked(_IO_FILE *__fp);"]
186 -> 187 [label="void _IO_flockfile(_IO_FILE *);"]
187 -> 188 [label="void _IO_funlockfile(_IO_FILE *);"]
188 -> 189 [label="int _IO_ftrylockfile(_IO_FILE *);"]
189 -> 190 [label="int _IO_vfscanf(_IO_FILE *, const char *, __gnuc_va_list , int *);"]
190 -> 191 [label="int _IO_vfprintf(_IO_FILE *, const char *, __gnuc_va_list );"]
191 -> 192 [label="__ssize_t  _IO_padn(_IO_FILE *, int, __ssize_t );"]
192 -> 193 [label="size_t  _IO_sgetn(_IO_FILE *, void *, size_t );"]
193 -> 194 [label="__off64_t  _IO_seekoff(_IO_FILE *, __off64_t , int, int);"]
194 -> 195 [label="__off64_t  _IO_seekpos(_IO_FILE *, __off64_t , int);"]
195 -> 196 [label="void _IO_free_backup_area(_IO_FILE *);"]
196 -> 197 [label="typedef __gnuc_va_list va_list;"]
197 -> 198 [label="typedef __off_t off_t;"]
198 -> 199 [label="typedef __ssize_t ssize_t;"]
199 -> 200 [label="typedef _G_fpos_t fpos_t;"]
200 -> 201 [label="extern struct _IO_FILE *stdin;"]
201 -> 202 [label="extern struct _IO_FILE *stdout;"]
202 -> 203 [label="extern struct _IO_FILE *stderr;"]
203 -> 204 [label="int remove(const char *__filename);"]
204 -> 205 [label="int rename(const char *__old, const char *__new);"]
205 -> 206 [label="int renameat(int __oldfd, const char *__old, int __newfd, const char *__new);"]
206 -> 207 [label="FILE * tmpfile();"]
207 -> 208 [label="char * tmpnam(char *__s);"]
208 -> 209 [label="char * tmpnam_r(char *__s);"]
209 -> 210 [label="char * tempnam(const char *__dir, const char *__pfx);"]
210 -> 211 [label="int fclose(FILE *__stream);"]
211 -> 212 [label="int fflush(FILE *__stream);"]
212 -> 213 [label="int fflush_unlocked(FILE *__stream);"]
213 -> 214 [label="FILE * fopen(const char *__filename, const char *__modes);"]
214 -> 215 [label="FILE * freopen(const char *__filename, const char *__modes, FILE *__stream);"]
215 -> 216 [label="FILE * fdopen(int __fd, const char *__modes);"]
216 -> 217 [label="FILE * fmemopen(void *__s, size_t __len, const char *__modes);"]
217 -> 218 [label="FILE * open_memstream(char **__bufloc, size_t *__sizeloc);"]
218 -> 219 [label="void setbuf(FILE *__stream, char *__buf);"]
219 -> 220 [label="int setvbuf(FILE *__stream, char *__buf, int __modes, size_t __n);"]
220 -> 221 [label="void setbuffer(FILE *__stream, char *__buf, size_t __size);"]
221 -> 222 [label="void setlinebuf(FILE *__stream);"]
222 -> 223 [label="int fprintf(FILE *__stream, const char *__format, ...);"]
223 -> 224 [label="int printf(const char *__format, ...);"]
224 -> 225 [label="int sprintf(char *__s, const char *__format, ...);"]
225 -> 226 [label="int vfprintf(FILE *__s, const char *__format, __gnuc_va_list __arg);"]
226 -> 227 [label="int vprintf(const char *__format, __gnuc_va_list __arg);"]
227 -> 228 [label="int vsprintf(char *__s, const char *__format, __gnuc_va_list __arg);"]
228 -> 229 [label="int snprintf(char *__s, size_t __maxlen, const char *__format, ...);"]
229 -> 230 [label="int vsnprintf(char *__s, size_t __maxlen, const char *__format, __gnuc_va_list __arg);"]
230 -> 231 [label="int vdprintf(int __fd, const char *__fmt, __gnuc_va_list __arg);"]
231 -> 232 [label="int dprintf(int __fd, const char *__fmt, ...);"]
232 -> 233 [label="int fscanf(FILE *__stream, const char *__format, ...);"]
233 -> 234 [label="int scanf(const char *__format, ...);"]
234 -> 235 [label="int sscanf(const char *__s, const char *__format, ...);"]
235 -> 236 [label="int vfscanf(FILE *__s, const char *__format, __gnuc_va_list __arg);"]
236 -> 237 [label="int vscanf(const char *__format, __gnuc_va_list __arg);"]
237 -> 238 [label="int vsscanf(const char *__s, const char *__format, __gnuc_va_list __arg);"]
238 -> 239 [label="int fgetc(FILE *__stream);"]
239 -> 240 [label="int getc(FILE *__stream);"]
240 -> 241 [label="int getchar();"]
241 -> 242 [label="int getc_unlocked(FILE *__stream);"]
242 -> 243 [label="int getchar_unlocked();"]
243 -> 244 [label="int fgetc_unlocked(FILE *__stream);"]
244 -> 245 [label="int fputc(int __c, FILE *__stream);"]
245 -> 246 [label="int putc(int __c, FILE *__stream);"]
246 -> 247 [label="int putchar(int __c);"]
247 -> 248 [label="int fputc_unlocked(int __c, FILE *__stream);"]
248 -> 249 [label="int putc_unlocked(int __c, FILE *__stream);"]
249 -> 250 [label="int putchar_unlocked(int __c);"]
250 -> 251 [label="int getw(FILE *__stream);"]
251 -> 252 [label="int putw(int __w, FILE *__stream);"]
252 -> 253 [label="char * fgets(char *__s, int __n, FILE *__stream);"]
253 -> 254 [label="__ssize_t  __getdelim(char **__lineptr, size_t *__n, int __delimiter, FILE *__stream);"]
254 -> 255 [label="__ssize_t  getdelim(char **__lineptr, size_t *__n, int __delimiter, FILE *__stream);"]
255 -> 256 [label="__ssize_t  getline(char **__lineptr, size_t *__n, FILE *__stream);"]
256 -> 257 [label="int fputs(const char *__s, FILE *__stream);"]
257 -> 258 [label="int puts(const char *__s);"]
258 -> 259 [label="int ungetc(int __c, FILE *__stream);"]
259 -> 260 [label="size_t  fread(void *__ptr, size_t __size, size_t __n, FILE *__stream);"]
260 -> 261 [label="size_t  fwrite(const void *__ptr, size_t __size, size_t __n, FILE *__s);"]
261 -> 262 [label="size_t  fread_unlocked(void *__ptr, size_t __size, size_t __n, FILE *__stream);"]
262 -> 263 [label="size_t  fwrite_unlocked(const void *__ptr, size_t __size, size_t __n, FILE *__stream);"]
263 -> 264 [label="int fseek(FILE *__stream, long int __off, int __whence);"]
264 -> 265 [label="long int ftell(FILE *__stream);"]
265 -> 266 [label="void rewind(FILE *__stream);"]
266 -> 267 [label="int fseeko(FILE *__stream, __off_t __off, int __whence);"]
267 -> 268 [label="__off_t  ftello(FILE *__stream);"]
268 -> 269 [label="int fgetpos(FILE *__stream, fpos_t *__pos);"]
269 -> 270 [label="int fsetpos(FILE *__stream, fpos_t *__pos);"]
270 -> 271 [label="void clearerr(FILE *__stream);"]
271 -> 272 [label="int feof(FILE *__stream);"]
272 -> 273 [label="int ferror(FILE *__stream);"]
273 -> 274 [label="void clearerr_unlocked(FILE *__stream);"]
274 -> 275 [label="int feof_unlocked(FILE *__stream);"]
275 -> 276 [label="int ferror_unlocked(FILE *__stream);"]
276 -> 277 [label="void perror(const char *__s);"]
277 -> 278 [label="extern int sys_nerr;"]
278 -> 279 [label="extern const const char *sys_errlist[];"]
279 -> 280 [label="int fileno(FILE *__stream);"]
280 -> 281 [label="int fileno_unlocked(FILE *__stream);"]
281 -> 282 [label="FILE * popen(const char *__command, const char *__modes);"]
282 -> 283 [label="int pclose(FILE *__stream);"]
283 -> 284 [label="char * ctermid(char *__s);"]
284 -> 285 [label="void flockfile(FILE *__stream);"]
285 -> 286 [label="int ftrylockfile(FILE *__stream);"]
286 -> 287 [label="void funlockfile(FILE *__stream);"]
287 -> 288 [label="void __assert_fail(const char *__assertion, const char *__file, unsigned int __line, const char *__function);"]
288 -> 289 [label="void __assert_perror_fail(int __errnum, const char *__file, unsigned int __line, const char *__function);"]
289 -> 290 [label="void __assert(const char *__assertion, const char *__file, int __line);"]
290 -> 291 [label="_Bool nondet_bool();"]
291 -> 292 [label="struct state_elements_main {   unsigned int inr;   _Bool spl;   unsigned int dout; } ;"]
292 -> 293 [label="struct state_elements_main smain = {  };"]
293 -> 294 [label="void spinner(_Bool clock, _Bool spin, unsigned char amount, unsigned int din, unsigned int *dout);"]
294 -> 295 [label="void main();"]
295 -> 86 [label="Function start dummy edge"]
86 -> 87 [label="_Bool clock;"]
87 -> 88 [label="_Bool spin;"]
88 -> 89 [label="unsigned char amount;"]
89 -> 90 [label="unsigned int din;"]
90 -> 91 [label="unsigned int dout;"]
91 -> 92 [label="while"]
92 -> 93 [label=""]
93 -> 95 [label="spin = nondet_bool();"]
95 -> 96 [label="amount = nondet_bool();"]
96 -> 97 [label="din = nondet_bool();"]
97 -> 98 [label="spinner(clock, spin, amount, din, &dout);" style="dotted" arrowhead="empty"]
98 -> 92 [label=""]}
subgraph cluster_spinner {
label="spinner()"
1 -> 2 [label="Function start dummy edge"]
2 -> 3 [label="unsigned int tmp0;"]
3 -> 4 [label="unsigned int tmp1;"]
4 -> 5 [label="unsigned int tmp2;"]
5 -> 6 [label="unsigned int tmp3;"]
6 -> 7 [label="unsigned int tmp4;"]
7 -> 8 [label="unsigned int tmp5;"]
8 -> 9 [label="tmp0 = smain.inr;"]
9 -> 10 [label="unsigned int __CPAchecker_TMP_0;"]
10 -> 12 [label="[(amount & 1) == 0]"]
10 -> 11 [label="[!((amount & 1) == 0)]"]
11 -> 13 [label="__CPAchecker_TMP_0 = (tmp0 >> 1) & 2147483647;"]
13 -> 14 [label="tmp1 = __CPAchecker_TMP_0 | ((tmp1 >> 31) << 31);"]
14 -> 15 [label="unsigned int __CPAchecker_TMP_1;"]
15 -> 17 [label="[(amount & 1) == 0]"]
15 -> 16 [label="[!((amount & 1) == 0)]"]
16 -> 18 [label="__CPAchecker_TMP_1 = tmp0 & 1;"]
18 -> 19 [label="tmp1 = (tmp1 & 2147483647) | (__CPAchecker_TMP_1 << 31);"]
19 -> 20 [label="unsigned int __CPAchecker_TMP_2;"]
20 -> 22 [label="[((amount >> 1) & 1) == 0]"]
20 -> 21 [label="[!(((amount >> 1) & 1) == 0)]"]
21 -> 23 [label="__CPAchecker_TMP_2 = (tmp1 >> 2) & 1073741823;"]
23 -> 24 [label="tmp2 = __CPAchecker_TMP_2 | ((tmp2 >> 30) << 30);"]
24 -> 25 [label="unsigned int __CPAchecker_TMP_3;"]
25 -> 27 [label="[((amount >> 1) & 1) == 0]"]
25 -> 26 [label="[!(((amount >> 1) & 1) == 0)]"]
26 -> 28 [label="__CPAchecker_TMP_3 = tmp1 & 3;"]
28 -> 29 [label="tmp2 = ((__CPAchecker_TMP_3 & 3) << 30) | (tmp2 & 1073741823);"]
29 -> 30 [label="unsigned int __CPAchecker_TMP_4;"]
30 -> 32 [label="[((amount >> 2) & 1) == 0]"]
30 -> 31 [label="[!(((amount >> 2) & 1) == 0)]"]
31 -> 33 [label="__CPAchecker_TMP_4 = (tmp2 >> 4) & 268435455;"]
33 -> 34 [label="tmp3 = __CPAchecker_TMP_4 | ((tmp3 >> 28) << 28);"]
34 -> 35 [label="unsigned int __CPAchecker_TMP_5;"]
35 -> 37 [label="[((amount >> 2) & 1) == 0]"]
35 -> 36 [label="[!(((amount >> 2) & 1) == 0)]"]
36 -> 38 [label="__CPAchecker_TMP_5 = tmp2 & 15;"]
38 -> 39 [label="tmp3 = ((__CPAchecker_TMP_5 & 15) << 28) | (tmp3 & 268435455);"]
39 -> 40 [label="unsigned int __CPAchecker_TMP_6;"]
40 -> 42 [label="[((amount >> 3) & 1) == 0]"]
40 -> 41 [label="[!(((amount >> 3) & 1) == 0)]"]
41 -> 43 [label="__CPAchecker_TMP_6 = (tmp3 >> 8) & 16777215;"]
43 -> 44 [label="tmp4 = __CPAchecker_TMP_6 | ((tmp4 >> 24) << 24);"]
44 -> 45 [label="unsigned int __CPAchecker_TMP_7;"]
45 -> 47 [label="[((amount >> 3) & 1) == 0]"]
45 -> 46 [label="[!(((amount >> 3) & 1) == 0)]"]
46 -> 48 [label="__CPAchecker_TMP_7 = tmp3 & 255;"]
48 -> 49 [label="tmp4 = ((__CPAchecker_TMP_7 & 255) << 24) | (tmp3 & 16777215);"]
49 -> 50 [label="unsigned int __CPAchecker_TMP_8;"]
50 -> 52 [label="[((amount >> 4) & 1) == 0]"]
50 -> 51 [label="[!(((amount >> 4) & 1) == 0)]"]
51 -> 53 [label="__CPAchecker_TMP_8 = (tmp4 >> 16) & 65535;"]
53 -> 54 [label="tmp5 = __CPAchecker_TMP_8 | ((tmp4 >> 16) << 16);"]
54 -> 55 [label="unsigned int __CPAchecker_TMP_9;"]
55 -> 57 [label="[((amount >> 4) & 1) == 0]"]
55 -> 56 [label="[!(((amount >> 4) & 1) == 0)]"]
56 -> 58 [label="__CPAchecker_TMP_9 = tmp4 & 65535;"]
58 -> 59 [label="tmp5 = ((__CPAchecker_TMP_9 & 65535) << 16) | (tmp4 & 65535);"]
59 -> 62 [label="[(smain.spl) == 0]"]
59 -> 61 [label="[!((smain.spl) == 0)]"]
61 -> 63 [label="smain.inr = smain.dout;"]
63 -> 60 [label=""]
60 -> 65 [label="smain.dout = tmp5;"]
65 -> 66 [label="smain.spl = spin;"]
66 -> 67 [label="*dout = smain.dout;"]
67 -> 68 [label="void __CPAchecker_TMP_11;"]
68 -> 69 [label="[((smain.inr) & 1) == 0]"]
68 -> 72 [label="[!(((smain.inr) & 1) == 0)]"]
72 -> 69 [label="[((smain.dout) & 1) == 0]"]
72 -> 71 [label="[!(((smain.dout) & 1) == 0)]"]
71 -> 69 [label="[(smain.spl) == 0]"]
71 -> 73 [label="[!((smain.spl) == 0)]"]
73 -> 70 [label="[((smain.inr) & 1) == 0]"]
73 -> 69 [label="[!(((smain.inr) & 1) == 0)]"]
69 -> 74 [label="0;"]
74 -> 75 [label="0;"]
75 -> 76 [label="void __CPAchecker_TMP_13;"]
76 -> 77 [label="[((smain.inr) & 0) == 0]"]
76 -> 80 [label="[!(((smain.inr) & 0) == 0)]"]
80 -> 77 [label="[((smain.dout) & 0) == 0]"]
80 -> 79 [label="[!(((smain.dout) & 0) == 0)]"]
79 -> 77 [label="[(smain.spl) == 0]"]
79 -> 81 [label="[!((smain.spl) == 0)]"]
81 -> 78 [label="[((smain.inr) & 0) == 0]"]
81 -> 77 [label="[!(((smain.inr) & 0) == 0)]"]
77 -> 82 [label="0;"]
82 -> 83 [label="0;"]
83 -> 0 [label="default return"]
78 -> 82 [label="__assert_fail(\"!((smain.inr&0xFFFFFFFF==0) && (smain.dout&0xFFFFFFFF==0)) || (smain.spl==0 || smain.inr&0xFFFFFFFF==0)\", \"main.c\", 53, \"__PRETTY_FUNCTION__\");"]
70 -> 74 [label="__assert_fail(\"!((smain.inr&0xFFFFFFFF!=0) && (smain.dout&0xFFFFFFFF!=0)) || (smain.spl==0 || smain.inr&0xFFFFFFFF!=0)\", \"main.c\", 50, \"__PRETTY_FUNCTION__\");"]
62 -> 64 [label="smain.inr = din;"]
64 -> 60 [label=""]
57 -> 58 [label="__CPAchecker_TMP_9 = (tmp4 >> 16) & 65535;"]
52 -> 53 [label="__CPAchecker_TMP_8 = tmp4 & 65535;"]
47 -> 48 [label="__CPAchecker_TMP_7 = (tmp3 >> 24) & 255;"]
42 -> 43 [label="__CPAchecker_TMP_6 = tmp3 & 16777215;"]
37 -> 38 [label="__CPAchecker_TMP_5 = (tmp2 >> 28) & 15;"]
32 -> 33 [label="__CPAchecker_TMP_4 = tmp2 & 268435455;"]
27 -> 28 [label="__CPAchecker_TMP_3 = (tmp1 >> 30) & 3;"]
22 -> 23 [label="__CPAchecker_TMP_2 = tmp1 & 1073741823;"]
17 -> 18 [label="__CPAchecker_TMP_1 = (tmp0 >> 31) & 1;"]
12 -> 13 [label="__CPAchecker_TMP_0 = tmp0 & 2147483647;"]}
97 -> 1 [label="spinner(clock, spin, amount, din, &dout)"]
0 -> 98 [label="Return edge from spinner to main"]}