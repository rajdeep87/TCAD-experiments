none:	N92 -{INIT GLOBAL VARS}-> N136
/usr/lib/gcc/x86_64-redhat-linux/6.3.1/include/stddef.h, line 216:	N136 -{typedef unsigned long int size_t;}-> N137
/usr/include/bits/types.h, line 30:	N137 -{typedef unsigned char __u_char;}-> N138
/usr/include/bits/types.h, line 31:	N138 -{typedef unsigned short int __u_short;}-> N139
/usr/include/bits/types.h, line 32:	N139 -{typedef unsigned int __u_int;}-> N140
/usr/include/bits/types.h, line 33:	N140 -{typedef unsigned long int __u_long;}-> N141
/usr/include/bits/types.h, line 36:	N141 -{typedef signed char __int8_t;}-> N142
/usr/include/bits/types.h, line 37:	N142 -{typedef unsigned char __uint8_t;}-> N143
/usr/include/bits/types.h, line 38:	N143 -{typedef signed short int __int16_t;}-> N144
/usr/include/bits/types.h, line 39:	N144 -{typedef unsigned short int __uint16_t;}-> N145
/usr/include/bits/types.h, line 40:	N145 -{typedef signed int __int32_t;}-> N146
/usr/include/bits/types.h, line 41:	N146 -{typedef unsigned int __uint32_t;}-> N147
/usr/include/bits/types.h, line 43:	N147 -{typedef signed long int __int64_t;}-> N148
/usr/include/bits/types.h, line 44:	N148 -{typedef unsigned long int __uint64_t;}-> N149
/usr/include/bits/types.h, line 52:	N149 -{typedef long int __quad_t;}-> N150
/usr/include/bits/types.h, line 53:	N150 -{typedef unsigned long int __u_quad_t;}-> N151
/usr/include/bits/types.h, line 124:	N151 -{typedef unsigned long int __dev_t;}-> N152
/usr/include/bits/types.h, line 125:	N152 -{typedef unsigned int __uid_t;}-> N153
/usr/include/bits/types.h, line 126:	N153 -{typedef unsigned int __gid_t;}-> N154
/usr/include/bits/types.h, line 127:	N154 -{typedef unsigned long int __ino_t;}-> N155
/usr/include/bits/types.h, line 128:	N155 -{typedef unsigned long int __ino64_t;}-> N156
/usr/include/bits/types.h, line 129:	N156 -{typedef unsigned int __mode_t;}-> N157
/usr/include/bits/types.h, line 130:	N157 -{typedef unsigned long int __nlink_t;}-> N158
/usr/include/bits/types.h, line 131:	N158 -{typedef long int __off_t;}-> N159
/usr/include/bits/types.h, line 132:	N159 -{typedef long int __off64_t;}-> N160
/usr/include/bits/types.h, line 133:	N160 -{typedef int __pid_t;}-> N161
/usr/include/bits/types.h, line 134:	N161 -{struct __anon_type___fsid_t {   int __val[2]; } ;}-> N162
/usr/include/bits/types.h, line 134:	N162 -{typedef struct __anon_type___fsid_t __fsid_t;}-> N163
/usr/include/bits/types.h, line 135:	N163 -{typedef long int __clock_t;}-> N164
/usr/include/bits/types.h, line 136:	N164 -{typedef unsigned long int __rlim_t;}-> N165
/usr/include/bits/types.h, line 137:	N165 -{typedef unsigned long int __rlim64_t;}-> N166
/usr/include/bits/types.h, line 138:	N166 -{typedef unsigned int __id_t;}-> N167
/usr/include/bits/types.h, line 139:	N167 -{typedef long int __time_t;}-> N168
/usr/include/bits/types.h, line 140:	N168 -{typedef unsigned int __useconds_t;}-> N169
/usr/include/bits/types.h, line 141:	N169 -{typedef long int __suseconds_t;}-> N170
/usr/include/bits/types.h, line 143:	N170 -{typedef int __daddr_t;}-> N171
/usr/include/bits/types.h, line 144:	N171 -{typedef int __key_t;}-> N172
/usr/include/bits/types.h, line 147:	N172 -{typedef int __clockid_t;}-> N173
/usr/include/bits/types.h, line 150:	N173 -{typedef void *__timer_t;}-> N174
/usr/include/bits/types.h, line 153:	N174 -{typedef long int __blksize_t;}-> N175
/usr/include/bits/types.h, line 158:	N175 -{typedef long int __blkcnt_t;}-> N176
/usr/include/bits/types.h, line 159:	N176 -{typedef long int __blkcnt64_t;}-> N177
/usr/include/bits/types.h, line 162:	N177 -{typedef unsigned long int __fsblkcnt_t;}-> N178
/usr/include/bits/types.h, line 163:	N178 -{typedef unsigned long int __fsblkcnt64_t;}-> N179
/usr/include/bits/types.h, line 166:	N179 -{typedef unsigned long int __fsfilcnt_t;}-> N180
/usr/include/bits/types.h, line 167:	N180 -{typedef unsigned long int __fsfilcnt64_t;}-> N181
/usr/include/bits/types.h, line 170:	N181 -{typedef long int __fsword_t;}-> N182
/usr/include/bits/types.h, line 172:	N182 -{typedef long int __ssize_t;}-> N183
/usr/include/bits/types.h, line 175:	N183 -{typedef long int __syscall_slong_t;}-> N184
/usr/include/bits/types.h, line 177:	N184 -{typedef unsigned long int __syscall_ulong_t;}-> N185
/usr/include/bits/types.h, line 181:	N185 -{typedef __off64_t __loff_t;}-> N186
/usr/include/bits/types.h, line 182:	N186 -{typedef __quad_t *__qaddr_t;}-> N187
/usr/include/bits/types.h, line 183:	N187 -{typedef char *__caddr_t;}-> N188
/usr/include/bits/types.h, line 186:	N188 -{typedef long int __intptr_t;}-> N189
/usr/include/bits/types.h, line 189:	N189 -{typedef unsigned int __socklen_t;}-> N190
/usr/include/stdio.h, line 44:	N190 -{struct _IO_FILE ;}-> N191
/usr/include/stdio.h, line 48:	N191 -{typedef struct _IO_FILE FILE;}-> N192
/usr/include/stdio.h, line 64:	N192 -{typedef struct _IO_FILE __FILE;}-> N193
/usr/include/wchar.h, lines 85-93:	N193 -{union __anon_type_0 {   unsigned int __wch;   char __wchb[4]; } ;}-> N194
/usr/include/wchar.h, lines 82-94:	N194 -{struct __anon_type___mbstate_t {   int __count;   union __anon_type_0 __value; } ;}-> N195
/usr/include/wchar.h, lines 82-94:	N195 -{typedef struct __anon_type___mbstate_t __mbstate_t;}-> N196
/usr/include/_G_config.h, lines 21-25:	N196 -{struct __anon_type__G_fpos_t {   __off_t __pos;   __mbstate_t __state; } ;}-> N197
/usr/include/_G_config.h, lines 21-25:	N197 -{typedef struct __anon_type__G_fpos_t _G_fpos_t;}-> N198
/usr/include/_G_config.h, lines 26-30:	N198 -{struct __anon_type__G_fpos64_t {   __off64_t __pos;   __mbstate_t __state; } ;}-> N199
/usr/include/_G_config.h, lines 26-30:	N199 -{typedef struct __anon_type__G_fpos_t _G_fpos64_t;}-> N200
/usr/lib/gcc/x86_64-redhat-linux/6.3.1/include/stdarg.h, line 40:	N200 -{typedef __builtin_va_list __gnuc_va_list;}-> N201
/usr/include/libio.h, line 144:	N201 -{struct _IO_jump_t ;}-> N202
/usr/include/libio.h, line 150:	N202 -{typedef void _IO_lock_t;}-> N203
/usr/include/libio.h, lines 156-164:	N203 -{struct _IO_marker {   struct _IO_marker *_next;   struct _IO_FILE *_sbuf;   int _pos; } ;}-> N204
/usr/include/libio.h, lines 176-182:	N204 -{enum __codecvt_result {   __codecvt_ok = 0,   __codecvt_partial = 1,   __codecvt_error = 2,   __codecvt_noconv = 3 } ;}-> N205
/usr/include/libio.h, lines 241-300:	N205 -{struct _IO_FILE {   int _flags;   char *_IO_read_ptr;   char *_IO_read_end;   char *_IO_read_base;   char *_IO_write_base;   char *_IO_write_ptr;   char *_IO_write_end;   char *_IO_buf_base;   char *_IO_buf_end;   char *_IO_save_base;   char *_IO_backup_base;   char *_IO_save_end;   struct _IO_marker *_markers;   struct _IO_FILE *_chain;   int _fileno;   int _flags2;   __off_t _old_offset;   unsigned short _cur_column;   signed char _vtable_offset;   char _shortbuf[1];   _IO_lock_t *_lock;   __off64_t _offset;   void *__pad1;   void *__pad2;   void *__pad3;   void *__pad4;   size_t __pad5;   int _mode;   char _unused2[40]; } ;}-> N206
/usr/include/libio.h, line 310:	N206 -{typedef struct _IO_FILE _IO_FILE;}-> N207
/usr/include/libio.h, line 313:	N207 -{struct _IO_FILE_plus ;}-> N208
/usr/include/libio.h, line 315:	N208 -{extern struct _IO_FILE_plus _IO_2_1_stdin_;}-> N209
/usr/include/libio.h, line 316:	N209 -{extern struct _IO_FILE_plus _IO_2_1_stdout_;}-> N210
/usr/include/libio.h, line 317:	N210 -{extern struct _IO_FILE_plus _IO_2_1_stderr_;}-> N211
/usr/include/libio.h, line 333:	N211 -{typedef __ssize_t  __io_read_fn(void *__cookie, char *__buf, size_t __nbytes);}-> N212
/usr/include/libio.h, lines 341-342:	N212 -{typedef __ssize_t  __io_write_fn(void *__cookie, const char *__buf, size_t __n);}-> N213
/usr/include/libio.h, line 350:	N213 -{typedef int __io_seek_fn(void *__cookie, __off64_t *__pos, int __w);}-> N214
/usr/include/libio.h, line 353:	N214 -{typedef int __io_close_fn(void *__cookie);}-> N215
/usr/include/libio.h, line 385:	N215 -{int __underflow(_IO_FILE *);}-> N216
/usr/include/libio.h, line 386:	N216 -{int __uflow(_IO_FILE *);}-> N217
/usr/include/libio.h, line 387:	N217 -{int __overflow(_IO_FILE *, int);}-> N218
/usr/include/libio.h, line 429:	N218 -{int _IO_getc(_IO_FILE *__fp);}-> N219
/usr/include/libio.h, line 430:	N219 -{int _IO_putc(int __c, _IO_FILE *__fp);}-> N220
/usr/include/libio.h, line 431:	N220 -{int _IO_feof(_IO_FILE *__fp);}-> N221
/usr/include/libio.h, line 432:	N221 -{int _IO_ferror(_IO_FILE *__fp);}-> N222
/usr/include/libio.h, line 434:	N222 -{int _IO_peekc_locked(_IO_FILE *__fp);}-> N223
/usr/include/libio.h, line 440:	N223 -{void _IO_flockfile(_IO_FILE *);}-> N224
/usr/include/libio.h, line 441:	N224 -{void _IO_funlockfile(_IO_FILE *);}-> N225
/usr/include/libio.h, line 442:	N225 -{int _IO_ftrylockfile(_IO_FILE *);}-> N226
/usr/include/libio.h, lines 459-460:	N226 -{int _IO_vfscanf(_IO_FILE *, const char *, __gnuc_va_list , int *);}-> N227
/usr/include/libio.h, lines 461-462:	N227 -{int _IO_vfprintf(_IO_FILE *, const char *, __gnuc_va_list );}-> N228
/usr/include/libio.h, line 463:	N228 -{__ssize_t  _IO_padn(_IO_FILE *, int, __ssize_t );}-> N229
/usr/include/libio.h, line 464:	N229 -{size_t  _IO_sgetn(_IO_FILE *, void *, size_t );}-> N230
/usr/include/libio.h, line 466:	N230 -{__off64_t  _IO_seekoff(_IO_FILE *, __off64_t , int, int);}-> N231
/usr/include/libio.h, line 467:	N231 -{__off64_t  _IO_seekpos(_IO_FILE *, __off64_t , int);}-> N232
/usr/include/libio.h, line 469:	N232 -{void _IO_free_backup_area(_IO_FILE *);}-> N233
/usr/include/stdio.h, line 79:	N233 -{typedef __gnuc_va_list va_list;}-> N234
/usr/include/stdio.h, line 90:	N234 -{typedef __off_t off_t;}-> N235
/usr/include/stdio.h, line 104:	N235 -{typedef __ssize_t ssize_t;}-> N236
/usr/include/stdio.h, line 112:	N236 -{typedef _G_fpos_t fpos_t;}-> N237
/usr/include/stdio.h, line 170:	N237 -{extern struct _IO_FILE *stdin;}-> N238
/usr/include/stdio.h, line 171:	N238 -{extern struct _IO_FILE *stdout;}-> N239
/usr/include/stdio.h, line 172:	N239 -{extern struct _IO_FILE *stderr;}-> N240
/usr/include/stdio.h, line 180:	N240 -{int remove(const char *__filename);}-> N241
/usr/include/stdio.h, line 182:	N241 -{int rename(const char *__old, const char *__new);}-> N242
/usr/include/stdio.h, lines 187-188:	N242 -{int renameat(int __oldfd, const char *__old, int __newfd, const char *__new);}-> N243
/usr/include/stdio.h, line 197:	N243 -{FILE * tmpfile();}-> N244
/usr/include/stdio.h, line 211:	N244 -{char * tmpnam(char *__s);}-> N245
/usr/include/stdio.h, line 217:	N245 -{char * tmpnam_r(char *__s);}-> N246
/usr/include/stdio.h, lines 229-230:	N246 -{char * tempnam(const char *__dir, const char *__pfx);}-> N247
/usr/include/stdio.h, line 239:	N247 -{int fclose(FILE *__stream);}-> N248
/usr/include/stdio.h, line 244:	N248 -{int fflush(FILE *__stream);}-> N249
/usr/include/stdio.h, line 254:	N249 -{int fflush_unlocked(FILE *__stream);}-> N250
/usr/include/stdio.h, lines 274-275:	N250 -{FILE * fopen(const char *__filename, const char *__modes);}-> N251
/usr/include/stdio.h, lines 280-282:	N251 -{FILE * freopen(const char *__filename, const char *__modes, FILE *__stream);}-> N252
/usr/include/stdio.h, line 308:	N252 -{FILE * fdopen(int __fd, const char *__modes);}-> N253
/usr/include/stdio.h, lines 321-322:	N253 -{FILE * fmemopen(void *__s, size_t __len, const char *__modes);}-> N254
/usr/include/stdio.h, line 327:	N254 -{FILE * open_memstream(char **__bufloc, size_t *__sizeloc);}-> N255
/usr/include/stdio.h, line 334:	N255 -{void setbuf(FILE *__stream, char *__buf);}-> N256
/usr/include/stdio.h, lines 338-339:	N256 -{int setvbuf(FILE *__stream, char *__buf, int __modes, size_t __n);}-> N257
/usr/include/stdio.h, lines 345-346:	N257 -{void setbuffer(FILE *__stream, char *__buf, size_t __size);}-> N258
/usr/include/stdio.h, line 349:	N258 -{void setlinebuf(FILE *__stream);}-> N259
/usr/include/stdio.h, lines 358-359:	N259 -{int fprintf(FILE *__stream, const char *__format, ...);}-> N260
/usr/include/stdio.h, line 364:	N260 -{int printf(const char *__format, ...);}-> N261
/usr/include/stdio.h, lines 366-367:	N261 -{int sprintf(char *__s, const char *__format, ...);}-> N262
/usr/include/stdio.h, lines 373-374:	N262 -{int vfprintf(FILE *__s, const char *__format, __gnuc_va_list __arg);}-> N263
/usr/include/stdio.h, line 379:	N263 -{int vprintf(const char *__format, __gnuc_va_list __arg);}-> N264
/usr/include/stdio.h, lines 381-382:	N264 -{int vsprintf(char *__s, const char *__format, __gnuc_va_list __arg);}-> N265
/usr/include/stdio.h, lines 388-390:	N265 -{int snprintf(char *__s, size_t __maxlen, const char *__format, ...);}-> N266
/usr/include/stdio.h, lines 392-394:	N266 -{int vsnprintf(char *__s, size_t __maxlen, const char *__format, __gnuc_va_list __arg);}-> N267
/usr/include/stdio.h, lines 414-416:	N267 -{int vdprintf(int __fd, const char *__fmt, __gnuc_va_list __arg);}-> N268
/usr/include/stdio.h, lines 417-418:	N268 -{int dprintf(int __fd, const char *__fmt, ...);}-> N269
/usr/include/stdio.h, lines 427-428:	N269 -{int fscanf(FILE *__stream, const char *__format, ...);}-> N270
/usr/include/stdio.h, line 433:	N270 -{int scanf(const char *__format, ...);}-> N271
/usr/include/stdio.h, lines 435-436:	N271 -{int sscanf(const char *__s, const char *__format, ...);}-> N272
/usr/include/stdio.h, lines 473-475:	N272 -{int vfscanf(FILE *__s, const char *__format, __gnuc_va_list __arg);}-> N273
/usr/include/stdio.h, lines 481-482:	N273 -{int vscanf(const char *__format, __gnuc_va_list __arg);}-> N274
/usr/include/stdio.h, lines 485-487:	N274 -{int vsscanf(const char *__s, const char *__format, __gnuc_va_list __arg);}-> N275
/usr/include/stdio.h, line 533:	N275 -{int fgetc(FILE *__stream);}-> N276
/usr/include/stdio.h, line 534:	N276 -{int getc(FILE *__stream);}-> N277
/usr/include/stdio.h, line 540:	N277 -{int getchar();}-> N278
/usr/include/stdio.h, line 552:	N278 -{int getc_unlocked(FILE *__stream);}-> N279
/usr/include/stdio.h, line 553:	N279 -{int getchar_unlocked();}-> N280
/usr/include/stdio.h, line 563:	N280 -{int fgetc_unlocked(FILE *__stream);}-> N281
/usr/include/stdio.h, line 575:	N281 -{int fputc(int __c, FILE *__stream);}-> N282
/usr/include/stdio.h, line 576:	N282 -{int putc(int __c, FILE *__stream);}-> N283
/usr/include/stdio.h, line 582:	N283 -{int putchar(int __c);}-> N284
/usr/include/stdio.h, line 596:	N284 -{int fputc_unlocked(int __c, FILE *__stream);}-> N285
/usr/include/stdio.h, line 604:	N285 -{int putc_unlocked(int __c, FILE *__stream);}-> N286
/usr/include/stdio.h, line 605:	N286 -{int putchar_unlocked(int __c);}-> N287
/usr/include/stdio.h, line 612:	N287 -{int getw(FILE *__stream);}-> N288
/usr/include/stdio.h, line 615:	N288 -{int putw(int __w, FILE *__stream);}-> N289
/usr/include/stdio.h, lines 624-625:	N289 -{char * fgets(char *__s, int __n, FILE *__stream);}-> N290
/usr/include/stdio.h, lines 667-669:	N290 -{__ssize_t  __getdelim(char **__lineptr, size_t *__n, int __delimiter, FILE *__stream);}-> N291
/usr/include/stdio.h, lines 670-672:	N291 -{__ssize_t  getdelim(char **__lineptr, size_t *__n, int __delimiter, FILE *__stream);}-> N292
/usr/include/stdio.h, lines 680-682:	N292 -{__ssize_t  getline(char **__lineptr, size_t *__n, FILE *__stream);}-> N293
/usr/include/stdio.h, line 691:	N293 -{int fputs(const char *__s, FILE *__stream);}-> N294
/usr/include/stdio.h, line 697:	N294 -{int puts(const char *__s);}-> N295
/usr/include/stdio.h, line 704:	N295 -{int ungetc(int __c, FILE *__stream);}-> N296
/usr/include/stdio.h, lines 711-712:	N296 -{size_t  fread(void *__ptr, size_t __size, size_t __n, FILE *__stream);}-> N297
/usr/include/stdio.h, lines 717-718:	N297 -{size_t  fwrite(const void *__ptr, size_t __size, size_t __n, FILE *__s);}-> N298
/usr/include/stdio.h, lines 739-740:	N298 -{size_t  fread_unlocked(void *__ptr, size_t __size, size_t __n, FILE *__stream);}-> N299
/usr/include/stdio.h, lines 741-742:	N299 -{size_t  fwrite_unlocked(const void *__ptr, size_t __size, size_t __n, FILE *__stream);}-> N300
/usr/include/stdio.h, line 751:	N300 -{int fseek(FILE *__stream, long int __off, int __whence);}-> N301
/usr/include/stdio.h, line 756:	N301 -{long int ftell(FILE *__stream);}-> N302
/usr/include/stdio.h, line 761:	N302 -{void rewind(FILE *__stream);}-> N303
/usr/include/stdio.h, line 775:	N303 -{int fseeko(FILE *__stream, __off_t __off, int __whence);}-> N304
/usr/include/stdio.h, line 780:	N304 -{__off_t  ftello(FILE *__stream);}-> N305
/usr/include/stdio.h, line 800:	N305 -{int fgetpos(FILE *__stream, fpos_t *__pos);}-> N306
/usr/include/stdio.h, line 805:	N306 -{int fsetpos(FILE *__stream, fpos_t *__pos);}-> N307
/usr/include/stdio.h, line 828:	N307 -{void clearerr(FILE *__stream);}-> N308
/usr/include/stdio.h, line 830:	N308 -{int feof(FILE *__stream);}-> N309
/usr/include/stdio.h, line 832:	N309 -{int ferror(FILE *__stream);}-> N310
/usr/include/stdio.h, line 837:	N310 -{void clearerr_unlocked(FILE *__stream);}-> N311
/usr/include/stdio.h, line 838:	N311 -{int feof_unlocked(FILE *__stream);}-> N312
/usr/include/stdio.h, line 839:	N312 -{int ferror_unlocked(FILE *__stream);}-> N313
/usr/include/stdio.h, line 848:	N313 -{void perror(const char *__s);}-> N314
/usr/include/bits/sys_errlist.h, line 26:	N314 -{extern int sys_nerr;}-> N315
/usr/include/bits/sys_errlist.h, line 27:	N315 -{extern const const char *sys_errlist[];}-> N316
/usr/include/stdio.h, line 860:	N316 -{int fileno(FILE *__stream);}-> N317
/usr/include/stdio.h, line 865:	N317 -{int fileno_unlocked(FILE *__stream);}-> N318
/usr/include/stdio.h, line 874:	N318 -{FILE * popen(const char *__command, const char *__modes);}-> N319
/usr/include/stdio.h, line 880:	N319 -{int pclose(FILE *__stream);}-> N320
/usr/include/stdio.h, line 886:	N320 -{char * ctermid(char *__s);}-> N321
/usr/include/stdio.h, line 914:	N321 -{void flockfile(FILE *__stream);}-> N322
/usr/include/stdio.h, line 918:	N322 -{int ftrylockfile(FILE *__stream);}-> N323
/usr/include/stdio.h, line 921:	N323 -{void funlockfile(FILE *__stream);}-> N324
/usr/include/assert.h, lines 67-69:	N324 -{void __assert_fail(const char *__assertion, const char *__file, unsigned int __line, const char *__function);}-> N325
/usr/include/assert.h, lines 72-74:	N325 -{void __assert_perror_fail(int __errnum, const char *__file, unsigned int __line, const char *__function);}-> N326
/usr/include/assert.h, lines 79-80:	N326 -{void __assert(const char *__assertion, const char *__file, int __line);}-> N327
cpa.c, line 15:	N327 -{int A = 0;}-> N328
	A == 0;
cpa.c, line 16:	N328 -{int B = 1;}-> N329
	B == 1;
cpa.c, line 17:	N329 -{int C = 2;}-> N330
	C == 2;
cpa.c, line 18:	N330 -{int X = 3;}-> N331
	X == 3;
cpa.c, lines 20-24:	N331 -{struct state_elements_controller {   _Bool ack;   unsigned char state;   _Bool pass_token; } ;}-> N332
cpa.c, line 25:	N332 -{struct state_elements_controller scontroller = {  };}-> N333
cpa.c, lines 27-32:	N333 -{void controller_initial();}-> N334
cpa.c, lines 34-69:	N334 -{void controller(_Bool clk, _Bool req, _Bool *ack, unsigned char sel, _Bool *pass_token, unsigned char id);}-> N335
cpa.c, lines 71-73:	N335 -{struct state_elements_arbiter {   unsigned char state; } ;}-> N336
cpa.c, line 74:	N336 -{struct state_elements_arbiter sarbiter = {  };}-> N337
cpa.c, lines 76-79:	N337 -{void arbiter_initial();}-> N338
cpa.c, lines 81-93:	N338 -{void arbiter(_Bool clk, unsigned char *sel, _Bool active);}-> N339
cpa.c, lines 95-98:	N339 -{struct state_elements_client {   unsigned char state;   _Bool req; } ;}-> N340
cpa.c, line 99:	N340 -{struct state_elements_client sclient = {  };}-> N341
cpa.c, lines 101-105:	N341 -{void client_initial();}-> N342
cpa.c, lines 106-128:	N342 -{void client(_Bool clk, _Bool *req, _Bool ack);}-> N343
cpa.c, lines 130-170:	N343 -{void main();}-> N344
none:	N344 -{Function start dummy edge}-> N93
cpa.c, line 132:	N93 -{_Bool clk;}-> N94
cpa.c, line 132:	N94 -{_Bool ackA;}-> N95
	ackA == 1;
cpa.c, line 132:	N95 -{_Bool ackB;}-> N96
	ackB == ((_Bool)2);
cpa.c, line 132:	N96 -{_Bool ackC;}-> N97
	ackC == ((_Bool)4);
cpa.c, line 133:	N97 -{unsigned char sel;}-> N98
	sel == 5U;
cpa.c, line 134:	N98 -{_Bool active;}-> N99
	active == 0;
cpa.c, line 135:	N99 -{_Bool reqA;}-> N100
	reqA == ((_Bool)11);
cpa.c, line 135:	N100 -{_Bool reqB;}-> N101
	reqB == ((_Bool)10);
cpa.c, line 135:	N101 -{_Bool reqC;}-> N102
	reqC == ((_Bool)9);
cpa.c, line 136:	N102 -{_Bool pass_tokenA;}-> N103
	pass_tokenA == ((_Bool)8);
cpa.c, line 136:	N103 -{_Bool pass_tokenB;}-> N104
	pass_tokenB == ((_Bool)7);
cpa.c, line 136:	N104 -{_Bool pass_tokenC;}-> N105
	ackB == ((_Bool)2);
	A == 0;
	X == 3;
	B == 1;
	pass_tokenA == ((_Bool)8);
	pass_tokenB == ((_Bool)7);
	pass_tokenC == ((_Bool)6);
	ackC == ((_Bool)4);
	C == 2;
	active == 0;
	reqA == ((_Bool)11);
	reqB == ((_Bool)10);
	reqC == ((_Bool)9);
	sel == 5U;
	ackA == 1;
cpa.c, line 139:	N105 -{client_initial()}-> N63
none:	N63 -{Function start dummy edge}-> N64
cpa.c, line 103:	N64 -{sclient.state = 0;}-> N65
cpa.c, line 104:	N65 -{sclient.req = 0;}-> N66
none:	N66 -{default return}-> N62
cpa.c, line 139:	N62 -{Return edge from client_initial to main}-> N106
cpa.c, line 140:	N106 -{controller_initial()}-> N1
none:	N1 -{Function start dummy edge}-> N2
cpa.c, line 29:	N2 -{scontroller.state = 0;}-> N3
cpa.c, line 30:	N3 -{scontroller.ack = 0;}-> N4
cpa.c, line 31:	N4 -{scontroller.pass_token = 1;}-> N5
none:	N5 -{default return}-> N0
cpa.c, line 140:	N0 -{Return edge from controller_initial to main}-> N107
cpa.c, line 141:	N107 -{arbiter_initial()}-> N39
none:	N39 -{Function start dummy edge}-> N40
cpa.c, line 78:	N40 -{sarbiter.state = A;}-> N41
none:	N41 -{default return}-> N38
cpa.c, line 141:	N38 -{Return edge from arbiter_initial to main}-> N108
cpa.c, lines 143-169:	N108 -{while}-> N109
cpa.c, lines 143-169:	N109 -{}-> N110
cpa.c, line 144:	N110 -{client(clk, &reqA, ackA)}-> N68
none:	N68 -{Function start dummy edge}-> N69
	req == 310640387LL;
	(*req) == ((_Bool)11);
	ack == 1;
cpa.c, line 108:	N69 -{_Bool rand_choice = 0;}-> N70
	ack == 1;
	req == 310640387LL;
	rand_choice == 0;
	(*req) == ((_Bool)11);
cpa.c, line 109:	N70 -{[(sclient.state) == 0]}-> N72
cpa.c, line 110:	N72 -{[rand_choice == 0]}-> N74
	rand_choice == 0;
none:	N74 -{}-> N71
cpa.c, line 127:	N71 -{*req = sclient.req;}-> N90
	(*req) == 0;
none:	N90 -{default return}-> N67
cpa.c, line 144:	N67 -{Return edge from client to main}-> N112
cpa.c, line 145:	N112 -{client(clk, &reqB, ackB)}-> N68
none:	N68 -{Function start dummy edge}-> N69
	req == 536739335LL;
	(*req) == ((_Bool)10);
	ack == ((_Bool)2);
cpa.c, line 108:	N69 -{_Bool rand_choice = 0;}-> N70
	req == 536739335LL;
	ack == ((_Bool)2);
	(*req) == ((_Bool)10);
	rand_choice == 0;
cpa.c, line 109:	N70 -{[(sclient.state) == 0]}-> N72
cpa.c, line 110:	N72 -{[rand_choice == 0]}-> N74
	rand_choice == 0;
none:	N74 -{}-> N71
cpa.c, line 127:	N71 -{*req = sclient.req;}-> N90
	(*req) == 0;
none:	N90 -{default return}-> N67
cpa.c, line 145:	N67 -{Return edge from client to main}-> N113
cpa.c, line 146:	N113 -{client(clk, &reqC, ackC)}-> N68
none:	N68 -{Function start dummy edge}-> N69
	req == 1073741823LL;
	(*req) == ((_Bool)9);
	ack == ((_Bool)4);
cpa.c, line 108:	N69 -{_Bool rand_choice = 0;}-> N70
	rand_choice == 0;
	(*req) == ((_Bool)9);
	req == 1073741823LL;
	ack == ((_Bool)4);
cpa.c, line 109:	N70 -{[(sclient.state) == 0]}-> N72
cpa.c, line 110:	N72 -{[rand_choice == 0]}-> N74
	rand_choice == 0;
none:	N74 -{}-> N71
cpa.c, line 127:	N71 -{*req = sclient.req;}-> N90
	(*req) == 0;
none:	N90 -{default return}-> N67
cpa.c, line 146:	N67 -{Return edge from client to main}-> N114
cpa.c, line 148:	N114 -{controller(clk, reqA, &ackA, sel, &pass_tokenA, A)}-> N7
none:	N7 -{Function start dummy edge}-> N8
	req == 0;
	ack == 33619711LL;
	(*ack) == 1;
	sel == 5U;
	pass_token == 1107361791LL;
	(*pass_token) == ((_Bool)8);
	id == 0U;
cpa.c, line 36:	N8 -{_Bool is_selected;}-> N9
	req == 0;
	ack == 33619711LL;
	(*ack) == 1;
	sel == 5U;
	pass_token == 1107361791LL;
	(*pass_token) == ((_Bool)8);
	id == 0U;
cpa.c, line 37:	N9 -{is_selected = (sel & (3 == id)) & 3;}-> N10
	ack == 33619711LL;
	id == 0U;
	req == 0;
	(*pass_token) == ((_Bool)8);
	is_selected == 0;
	(*ack) == 1;
	pass_token == 1107361791LL;
	sel == 5U;
cpa.c, line 40:	N10 -{[(scontroller.state) == 0]}-> N12
cpa.c, line 41:	N12 -{[is_selected == 0]}-> N16
	is_selected == 0;
cpa.c, line 50:	N16 -{scontroller.pass_token = 0;}-> N23
none:	N23 -{}-> N14
none:	N14 -{}-> N11
cpa.c, line 66:	N11 -{*ack = scontroller.ack;}-> N36
	(*ack) == 0;
cpa.c, line 67:	N36 -{*pass_token = scontroller.pass_token;}-> N37
	(*pass_token) == 0;
	(*ack) == 0;
none:	N37 -{default return}-> N6
cpa.c, line 148:	N6 -{Return edge from controller to main}-> N115
cpa.c, line 149:	N115 -{controller(clk, reqB, &ackB, sel, &pass_tokenB, B)}-> N7
none:	N7 -{Function start dummy edge}-> N8
	req == 0;
	ack == 33619713LL;
	(*ack) == ((_Bool)2);
	sel == 5U;
	pass_token == 1107427327LL;
	(*pass_token) == ((_Bool)7);
	id == 1U;
cpa.c, line 36:	N8 -{_Bool is_selected;}-> N9
	is_selected == 0;
	req == 0;
	ack == 33619713LL;
	(*ack) == ((_Bool)2);
	sel == 5U;
	pass_token == 1107427327LL;
	(*pass_token) == ((_Bool)7);
	id == 1U;
cpa.c, line 37:	N9 -{is_selected = (sel & (3 == id)) & 3;}-> N10
	(*pass_token) == ((_Bool)7);
	id == 1U;
	req == 0;
	is_selected == 0;
	(*ack) == ((_Bool)2);
	ack == 33619713LL;
	pass_token == 1107427327LL;
	sel == 5U;
cpa.c, line 40:	N10 -{[(scontroller.state) == 0]}-> N12
cpa.c, line 41:	N12 -{[is_selected == 0]}-> N16
	is_selected == 0;
cpa.c, line 50:	N16 -{scontroller.pass_token = 0;}-> N23
none:	N23 -{}-> N14
none:	N14 -{}-> N11
cpa.c, line 66:	N11 -{*ack = scontroller.ack;}-> N36
	(*ack) == 0;
cpa.c, line 67:	N36 -{*pass_token = scontroller.pass_token;}-> N37
	(*pass_token) == 0;
	(*ack) == 0;
none:	N37 -{default return}-> N6
cpa.c, line 149:	N6 -{Return edge from controller to main}-> N116
cpa.c, line 150:	N116 -{controller(clk, reqC, &ackC, sel, &pass_tokenC, C)}-> N7
none:	N7 -{Function start dummy edge}-> N8
	req == 0;
	ack == 310378495LL;
	(*ack) == ((_Bool)4);
	sel == 5U;
	pass_token == 1107427520LL;
	(*pass_token) == ((_Bool)6);
	id == 2U;
cpa.c, line 36:	N8 -{_Bool is_selected;}-> N9
	is_selected == 0;
	req == 0;
	ack == 310378495LL;
	(*ack) == ((_Bool)4);
	sel == 5U;
	pass_token == 1107427520LL;
	(*pass_token) == ((_Bool)6);
	id == 2U;
cpa.c, line 37:	N9 -{is_selected = (sel & (3 == id)) & 3;}-> N10
	req == 0;
	(*ack) == ((_Bool)4);
	is_selected == 0;
	id == 2U;
	ack == 310378495LL;
	(*pass_token) == ((_Bool)6);
	sel == 5U;
	pass_token == 1107427520LL;
cpa.c, line 40:	N10 -{[(scontroller.state) == 0]}-> N12
cpa.c, line 41:	N12 -{[is_selected == 0]}-> N16
	is_selected == 0;
cpa.c, line 50:	N16 -{scontroller.pass_token = 0;}-> N23
none:	N23 -{}-> N14
none:	N14 -{}-> N11
cpa.c, line 66:	N11 -{*ack = scontroller.ack;}-> N36
	(*ack) == 0;
cpa.c, line 67:	N36 -{*pass_token = scontroller.pass_token;}-> N37
	(*pass_token) == 0;
	(*ack) == 0;
none:	N37 -{default return}-> N6
cpa.c, line 150:	N6 -{Return edge from controller to main}-> N117
cpa.c, line 152:	N117 -{arbiter(clk, &sel, active)}-> N43
none:	N43 -{Function start dummy edge}-> N44
	sel == 310576129LL;
	(*sel) == 5U;
	active == 0;
cpa.c, line 83:	N44 -{[active == 0]}-> N45
	sel == 310576129LL;
	(*sel) == 5U;
	active == 0;
	active == 0;
cpa.c, line 92:	N45 -{int __CPAchecker_TMP_0;}-> N57
cpa.c, line 92:	N57 -{[active == 0]}-> N59
	active == 0;
cpa.c, line 92:	N59 -{__CPAchecker_TMP_0 = X;}-> N60
	__CPAchecker_TMP_0 == 3;
cpa.c, line 92:	N60 -{*sel = __CPAchecker_TMP_0;}-> N61
	(*sel) == 3U;
none:	N61 -{default return}-> N42
cpa.c, line 152:	N42 -{Return edge from arbiter to main}-> N118
cpa.c, line 154:	N118 -{int __CPAchecker_TMP_0;}-> N119
cpa.c, line 154:	N119 -{[pass_tokenA == 0]}-> N123
	pass_tokenA == 0;
cpa.c, line 154:	N123 -{[pass_tokenB == 0]}-> N120
	pass_tokenB == 0;
cpa.c, line 154:	N120 -{[pass_tokenC == 0]}-> N122
	pass_tokenC == 0;
none:	N122 -{__CPAchecker_TMP_0 = 0;}-> N124
	__CPAchecker_TMP_0 == 0;
cpa.c, line 154:	N124 -{active = __CPAchecker_TMP_0;}-> N125
	active == 0;
cpa.c, lines 156-166:	N125 -{void __CPAchecker_TMP_2;}-> N126
	active == 0;
cpa.c, lines 156-158:	N126 -{[!(ackA == 1)]}-> N130
	ackA == 0;
cpa.c, lines 156-158:	N130 -{[!(ackB == 1)]}-> N129
	ackB == 0;
cpa.c, lines 156-158:	N129 -{[!(ackC == 1)]}-> N128
	ackC == 0;
cpa.c, lines 156-164:	N128 -{__assert_fail("(ackA == 1 && ackB == 1 || ackB == 1 && ackC == 1 || ackC == 1 && ackA ==1)", "cpa.c", 156, "__PRETTY_FUNCTION__");}-> N134
