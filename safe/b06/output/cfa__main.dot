digraph main {
106 [shape="circle" label="N106\n234"]
132 [shape="circle" label="N132\n233"]
114 [shape="circle" label="N114\n16"]
115 [shape="circle" label="N115\n15"]
116 [shape="doublecircle" label="N116\n14"]
117 [shape="circle" label="N117\n13"]
120 [shape="circle" label="N120\n11"]
121 [shape="circle" label="N121\n10"]
122 [shape="diamond" label="N122\n9"]
123 [shape="circle" label="N123\n7"]
124 [shape="circle" label="N124\n8"]
125 [shape="circle" label="N125\n6"]
126 [shape="circle" label="N126\n5"]
127 [shape="diamond" label="N127\n4"]
128 [shape="circle" label="N128\n2"]
129 [shape="circle" label="N129\n3"]
130 [shape="circle" label="N130\n1"]
131 [shape="circle" label="N131\n0"]
132 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label="Long linear chain of edges between nodes 132 and 113"]
132 -> 114[label=""]
117 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">117</td><td align="left">EQL = nondet_bool();</td></tr><tr><td align="right">119</td><td align="left">CONT_EQL = nondet_bool();</td></tr></table>>]
117 -> 120[label=""]
106 -> 132 [label="INIT GLOBAL VARS" fontname="Courier New"]
100001 [shape="component" label="initial"]
114 -> 100001 [label="initial();" fontname="Courier New"]
100001 -> 115 [label="" fontname="Courier New"]
116 -> 117 [label="" fontname="Courier New"]
100002 [shape="component" label="b06"]
120 -> 100002 [label="b06(&CC_MUX, EQL, &USCITE, clock, &ENABLE_COUNT, &ACKOUT, CONT_EQL);" fontname="Courier New"]
100002 -> 121 [label="" fontname="Courier New"]
122 -> 123 [label="[ENABLE_COUNT == ACKOUT]" fontname="Courier New"]
122 -> 124 [label="[!(ENABLE_COUNT == ACKOUT)]" fontname="Courier New"]
125 -> 126 [label="0;" fontname="Courier New"]
127 -> 128 [label="[(USCITE & 3) != 2]" fontname="Courier New"]
127 -> 129 [label="[!((USCITE & 3) != 2)]" fontname="Courier New"]
130 -> 131 [label="0;" fontname="Courier New"]
128 -> 130 [label="0;" fontname="Courier New"]
115 -> 116 [label="while" fontname="Courier New"]
121 -> 122 [label="void __CPAchecker_TMP_0;" fontname="Courier New"]
124 -> 125 [label="__assert_fail(\"ENABLE_COUNT==ACKOUT\", \"main.c\", 158, \"__PRETTY_FUNCTION__\");" fontname="Courier New"]
126 -> 127 [label="void __CPAchecker_TMP_1;" fontname="Courier New"]
129 -> 130 [label="__assert_fail(\"(USCITE&0x3)!=2\", \"main.c\", 159, \"__PRETTY_FUNCTION__\");" fontname="Courier New"]
131 -> 116 [label="" fontname="Courier New"]
123 -> 125 [label="0;" fontname="Courier New"]
}