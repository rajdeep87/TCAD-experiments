digraph CFA {
60 [shape="circle" label="N60\n24"]
76 [shape="circle" label="N76\n23"]
77 [shape="circle" label="N77\n22"]
78 [shape="circle" label="N78\n21"]
79 [shape="circle" label="N79\n20"]
80 [shape="circle" label="N80\n19"]
81 [shape="circle" label="N81\n18"]
82 [shape="circle" label="N82\n17"]
83 [shape="circle" label="N83\n16"]
84 [shape="circle" label="N84\n15"]
85 [shape="circle" label="N85\n14"]
86 [shape="circle" label="N86\n13"]
61 [shape="circle" label="N61\n12"]
62 [shape="circle" label="N62\n11"]
63 [shape="circle" label="N63\n10"]
64 [shape="circle" label="N64\n9"]
65 [shape="circle" label="N65\n8"]
1 [shape="circle" label="N1\n55"]
2 [shape="circle" label="N2\n54"]
3 [shape="circle" label="N3\n53"]
4 [shape="circle" label="N4\n52"]
5 [shape="circle" label="N5\n51"]
6 [shape="diamond" label="N6\n50"]
9 [shape="diamond" label="N9\n49"]
14 [shape="diamond" label="N14\n48"]
22 [shape="diamond" label="N22\n47"]
28 [shape="circle" label="N28\n46"]
12 [shape="diamond" label="N12\n27"]
37 [shape="diamond" label="N37\n26"]
45 [shape="diamond" label="N45\n25"]
51 [shape="circle" label="N51\n24"]
7 [shape="circle" label="N7\n2"]
58 [shape="circle" label="N58\n1"]
0 [shape="circle" label="N0\n0"]
70 [shape="circle" label="N70\n4"]
71 [shape="circle" label="N71\n3"]
72 [shape="circle" label="N72\n2"]
73 [shape="circle" label="N73\n1"]
74 [shape="circle" label="N74\n0"]
67 [shape="doublecircle" label="N67\n6"]
68 [shape="circle" label="N68\n5"]
66 [shape="circle" label="N66\n7"]
52 [shape="circle" label="N52\n23"]
53 [shape="diamond" label="N53\n22"]
55 [shape="circle" label="N55\n21"]
56 [shape="circle" label="N56\n19"]
57 [shape="circle" label="N57\n18"]
54 [shape="circle" label="N54\n20"]
44 [shape="circle" label="N44\n17"]
46 [shape="diamond" label="N46\n16"]
48 [shape="circle" label="N48\n15"]
49 [shape="circle" label="N49\n13"]
50 [shape="circle" label="N50\n12"]
47 [shape="circle" label="N47\n14"]
36 [shape="circle" label="N36\n11"]
38 [shape="diamond" label="N38\n10"]
40 [shape="circle" label="N40\n9"]
41 [shape="circle" label="N41\n7"]
42 [shape="circle" label="N42\n6"]
39 [shape="circle" label="N39\n8"]
29 [shape="circle" label="N29\n45"]
30 [shape="diamond" label="N30\n44"]
32 [shape="circle" label="N32\n43"]
33 [shape="circle" label="N33\n41"]
34 [shape="circle" label="N34\n40"]
31 [shape="circle" label="N31\n42"]
21 [shape="circle" label="N21\n39"]
23 [shape="diamond" label="N23\n38"]
25 [shape="circle" label="N25\n37"]
26 [shape="circle" label="N26\n35"]
27 [shape="circle" label="N27\n34"]
24 [shape="circle" label="N24\n36"]
13 [shape="circle" label="N13\n33"]
15 [shape="diamond" label="N15\n32"]
17 [shape="circle" label="N17\n31"]
18 [shape="circle" label="N18\n29"]
19 [shape="circle" label="N19\n28"]
16 [shape="circle" label="N16\n30"]
8 [shape="circle" label="N8\n5"]
10 [shape="circle" label="N10\n4"]
11 [shape="circle" label="N11\n3"]
node [shape="circle"]
subgraph cluster_Traffic_Light {
label="Traffic_Light()"
1 -> 2 [label="Function start dummy edge"]
2 -> 3 [label="unsigned char Light_Sign_old;"]
3 -> 4 [label="unsigned int Counter_old;"]
4 -> 5 [label="Light_Sign_old = sTraffic_Light.Light_Sign;"]
5 -> 6 [label="Counter_old = sTraffic_Light.Counter;"]
6 -> 8 [label="[reset == 0]"]
6 -> 9 [label="[!(reset == 0)]"]
9 -> 13 [label="[Light_Sign_old == RED_LIGHT]"]
9 -> 14 [label="[!(Light_Sign_old == RED_LIGHT)]"]
14 -> 21 [label="[Light_Sign_old == GREEN_LIGHT]"]
14 -> 22 [label="[!(Light_Sign_old == GREEN_LIGHT)]"]
22 -> 29 [label="[Light_Sign_old == YELLOW_LIGHT]"]
22 -> 28 [label="[!(Light_Sign_old == YELLOW_LIGHT)]"]
28 -> 12 [label=""]
12 -> 36 [label="[Light_Sign_old == RED_LIGHT]"]
12 -> 37 [label="[!(Light_Sign_old == RED_LIGHT)]"]
37 -> 44 [label="[Light_Sign_old == GREEN_LIGHT]"]
37 -> 45 [label="[!(Light_Sign_old == GREEN_LIGHT)]"]
45 -> 52 [label="[Light_Sign_old == YELLOW_LIGHT]"]
45 -> 51 [label="[!(Light_Sign_old == YELLOW_LIGHT)]"]
51 -> 7 [label=""]
7 -> 58 [label="*time_left = sTraffic_Light.Counter;"]
58 -> 0 [label="default return"]
52 -> 53 [label="unsigned int __CPAchecker_TMP_5;"]
53 -> 54 [label="[Counter_old == 0]"]
53 -> 55 [label="[!(Counter_old == 0)]"]
55 -> 56 [label="__CPAchecker_TMP_5 = Counter_old - 1;"]
56 -> 57 [label="sTraffic_Light.Counter = __CPAchecker_TMP_5;"]
57 -> 7 [label=""]
54 -> 56 [label="__CPAchecker_TMP_5 = RED_count;"]
44 -> 46 [label="unsigned int __CPAchecker_TMP_4;"]
46 -> 47 [label="[Counter_old == 0]"]
46 -> 48 [label="[!(Counter_old == 0)]"]
48 -> 49 [label="__CPAchecker_TMP_4 = Counter_old - 1;"]
49 -> 50 [label="sTraffic_Light.Counter = __CPAchecker_TMP_4;"]
50 -> 7 [label=""]
47 -> 49 [label="__CPAchecker_TMP_4 = YELLOW_count;"]
36 -> 38 [label="unsigned int __CPAchecker_TMP_3;"]
38 -> 39 [label="[Counter_old == 0]"]
38 -> 40 [label="[!(Counter_old == 0)]"]
40 -> 41 [label="__CPAchecker_TMP_3 = Counter_old - 1;"]
41 -> 42 [label="sTraffic_Light.Counter = __CPAchecker_TMP_3;"]
42 -> 7 [label=""]
39 -> 41 [label="__CPAchecker_TMP_3 = GREEN_count;"]
29 -> 30 [label="int __CPAchecker_TMP_2;"]
30 -> 31 [label="[Counter_old == 0]"]
30 -> 32 [label="[!(Counter_old == 0)]"]
32 -> 33 [label="__CPAchecker_TMP_2 = YELLOW_LIGHT;"]
33 -> 34 [label="sTraffic_Light.Light_Sign = __CPAchecker_TMP_2;"]
34 -> 12 [label=""]
31 -> 33 [label="__CPAchecker_TMP_2 = RED_LIGHT;"]
21 -> 23 [label="int __CPAchecker_TMP_1;"]
23 -> 24 [label="[Counter_old == 0]"]
23 -> 25 [label="[!(Counter_old == 0)]"]
25 -> 26 [label="__CPAchecker_TMP_1 = GREEN_LIGHT;"]
26 -> 27 [label="sTraffic_Light.Light_Sign = __CPAchecker_TMP_1;"]
27 -> 12 [label=""]
24 -> 26 [label="__CPAchecker_TMP_1 = YELLOW_LIGHT;"]
13 -> 15 [label="int __CPAchecker_TMP_0;"]
15 -> 16 [label="[Counter_old == 0]"]
15 -> 17 [label="[!(Counter_old == 0)]"]
17 -> 18 [label="__CPAchecker_TMP_0 = RED_LIGHT;"]
18 -> 19 [label="sTraffic_Light.Light_Sign = __CPAchecker_TMP_0;"]
19 -> 12 [label=""]
16 -> 18 [label="__CPAchecker_TMP_0 = GREEN_LIGHT;"]
8 -> 10 [label="sTraffic_Light.Light_Sign = RED_LIGHT;"]
10 -> 11 [label="sTraffic_Light.Counter = 0;"]
11 -> 7 [label=""]}
subgraph cluster_main {
label="main()"
60 -> 76 [label="INIT GLOBAL VARS"]
76 -> 77 [label="struct state_elements_Traffic_Light {   unsigned char Light_Sign;   unsigned int Counter; } ;"]
77 -> 78 [label="struct state_elements_Traffic_Light sTraffic_Light = {  };"]
78 -> 79 [label="int RED_LIGHT = 0;"]
79 -> 80 [label="int GREEN_LIGHT = 1;"]
80 -> 81 [label="int YELLOW_LIGHT = 2;"]
81 -> 82 [label="unsigned int RED_count = 60;"]
82 -> 83 [label="unsigned int GREEN_count = 40;"]
83 -> 84 [label="unsigned int YELLOW_count = 5;"]
84 -> 85 [label="void Traffic_Light(_Bool reset, _Bool clk, unsigned int *time_left);"]
85 -> 86 [label="int main();"]
86 -> 61 [label="Function start dummy edge"]
61 -> 62 [label="_Bool reset;"]
62 -> 63 [label="_Bool clk;"]
63 -> 64 [label="unsigned int time_left;"]
64 -> 65 [label="unsigned char temp;"]
65 -> 66 [label="Traffic_Light(0, clk, &time_left);" style="dotted" arrowhead="empty"]
70 -> 71 [label="temp = sTraffic_Light.Light_Sign;"]
71 -> 72 [label="assert(time_left != 4294967295LL);"]
72 -> 73 [label="assert((sTraffic_Light.Light_Sign) != 2);"]
73 -> 74 [label="assert((sTraffic_Light.Light_Sign) != 3);"]
74 -> 67 [label=""]
67 -> 68 [label=""]
68 -> 70 [label="Traffic_Light(1, clk, &time_left);" style="dotted" arrowhead="empty"]
66 -> 67 [label="while"]}
65 -> 1 [label="Traffic_Light(0, clk, &time_left)"]
0 -> 66 [label="Return edge from Traffic_Light to main"]
0 -> 70 [label="Return edge from Traffic_Light to main"]
68 -> 1 [label="Traffic_Light(1, clk, &time_left)"]}