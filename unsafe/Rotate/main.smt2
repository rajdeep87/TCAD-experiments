; SMT 2
(set-info :source "Generated by CBMC 5.7")
(set-option :produce-models true)
(set-logic QF_AUFBV)

; set_to true (equal)
(define-fun |__CPROVER_dead_object#1| () (_ BitVec 64) (_ bv0 64))

; set_to true (equal)
(define-fun |__CPROVER_deallocated#1| () (_ BitVec 64) (_ bv0 64))

; set_to true (equal)
(define-fun |__CPROVER_malloc_is_new_array#1| () Bool false)

; set_to true (equal)
(define-fun |__CPROVER_malloc_object#1| () (_ BitVec 64) (_ bv0 64))

; set_to true (equal)
(define-fun |__CPROVER_malloc_size#1| () (_ BitVec 64) (_ bv0 64))

; set_to true (equal)
(define-fun |__CPROVER_memory_leak#1| () (_ BitVec 64) (_ bv0 64))

; set_to true (equal)
(define-fun |__CPROVER_next_thread_id#1| () (_ BitVec 64) (_ bv0 64))

; set_to true (equal)
(define-fun |__CPROVER_pipe_count#1| () (_ BitVec 32) (_ bv0 32))

; set_to true (equal)
(define-fun |__CPROVER_rounding_mode!0#1| () (_ BitVec 32) (_ bv0 32))

; set_to true (equal)
(define-fun |__CPROVER_thread_id!0#1| () (_ BitVec 64) (_ bv0 64))

; the following is a substitute for lambda i. x
(declare-fun array_of.0 () (Array (_ BitVec 64) (_ BitVec 1)))
; set_to true (equal)
(define-fun |__CPROVER_threads_exited#1| () (Array (_ BitVec 64) (_ BitVec 1)) array_of.0)

; set_to true (equal)
(define-fun |smain#1| () (_ BitVec 64) (concat (_ bv0 32) (_ bv0 32)))

; set_to true (equal)
(define-fun |smain#2| () (_ BitVec 64) (concat (_ bv0 32) (_ bv0 32)))

; set_to true (equal)
(define-fun |smain#3| () (_ BitVec 64) (concat (_ bv0 32) (_ bv0 32)))

; find_symbols
(declare-fun |main::1::clock!0@1#1| () (_ BitVec 8))
; set_to true (equal)
(define-fun |rotate::clock!0@1#1| () (_ BitVec 8) |main::1::clock!0@1#1|)

; find_symbols
(declare-fun |main::1::amount!0@1#1| () (_ BitVec 8))
; set_to true (equal)
(define-fun |rotate::amount!0@1#1| () (_ BitVec 8) |main::1::amount!0@1#1|)

; find_symbols
(declare-fun |main::1::din!0@1#1| () (_ BitVec 32))
; set_to true (equal)
(define-fun |rotate::din!0@1#1| () (_ BitVec 32) |main::1::din!0@1#1|)

; find_symbols
(declare-fun |main::1::dout!0@1| () (_ BitVec 32))
; set_to true (equal)
(define-fun |rotate::dout!0@1#1| () (_ BitVec 64) (concat (_ bv2 8) (_ bv0 56)))

; set_to true (equal)
(define-fun |smain#4| () (_ BitVec 64) (concat |rotate::din!0@1#1| (_ bv0 32)))

; set_to true (equal)
(define-fun |rotate::1::tmp0!0@1#2| () (_ BitVec 32) ((_ extract 63 32) |smain#4|))

; set_to true (equal)
(define-fun |rotate::1::tmp1!0@1#2| () (_ BitVec 32) (ite (= (bvand (_ bv1 32) ((_ zero_extend 24) |rotate::amount!0@1#1|)) (_ bv0 32)) |rotate::1::tmp0!0@1#2| (bvor (bvlshr |rotate::1::tmp0!0@1#2| (_ bv1 32)) (bvshl |rotate::1::tmp0!0@1#2| (_ bv31 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp2!0@1#2| () (_ BitVec 32) (ite (= (bvand (_ bv2 32) ((_ zero_extend 24) |rotate::amount!0@1#1|)) (_ bv0 32)) |rotate::1::tmp1!0@1#2| (bvor (bvlshr |rotate::1::tmp1!0@1#2| (_ bv2 32)) (bvshl |rotate::1::tmp1!0@1#2| (_ bv30 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp3!0@1#2| () (_ BitVec 32) (ite (= (bvand (_ bv4 32) ((_ zero_extend 24) |rotate::amount!0@1#1|)) (_ bv0 32)) |rotate::1::tmp2!0@1#2| (bvor (bvlshr |rotate::1::tmp2!0@1#2| (_ bv4 32)) (bvshl |rotate::1::tmp2!0@1#2| (_ bv28 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp4!0@1#2| () (_ BitVec 32) (ite (= (bvand (_ bv8 32) ((_ zero_extend 24) |rotate::amount!0@1#1|)) (_ bv0 32)) |rotate::1::tmp3!0@1#2| (bvor (bvlshr |rotate::1::tmp3!0@1#2| (_ bv8 32)) (bvshl |rotate::1::tmp3!0@1#2| (_ bv24 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp5!0@1#2| () (_ BitVec 32) (ite (= (bvand (_ bv16 32) ((_ zero_extend 24) |rotate::amount!0@1#1|)) (_ bv0 32)) |rotate::1::tmp4!0@1#2| (bvor (bvlshr |rotate::1::tmp4!0@1#2| (_ bv16 32)) (bvshl |rotate::1::tmp4!0@1#2| (_ bv16 32)))))

; set_to true (equal)
(define-fun |smain#5| () (_ BitVec 64) (let ((?withop |smain#4|)) (concat ((_ extract 63 32) ?withop) |rotate::1::tmp5!0@1#2|)))

; set_to true (equal)
(define-fun |main::1::dout!0@1#2| () (_ BitVec 32) |rotate::1::tmp5!0@1#2|)

; set_to true (equal)
(define-fun |rotate::clock!0@2#1| () (_ BitVec 8) |main::1::clock!0@1#1|)

; set_to true (equal)
(define-fun |rotate::amount!0@2#1| () (_ BitVec 8) |main::1::amount!0@1#1|)

; set_to true (equal)
(define-fun |rotate::din!0@2#1| () (_ BitVec 32) |main::1::din!0@1#1|)

; set_to true (equal)
(define-fun |rotate::dout!0@2#1| () (_ BitVec 64) (concat (_ bv2 8) (_ bv0 56)))

; set_to true (equal)
(define-fun |smain#6| () (_ BitVec 64) (let ((?withop |smain#5|)) (concat |rotate::din!0@2#1|((_ extract 31 0) ?withop))))

; set_to true (equal)
(define-fun |rotate::1::tmp0!0@2#2| () (_ BitVec 32) ((_ extract 63 32) |smain#6|))

; set_to true (equal)
(define-fun |rotate::1::tmp1!0@2#2| () (_ BitVec 32) (ite (= (bvand (_ bv1 32) ((_ zero_extend 24) |rotate::amount!0@2#1|)) (_ bv0 32)) |rotate::1::tmp0!0@2#2| (bvor (bvlshr |rotate::1::tmp0!0@2#2| (_ bv1 32)) (bvshl |rotate::1::tmp0!0@2#2| (_ bv31 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp2!0@2#2| () (_ BitVec 32) (ite (= (bvand (_ bv2 32) ((_ zero_extend 24) |rotate::amount!0@2#1|)) (_ bv0 32)) |rotate::1::tmp1!0@2#2| (bvor (bvlshr |rotate::1::tmp1!0@2#2| (_ bv2 32)) (bvshl |rotate::1::tmp1!0@2#2| (_ bv30 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp3!0@2#2| () (_ BitVec 32) (ite (= (bvand (_ bv4 32) ((_ zero_extend 24) |rotate::amount!0@2#1|)) (_ bv0 32)) |rotate::1::tmp2!0@2#2| (bvor (bvlshr |rotate::1::tmp2!0@2#2| (_ bv4 32)) (bvshl |rotate::1::tmp2!0@2#2| (_ bv28 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp4!0@2#2| () (_ BitVec 32) (ite (= (bvand (_ bv8 32) ((_ zero_extend 24) |rotate::amount!0@2#1|)) (_ bv0 32)) |rotate::1::tmp3!0@2#2| (bvor (bvlshr |rotate::1::tmp3!0@2#2| (_ bv8 32)) (bvshl |rotate::1::tmp3!0@2#2| (_ bv24 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp5!0@2#2| () (_ BitVec 32) (ite (= (bvand (_ bv16 32) ((_ zero_extend 24) |rotate::amount!0@2#1|)) (_ bv0 32)) |rotate::1::tmp4!0@2#2| (bvor (bvlshr |rotate::1::tmp4!0@2#2| (_ bv16 32)) (bvshl |rotate::1::tmp4!0@2#2| (_ bv16 32)))))

; set_to true (equal)
(define-fun |smain#7| () (_ BitVec 64) (let ((?withop |smain#6|)) (concat ((_ extract 63 32) ?withop) |rotate::1::tmp5!0@2#2|)))

; set_to true (equal)
(define-fun |main::1::dout!0@1#3| () (_ BitVec 32) |rotate::1::tmp5!0@2#2|)

; set_to true (equal)
(define-fun |rotate::clock!0@3#1| () (_ BitVec 8) |main::1::clock!0@1#1|)

; set_to true (equal)
(define-fun |rotate::amount!0@3#1| () (_ BitVec 8) |main::1::amount!0@1#1|)

; set_to true (equal)
(define-fun |rotate::din!0@3#1| () (_ BitVec 32) |main::1::din!0@1#1|)

; set_to true (equal)
(define-fun |rotate::dout!0@3#1| () (_ BitVec 64) (concat (_ bv2 8) (_ bv0 56)))

; set_to true (equal)
(define-fun |smain#8| () (_ BitVec 64) (let ((?withop |smain#7|)) (concat |rotate::din!0@3#1|((_ extract 31 0) ?withop))))

; set_to true (equal)
(define-fun |rotate::1::tmp0!0@3#2| () (_ BitVec 32) ((_ extract 63 32) |smain#8|))

; set_to true (equal)
(define-fun |rotate::1::tmp1!0@3#2| () (_ BitVec 32) (ite (= (bvand (_ bv1 32) ((_ zero_extend 24) |rotate::amount!0@3#1|)) (_ bv0 32)) |rotate::1::tmp0!0@3#2| (bvor (bvlshr |rotate::1::tmp0!0@3#2| (_ bv1 32)) (bvshl |rotate::1::tmp0!0@3#2| (_ bv31 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp2!0@3#2| () (_ BitVec 32) (ite (= (bvand (_ bv2 32) ((_ zero_extend 24) |rotate::amount!0@3#1|)) (_ bv0 32)) |rotate::1::tmp1!0@3#2| (bvor (bvlshr |rotate::1::tmp1!0@3#2| (_ bv2 32)) (bvshl |rotate::1::tmp1!0@3#2| (_ bv30 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp3!0@3#2| () (_ BitVec 32) (ite (= (bvand (_ bv4 32) ((_ zero_extend 24) |rotate::amount!0@3#1|)) (_ bv0 32)) |rotate::1::tmp2!0@3#2| (bvor (bvlshr |rotate::1::tmp2!0@3#2| (_ bv4 32)) (bvshl |rotate::1::tmp2!0@3#2| (_ bv28 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp4!0@3#2| () (_ BitVec 32) (ite (= (bvand (_ bv8 32) ((_ zero_extend 24) |rotate::amount!0@3#1|)) (_ bv0 32)) |rotate::1::tmp3!0@3#2| (bvor (bvlshr |rotate::1::tmp3!0@3#2| (_ bv8 32)) (bvshl |rotate::1::tmp3!0@3#2| (_ bv24 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp5!0@3#2| () (_ BitVec 32) (ite (= (bvand (_ bv16 32) ((_ zero_extend 24) |rotate::amount!0@3#1|)) (_ bv0 32)) |rotate::1::tmp4!0@3#2| (bvor (bvlshr |rotate::1::tmp4!0@3#2| (_ bv16 32)) (bvshl |rotate::1::tmp4!0@3#2| (_ bv16 32)))))

; set_to true (equal)
(define-fun |smain#9| () (_ BitVec 64) (let ((?withop |smain#8|)) (concat ((_ extract 63 32) ?withop) |rotate::1::tmp5!0@3#2|)))

; set_to true (equal)
(define-fun |main::1::dout!0@1#4| () (_ BitVec 32) |rotate::1::tmp5!0@3#2|)

; set_to true (equal)
(define-fun |rotate::clock!0@4#1| () (_ BitVec 8) |main::1::clock!0@1#1|)

; set_to true (equal)
(define-fun |rotate::amount!0@4#1| () (_ BitVec 8) |main::1::amount!0@1#1|)

; set_to true (equal)
(define-fun |rotate::din!0@4#1| () (_ BitVec 32) |main::1::din!0@1#1|)

; set_to true (equal)
(define-fun |rotate::dout!0@4#1| () (_ BitVec 64) (concat (_ bv2 8) (_ bv0 56)))

; set_to true (equal)
(define-fun |smain#10| () (_ BitVec 64) (let ((?withop |smain#9|)) (concat |rotate::din!0@4#1|((_ extract 31 0) ?withop))))

; set_to true (equal)
(define-fun |rotate::1::tmp0!0@4#2| () (_ BitVec 32) ((_ extract 63 32) |smain#10|))

; set_to true (equal)
(define-fun |rotate::1::tmp1!0@4#2| () (_ BitVec 32) (ite (= (bvand (_ bv1 32) ((_ zero_extend 24) |rotate::amount!0@4#1|)) (_ bv0 32)) |rotate::1::tmp0!0@4#2| (bvor (bvlshr |rotate::1::tmp0!0@4#2| (_ bv1 32)) (bvshl |rotate::1::tmp0!0@4#2| (_ bv31 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp2!0@4#2| () (_ BitVec 32) (ite (= (bvand (_ bv2 32) ((_ zero_extend 24) |rotate::amount!0@4#1|)) (_ bv0 32)) |rotate::1::tmp1!0@4#2| (bvor (bvlshr |rotate::1::tmp1!0@4#2| (_ bv2 32)) (bvshl |rotate::1::tmp1!0@4#2| (_ bv30 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp3!0@4#2| () (_ BitVec 32) (ite (= (bvand (_ bv4 32) ((_ zero_extend 24) |rotate::amount!0@4#1|)) (_ bv0 32)) |rotate::1::tmp2!0@4#2| (bvor (bvlshr |rotate::1::tmp2!0@4#2| (_ bv4 32)) (bvshl |rotate::1::tmp2!0@4#2| (_ bv28 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp4!0@4#2| () (_ BitVec 32) (ite (= (bvand (_ bv8 32) ((_ zero_extend 24) |rotate::amount!0@4#1|)) (_ bv0 32)) |rotate::1::tmp3!0@4#2| (bvor (bvlshr |rotate::1::tmp3!0@4#2| (_ bv8 32)) (bvshl |rotate::1::tmp3!0@4#2| (_ bv24 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp5!0@4#2| () (_ BitVec 32) (ite (= (bvand (_ bv16 32) ((_ zero_extend 24) |rotate::amount!0@4#1|)) (_ bv0 32)) |rotate::1::tmp4!0@4#2| (bvor (bvlshr |rotate::1::tmp4!0@4#2| (_ bv16 32)) (bvshl |rotate::1::tmp4!0@4#2| (_ bv16 32)))))

; set_to true (equal)
(define-fun |smain#11| () (_ BitVec 64) (let ((?withop |smain#10|)) (concat ((_ extract 63 32) ?withop) |rotate::1::tmp5!0@4#2|)))

; set_to true (equal)
(define-fun |main::1::dout!0@1#5| () (_ BitVec 32) |rotate::1::tmp5!0@4#2|)

; set_to true (equal)
(define-fun |rotate::clock!0@5#1| () (_ BitVec 8) |main::1::clock!0@1#1|)

; set_to true (equal)
(define-fun |rotate::amount!0@5#1| () (_ BitVec 8) |main::1::amount!0@1#1|)

; set_to true (equal)
(define-fun |rotate::din!0@5#1| () (_ BitVec 32) |main::1::din!0@1#1|)

; set_to true (equal)
(define-fun |rotate::dout!0@5#1| () (_ BitVec 64) (concat (_ bv2 8) (_ bv0 56)))

; set_to true (equal)
(define-fun |smain#12| () (_ BitVec 64) (let ((?withop |smain#11|)) (concat |rotate::din!0@5#1|((_ extract 31 0) ?withop))))

; set_to true (equal)
(define-fun |rotate::1::tmp0!0@5#2| () (_ BitVec 32) ((_ extract 63 32) |smain#12|))

; set_to true (equal)
(define-fun |rotate::1::tmp1!0@5#2| () (_ BitVec 32) (ite (= (bvand (_ bv1 32) ((_ zero_extend 24) |rotate::amount!0@5#1|)) (_ bv0 32)) |rotate::1::tmp0!0@5#2| (bvor (bvlshr |rotate::1::tmp0!0@5#2| (_ bv1 32)) (bvshl |rotate::1::tmp0!0@5#2| (_ bv31 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp2!0@5#2| () (_ BitVec 32) (ite (= (bvand (_ bv2 32) ((_ zero_extend 24) |rotate::amount!0@5#1|)) (_ bv0 32)) |rotate::1::tmp1!0@5#2| (bvor (bvlshr |rotate::1::tmp1!0@5#2| (_ bv2 32)) (bvshl |rotate::1::tmp1!0@5#2| (_ bv30 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp3!0@5#2| () (_ BitVec 32) (ite (= (bvand (_ bv4 32) ((_ zero_extend 24) |rotate::amount!0@5#1|)) (_ bv0 32)) |rotate::1::tmp2!0@5#2| (bvor (bvlshr |rotate::1::tmp2!0@5#2| (_ bv4 32)) (bvshl |rotate::1::tmp2!0@5#2| (_ bv28 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp4!0@5#2| () (_ BitVec 32) (ite (= (bvand (_ bv8 32) ((_ zero_extend 24) |rotate::amount!0@5#1|)) (_ bv0 32)) |rotate::1::tmp3!0@5#2| (bvor (bvlshr |rotate::1::tmp3!0@5#2| (_ bv8 32)) (bvshl |rotate::1::tmp3!0@5#2| (_ bv24 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp5!0@5#2| () (_ BitVec 32) (ite (= (bvand (_ bv16 32) ((_ zero_extend 24) |rotate::amount!0@5#1|)) (_ bv0 32)) |rotate::1::tmp4!0@5#2| (bvor (bvlshr |rotate::1::tmp4!0@5#2| (_ bv16 32)) (bvshl |rotate::1::tmp4!0@5#2| (_ bv16 32)))))

; set_to true (equal)
(define-fun |smain#13| () (_ BitVec 64) (let ((?withop |smain#12|)) (concat ((_ extract 63 32) ?withop) |rotate::1::tmp5!0@5#2|)))

; set_to true (equal)
(define-fun |main::1::dout!0@1#6| () (_ BitVec 32) |rotate::1::tmp5!0@5#2|)

; set_to true (equal)
(define-fun |rotate::clock!0@6#1| () (_ BitVec 8) |main::1::clock!0@1#1|)

; set_to true (equal)
(define-fun |rotate::amount!0@6#1| () (_ BitVec 8) |main::1::amount!0@1#1|)

; set_to true (equal)
(define-fun |rotate::din!0@6#1| () (_ BitVec 32) |main::1::din!0@1#1|)

; set_to true (equal)
(define-fun |rotate::dout!0@6#1| () (_ BitVec 64) (concat (_ bv2 8) (_ bv0 56)))

; set_to true (equal)
(define-fun |smain#14| () (_ BitVec 64) (let ((?withop |smain#13|)) (concat |rotate::din!0@6#1|((_ extract 31 0) ?withop))))

; set_to true (equal)
(define-fun |rotate::1::tmp0!0@6#2| () (_ BitVec 32) ((_ extract 63 32) |smain#14|))

; set_to true (equal)
(define-fun |rotate::1::tmp1!0@6#2| () (_ BitVec 32) (ite (= (bvand (_ bv1 32) ((_ zero_extend 24) |rotate::amount!0@6#1|)) (_ bv0 32)) |rotate::1::tmp0!0@6#2| (bvor (bvlshr |rotate::1::tmp0!0@6#2| (_ bv1 32)) (bvshl |rotate::1::tmp0!0@6#2| (_ bv31 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp2!0@6#2| () (_ BitVec 32) (ite (= (bvand (_ bv2 32) ((_ zero_extend 24) |rotate::amount!0@6#1|)) (_ bv0 32)) |rotate::1::tmp1!0@6#2| (bvor (bvlshr |rotate::1::tmp1!0@6#2| (_ bv2 32)) (bvshl |rotate::1::tmp1!0@6#2| (_ bv30 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp3!0@6#2| () (_ BitVec 32) (ite (= (bvand (_ bv4 32) ((_ zero_extend 24) |rotate::amount!0@6#1|)) (_ bv0 32)) |rotate::1::tmp2!0@6#2| (bvor (bvlshr |rotate::1::tmp2!0@6#2| (_ bv4 32)) (bvshl |rotate::1::tmp2!0@6#2| (_ bv28 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp4!0@6#2| () (_ BitVec 32) (ite (= (bvand (_ bv8 32) ((_ zero_extend 24) |rotate::amount!0@6#1|)) (_ bv0 32)) |rotate::1::tmp3!0@6#2| (bvor (bvlshr |rotate::1::tmp3!0@6#2| (_ bv8 32)) (bvshl |rotate::1::tmp3!0@6#2| (_ bv24 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp5!0@6#2| () (_ BitVec 32) (ite (= (bvand (_ bv16 32) ((_ zero_extend 24) |rotate::amount!0@6#1|)) (_ bv0 32)) |rotate::1::tmp4!0@6#2| (bvor (bvlshr |rotate::1::tmp4!0@6#2| (_ bv16 32)) (bvshl |rotate::1::tmp4!0@6#2| (_ bv16 32)))))

; set_to true (equal)
(define-fun |smain#15| () (_ BitVec 64) (let ((?withop |smain#14|)) (concat ((_ extract 63 32) ?withop) |rotate::1::tmp5!0@6#2|)))

; set_to true (equal)
(define-fun |main::1::dout!0@1#7| () (_ BitVec 32) |rotate::1::tmp5!0@6#2|)

; set_to true (equal)
(define-fun |rotate::clock!0@7#1| () (_ BitVec 8) |main::1::clock!0@1#1|)

; set_to true (equal)
(define-fun |rotate::amount!0@7#1| () (_ BitVec 8) |main::1::amount!0@1#1|)

; set_to true (equal)
(define-fun |rotate::din!0@7#1| () (_ BitVec 32) |main::1::din!0@1#1|)

; set_to true (equal)
(define-fun |rotate::dout!0@7#1| () (_ BitVec 64) (concat (_ bv2 8) (_ bv0 56)))

; set_to true (equal)
(define-fun |smain#16| () (_ BitVec 64) (let ((?withop |smain#15|)) (concat |rotate::din!0@7#1|((_ extract 31 0) ?withop))))

; set_to true (equal)
(define-fun |rotate::1::tmp0!0@7#2| () (_ BitVec 32) ((_ extract 63 32) |smain#16|))

; set_to true (equal)
(define-fun |rotate::1::tmp1!0@7#2| () (_ BitVec 32) (ite (= (bvand (_ bv1 32) ((_ zero_extend 24) |rotate::amount!0@7#1|)) (_ bv0 32)) |rotate::1::tmp0!0@7#2| (bvor (bvlshr |rotate::1::tmp0!0@7#2| (_ bv1 32)) (bvshl |rotate::1::tmp0!0@7#2| (_ bv31 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp2!0@7#2| () (_ BitVec 32) (ite (= (bvand (_ bv2 32) ((_ zero_extend 24) |rotate::amount!0@7#1|)) (_ bv0 32)) |rotate::1::tmp1!0@7#2| (bvor (bvlshr |rotate::1::tmp1!0@7#2| (_ bv2 32)) (bvshl |rotate::1::tmp1!0@7#2| (_ bv30 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp3!0@7#2| () (_ BitVec 32) (ite (= (bvand (_ bv4 32) ((_ zero_extend 24) |rotate::amount!0@7#1|)) (_ bv0 32)) |rotate::1::tmp2!0@7#2| (bvor (bvlshr |rotate::1::tmp2!0@7#2| (_ bv4 32)) (bvshl |rotate::1::tmp2!0@7#2| (_ bv28 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp4!0@7#2| () (_ BitVec 32) (ite (= (bvand (_ bv8 32) ((_ zero_extend 24) |rotate::amount!0@7#1|)) (_ bv0 32)) |rotate::1::tmp3!0@7#2| (bvor (bvlshr |rotate::1::tmp3!0@7#2| (_ bv8 32)) (bvshl |rotate::1::tmp3!0@7#2| (_ bv24 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp5!0@7#2| () (_ BitVec 32) (ite (= (bvand (_ bv16 32) ((_ zero_extend 24) |rotate::amount!0@7#1|)) (_ bv0 32)) |rotate::1::tmp4!0@7#2| (bvor (bvlshr |rotate::1::tmp4!0@7#2| (_ bv16 32)) (bvshl |rotate::1::tmp4!0@7#2| (_ bv16 32)))))

; set_to true (equal)
(define-fun |smain#17| () (_ BitVec 64) (let ((?withop |smain#16|)) (concat ((_ extract 63 32) ?withop) |rotate::1::tmp5!0@7#2|)))

; set_to true (equal)
(define-fun |main::1::dout!0@1#8| () (_ BitVec 32) |rotate::1::tmp5!0@7#2|)

; set_to true (equal)
(define-fun |rotate::clock!0@8#1| () (_ BitVec 8) |main::1::clock!0@1#1|)

; set_to true (equal)
(define-fun |rotate::amount!0@8#1| () (_ BitVec 8) |main::1::amount!0@1#1|)

; set_to true (equal)
(define-fun |rotate::din!0@8#1| () (_ BitVec 32) |main::1::din!0@1#1|)

; set_to true (equal)
(define-fun |rotate::dout!0@8#1| () (_ BitVec 64) (concat (_ bv2 8) (_ bv0 56)))

; set_to true (equal)
(define-fun |smain#18| () (_ BitVec 64) (let ((?withop |smain#17|)) (concat |rotate::din!0@8#1|((_ extract 31 0) ?withop))))

; set_to true (equal)
(define-fun |rotate::1::tmp0!0@8#2| () (_ BitVec 32) ((_ extract 63 32) |smain#18|))

; set_to true (equal)
(define-fun |rotate::1::tmp1!0@8#2| () (_ BitVec 32) (ite (= (bvand (_ bv1 32) ((_ zero_extend 24) |rotate::amount!0@8#1|)) (_ bv0 32)) |rotate::1::tmp0!0@8#2| (bvor (bvlshr |rotate::1::tmp0!0@8#2| (_ bv1 32)) (bvshl |rotate::1::tmp0!0@8#2| (_ bv31 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp2!0@8#2| () (_ BitVec 32) (ite (= (bvand (_ bv2 32) ((_ zero_extend 24) |rotate::amount!0@8#1|)) (_ bv0 32)) |rotate::1::tmp1!0@8#2| (bvor (bvlshr |rotate::1::tmp1!0@8#2| (_ bv2 32)) (bvshl |rotate::1::tmp1!0@8#2| (_ bv30 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp3!0@8#2| () (_ BitVec 32) (ite (= (bvand (_ bv4 32) ((_ zero_extend 24) |rotate::amount!0@8#1|)) (_ bv0 32)) |rotate::1::tmp2!0@8#2| (bvor (bvlshr |rotate::1::tmp2!0@8#2| (_ bv4 32)) (bvshl |rotate::1::tmp2!0@8#2| (_ bv28 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp4!0@8#2| () (_ BitVec 32) (ite (= (bvand (_ bv8 32) ((_ zero_extend 24) |rotate::amount!0@8#1|)) (_ bv0 32)) |rotate::1::tmp3!0@8#2| (bvor (bvlshr |rotate::1::tmp3!0@8#2| (_ bv8 32)) (bvshl |rotate::1::tmp3!0@8#2| (_ bv24 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp5!0@8#2| () (_ BitVec 32) (ite (= (bvand (_ bv16 32) ((_ zero_extend 24) |rotate::amount!0@8#1|)) (_ bv0 32)) |rotate::1::tmp4!0@8#2| (bvor (bvlshr |rotate::1::tmp4!0@8#2| (_ bv16 32)) (bvshl |rotate::1::tmp4!0@8#2| (_ bv16 32)))))

; set_to true (equal)
(define-fun |smain#19| () (_ BitVec 64) (let ((?withop |smain#18|)) (concat ((_ extract 63 32) ?withop) |rotate::1::tmp5!0@8#2|)))

; set_to true (equal)
(define-fun |main::1::dout!0@1#9| () (_ BitVec 32) |rotate::1::tmp5!0@8#2|)

; set_to true (equal)
(define-fun |rotate::clock!0@9#1| () (_ BitVec 8) |main::1::clock!0@1#1|)

; set_to true (equal)
(define-fun |rotate::amount!0@9#1| () (_ BitVec 8) |main::1::amount!0@1#1|)

; set_to true (equal)
(define-fun |rotate::din!0@9#1| () (_ BitVec 32) |main::1::din!0@1#1|)

; set_to true (equal)
(define-fun |rotate::dout!0@9#1| () (_ BitVec 64) (concat (_ bv2 8) (_ bv0 56)))

; set_to true (equal)
(define-fun |smain#20| () (_ BitVec 64) (let ((?withop |smain#19|)) (concat |rotate::din!0@9#1|((_ extract 31 0) ?withop))))

; set_to true (equal)
(define-fun |rotate::1::tmp0!0@9#2| () (_ BitVec 32) ((_ extract 63 32) |smain#20|))

; set_to true (equal)
(define-fun |rotate::1::tmp1!0@9#2| () (_ BitVec 32) (ite (= (bvand (_ bv1 32) ((_ zero_extend 24) |rotate::amount!0@9#1|)) (_ bv0 32)) |rotate::1::tmp0!0@9#2| (bvor (bvlshr |rotate::1::tmp0!0@9#2| (_ bv1 32)) (bvshl |rotate::1::tmp0!0@9#2| (_ bv31 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp2!0@9#2| () (_ BitVec 32) (ite (= (bvand (_ bv2 32) ((_ zero_extend 24) |rotate::amount!0@9#1|)) (_ bv0 32)) |rotate::1::tmp1!0@9#2| (bvor (bvlshr |rotate::1::tmp1!0@9#2| (_ bv2 32)) (bvshl |rotate::1::tmp1!0@9#2| (_ bv30 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp3!0@9#2| () (_ BitVec 32) (ite (= (bvand (_ bv4 32) ((_ zero_extend 24) |rotate::amount!0@9#1|)) (_ bv0 32)) |rotate::1::tmp2!0@9#2| (bvor (bvlshr |rotate::1::tmp2!0@9#2| (_ bv4 32)) (bvshl |rotate::1::tmp2!0@9#2| (_ bv28 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp4!0@9#2| () (_ BitVec 32) (ite (= (bvand (_ bv8 32) ((_ zero_extend 24) |rotate::amount!0@9#1|)) (_ bv0 32)) |rotate::1::tmp3!0@9#2| (bvor (bvlshr |rotate::1::tmp3!0@9#2| (_ bv8 32)) (bvshl |rotate::1::tmp3!0@9#2| (_ bv24 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp5!0@9#2| () (_ BitVec 32) (ite (= (bvand (_ bv16 32) ((_ zero_extend 24) |rotate::amount!0@9#1|)) (_ bv0 32)) |rotate::1::tmp4!0@9#2| (bvor (bvlshr |rotate::1::tmp4!0@9#2| (_ bv16 32)) (bvshl |rotate::1::tmp4!0@9#2| (_ bv16 32)))))

; set_to true (equal)
(define-fun |smain#21| () (_ BitVec 64) (let ((?withop |smain#20|)) (concat ((_ extract 63 32) ?withop) |rotate::1::tmp5!0@9#2|)))

; set_to true (equal)
(define-fun |main::1::dout!0@1#10| () (_ BitVec 32) |rotate::1::tmp5!0@9#2|)

; set_to true (equal)
(define-fun |rotate::clock!0@10#1| () (_ BitVec 8) |main::1::clock!0@1#1|)

; set_to true (equal)
(define-fun |rotate::amount!0@10#1| () (_ BitVec 8) |main::1::amount!0@1#1|)

; set_to true (equal)
(define-fun |rotate::din!0@10#1| () (_ BitVec 32) |main::1::din!0@1#1|)

; set_to true (equal)
(define-fun |rotate::dout!0@10#1| () (_ BitVec 64) (concat (_ bv2 8) (_ bv0 56)))

; set_to true (equal)
(define-fun |smain#22| () (_ BitVec 64) (let ((?withop |smain#21|)) (concat |rotate::din!0@10#1|((_ extract 31 0) ?withop))))

; set_to true (equal)
(define-fun |rotate::1::tmp0!0@10#2| () (_ BitVec 32) ((_ extract 63 32) |smain#22|))

; set_to true (equal)
(define-fun |rotate::1::tmp1!0@10#2| () (_ BitVec 32) (ite (= (bvand (_ bv1 32) ((_ zero_extend 24) |rotate::amount!0@10#1|)) (_ bv0 32)) |rotate::1::tmp0!0@10#2| (bvor (bvlshr |rotate::1::tmp0!0@10#2| (_ bv1 32)) (bvshl |rotate::1::tmp0!0@10#2| (_ bv31 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp2!0@10#2| () (_ BitVec 32) (ite (= (bvand (_ bv2 32) ((_ zero_extend 24) |rotate::amount!0@10#1|)) (_ bv0 32)) |rotate::1::tmp1!0@10#2| (bvor (bvlshr |rotate::1::tmp1!0@10#2| (_ bv2 32)) (bvshl |rotate::1::tmp1!0@10#2| (_ bv30 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp3!0@10#2| () (_ BitVec 32) (ite (= (bvand (_ bv4 32) ((_ zero_extend 24) |rotate::amount!0@10#1|)) (_ bv0 32)) |rotate::1::tmp2!0@10#2| (bvor (bvlshr |rotate::1::tmp2!0@10#2| (_ bv4 32)) (bvshl |rotate::1::tmp2!0@10#2| (_ bv28 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp4!0@10#2| () (_ BitVec 32) (ite (= (bvand (_ bv8 32) ((_ zero_extend 24) |rotate::amount!0@10#1|)) (_ bv0 32)) |rotate::1::tmp3!0@10#2| (bvor (bvlshr |rotate::1::tmp3!0@10#2| (_ bv8 32)) (bvshl |rotate::1::tmp3!0@10#2| (_ bv24 32)))))

; set_to true (equal)
(define-fun |rotate::1::tmp5!0@10#2| () (_ BitVec 32) (ite (= (bvand (_ bv16 32) ((_ zero_extend 24) |rotate::amount!0@10#1|)) (_ bv0 32)) |rotate::1::tmp4!0@10#2| (bvor (bvlshr |rotate::1::tmp4!0@10#2| (_ bv16 32)) (bvshl |rotate::1::tmp4!0@10#2| (_ bv16 32)))))

; set_to true (equal)
(define-fun |smain#23| () (_ BitVec 64) (let ((?withop |smain#22|)) (concat ((_ extract 63 32) ?withop) |rotate::1::tmp5!0@10#2|)))

; set_to true (equal)
(define-fun |main::1::dout!0@1#11| () (_ BitVec 32) |rotate::1::tmp5!0@10#2|)

; convert
(define-fun |B0| () Bool (= |main::1::clock!0@1#1| |main::1::clock!0@1#1|))

; convert
(define-fun |B1| () Bool (= |main::1::amount!0@1#1| |main::1::amount!0@1#1|))

; convert
(define-fun |B2| () Bool (= |main::1::din!0@1#1| |main::1::din!0@1#1|))

; find_symbols
(declare-fun |main::1::dout!0@1#1| () (_ BitVec 32))
; convert
(define-fun |B3| () Bool (= |main::1::dout!0@1#1| |main::1::dout!0@1#1|))

; find_symbols
(declare-fun |rotate::1::dout_old!0@1#1| () (_ BitVec 32))
; convert
(define-fun |B4| () Bool (= |rotate::1::dout_old!0@1#1| |rotate::1::dout_old!0@1#1|))

; find_symbols
(declare-fun |rotate::1::inr_old!0@1#1| () (_ BitVec 32))
; convert
(define-fun |B5| () Bool (= |rotate::1::inr_old!0@1#1| |rotate::1::inr_old!0@1#1|))

; find_symbols
(declare-fun |rotate::1::tmp0!0@1#1| () (_ BitVec 32))
; convert
(define-fun |B6| () Bool (= |rotate::1::tmp0!0@1#1| |rotate::1::tmp0!0@1#1|))

; find_symbols
(declare-fun |rotate::1::tmp1!0@1#1| () (_ BitVec 32))
; convert
(define-fun |B7| () Bool (= |rotate::1::tmp1!0@1#1| |rotate::1::tmp1!0@1#1|))

; find_symbols
(declare-fun |rotate::1::tmp2!0@1#1| () (_ BitVec 32))
; convert
(define-fun |B8| () Bool (= |rotate::1::tmp2!0@1#1| |rotate::1::tmp2!0@1#1|))

; find_symbols
(declare-fun |rotate::1::tmp3!0@1#1| () (_ BitVec 32))
; convert
(define-fun |B9| () Bool (= |rotate::1::tmp3!0@1#1| |rotate::1::tmp3!0@1#1|))

; find_symbols
(declare-fun |rotate::1::tmp4!0@1#1| () (_ BitVec 32))
; convert
(define-fun |B10| () Bool (= |rotate::1::tmp4!0@1#1| |rotate::1::tmp4!0@1#1|))

; find_symbols
(declare-fun |rotate::1::tmp5!0@1#1| () (_ BitVec 32))
; convert
(define-fun |B11| () Bool (= |rotate::1::tmp5!0@1#1| |rotate::1::tmp5!0@1#1|))

; find_symbols
(declare-fun |rotate::1::dout_old!0@2#1| () (_ BitVec 32))
; convert
(define-fun |B12| () Bool (= |rotate::1::dout_old!0@2#1| |rotate::1::dout_old!0@2#1|))

; find_symbols
(declare-fun |rotate::1::inr_old!0@2#1| () (_ BitVec 32))
; convert
(define-fun |B13| () Bool (= |rotate::1::inr_old!0@2#1| |rotate::1::inr_old!0@2#1|))

; find_symbols
(declare-fun |rotate::1::tmp0!0@2#1| () (_ BitVec 32))
; convert
(define-fun |B14| () Bool (= |rotate::1::tmp0!0@2#1| |rotate::1::tmp0!0@2#1|))

; find_symbols
(declare-fun |rotate::1::tmp1!0@2#1| () (_ BitVec 32))
; convert
(define-fun |B15| () Bool (= |rotate::1::tmp1!0@2#1| |rotate::1::tmp1!0@2#1|))

; find_symbols
(declare-fun |rotate::1::tmp2!0@2#1| () (_ BitVec 32))
; convert
(define-fun |B16| () Bool (= |rotate::1::tmp2!0@2#1| |rotate::1::tmp2!0@2#1|))

; find_symbols
(declare-fun |rotate::1::tmp3!0@2#1| () (_ BitVec 32))
; convert
(define-fun |B17| () Bool (= |rotate::1::tmp3!0@2#1| |rotate::1::tmp3!0@2#1|))

; find_symbols
(declare-fun |rotate::1::tmp4!0@2#1| () (_ BitVec 32))
; convert
(define-fun |B18| () Bool (= |rotate::1::tmp4!0@2#1| |rotate::1::tmp4!0@2#1|))

; find_symbols
(declare-fun |rotate::1::tmp5!0@2#1| () (_ BitVec 32))
; convert
(define-fun |B19| () Bool (= |rotate::1::tmp5!0@2#1| |rotate::1::tmp5!0@2#1|))

; find_symbols
(declare-fun |rotate::1::dout_old!0@3#1| () (_ BitVec 32))
; convert
(define-fun |B20| () Bool (= |rotate::1::dout_old!0@3#1| |rotate::1::dout_old!0@3#1|))

; find_symbols
(declare-fun |rotate::1::inr_old!0@3#1| () (_ BitVec 32))
; convert
(define-fun |B21| () Bool (= |rotate::1::inr_old!0@3#1| |rotate::1::inr_old!0@3#1|))

; find_symbols
(declare-fun |rotate::1::tmp0!0@3#1| () (_ BitVec 32))
; convert
(define-fun |B22| () Bool (= |rotate::1::tmp0!0@3#1| |rotate::1::tmp0!0@3#1|))

; find_symbols
(declare-fun |rotate::1::tmp1!0@3#1| () (_ BitVec 32))
; convert
(define-fun |B23| () Bool (= |rotate::1::tmp1!0@3#1| |rotate::1::tmp1!0@3#1|))

; find_symbols
(declare-fun |rotate::1::tmp2!0@3#1| () (_ BitVec 32))
; convert
(define-fun |B24| () Bool (= |rotate::1::tmp2!0@3#1| |rotate::1::tmp2!0@3#1|))

; find_symbols
(declare-fun |rotate::1::tmp3!0@3#1| () (_ BitVec 32))
; convert
(define-fun |B25| () Bool (= |rotate::1::tmp3!0@3#1| |rotate::1::tmp3!0@3#1|))

; find_symbols
(declare-fun |rotate::1::tmp4!0@3#1| () (_ BitVec 32))
; convert
(define-fun |B26| () Bool (= |rotate::1::tmp4!0@3#1| |rotate::1::tmp4!0@3#1|))

; find_symbols
(declare-fun |rotate::1::tmp5!0@3#1| () (_ BitVec 32))
; convert
(define-fun |B27| () Bool (= |rotate::1::tmp5!0@3#1| |rotate::1::tmp5!0@3#1|))

; find_symbols
(declare-fun |rotate::1::dout_old!0@4#1| () (_ BitVec 32))
; convert
(define-fun |B28| () Bool (= |rotate::1::dout_old!0@4#1| |rotate::1::dout_old!0@4#1|))

; find_symbols
(declare-fun |rotate::1::inr_old!0@4#1| () (_ BitVec 32))
; convert
(define-fun |B29| () Bool (= |rotate::1::inr_old!0@4#1| |rotate::1::inr_old!0@4#1|))

; find_symbols
(declare-fun |rotate::1::tmp0!0@4#1| () (_ BitVec 32))
; convert
(define-fun |B30| () Bool (= |rotate::1::tmp0!0@4#1| |rotate::1::tmp0!0@4#1|))

; find_symbols
(declare-fun |rotate::1::tmp1!0@4#1| () (_ BitVec 32))
; convert
(define-fun |B31| () Bool (= |rotate::1::tmp1!0@4#1| |rotate::1::tmp1!0@4#1|))

; find_symbols
(declare-fun |rotate::1::tmp2!0@4#1| () (_ BitVec 32))
; convert
(define-fun |B32| () Bool (= |rotate::1::tmp2!0@4#1| |rotate::1::tmp2!0@4#1|))

; find_symbols
(declare-fun |rotate::1::tmp3!0@4#1| () (_ BitVec 32))
; convert
(define-fun |B33| () Bool (= |rotate::1::tmp3!0@4#1| |rotate::1::tmp3!0@4#1|))

; find_symbols
(declare-fun |rotate::1::tmp4!0@4#1| () (_ BitVec 32))
; convert
(define-fun |B34| () Bool (= |rotate::1::tmp4!0@4#1| |rotate::1::tmp4!0@4#1|))

; find_symbols
(declare-fun |rotate::1::tmp5!0@4#1| () (_ BitVec 32))
; convert
(define-fun |B35| () Bool (= |rotate::1::tmp5!0@4#1| |rotate::1::tmp5!0@4#1|))

; find_symbols
(declare-fun |rotate::1::dout_old!0@5#1| () (_ BitVec 32))
; convert
(define-fun |B36| () Bool (= |rotate::1::dout_old!0@5#1| |rotate::1::dout_old!0@5#1|))

; find_symbols
(declare-fun |rotate::1::inr_old!0@5#1| () (_ BitVec 32))
; convert
(define-fun |B37| () Bool (= |rotate::1::inr_old!0@5#1| |rotate::1::inr_old!0@5#1|))

; find_symbols
(declare-fun |rotate::1::tmp0!0@5#1| () (_ BitVec 32))
; convert
(define-fun |B38| () Bool (= |rotate::1::tmp0!0@5#1| |rotate::1::tmp0!0@5#1|))

; find_symbols
(declare-fun |rotate::1::tmp1!0@5#1| () (_ BitVec 32))
; convert
(define-fun |B39| () Bool (= |rotate::1::tmp1!0@5#1| |rotate::1::tmp1!0@5#1|))

; find_symbols
(declare-fun |rotate::1::tmp2!0@5#1| () (_ BitVec 32))
; convert
(define-fun |B40| () Bool (= |rotate::1::tmp2!0@5#1| |rotate::1::tmp2!0@5#1|))

; find_symbols
(declare-fun |rotate::1::tmp3!0@5#1| () (_ BitVec 32))
; convert
(define-fun |B41| () Bool (= |rotate::1::tmp3!0@5#1| |rotate::1::tmp3!0@5#1|))

; find_symbols
(declare-fun |rotate::1::tmp4!0@5#1| () (_ BitVec 32))
; convert
(define-fun |B42| () Bool (= |rotate::1::tmp4!0@5#1| |rotate::1::tmp4!0@5#1|))

; find_symbols
(declare-fun |rotate::1::tmp5!0@5#1| () (_ BitVec 32))
; convert
(define-fun |B43| () Bool (= |rotate::1::tmp5!0@5#1| |rotate::1::tmp5!0@5#1|))

; find_symbols
(declare-fun |rotate::1::dout_old!0@6#1| () (_ BitVec 32))
; convert
(define-fun |B44| () Bool (= |rotate::1::dout_old!0@6#1| |rotate::1::dout_old!0@6#1|))

; find_symbols
(declare-fun |rotate::1::inr_old!0@6#1| () (_ BitVec 32))
; convert
(define-fun |B45| () Bool (= |rotate::1::inr_old!0@6#1| |rotate::1::inr_old!0@6#1|))

; find_symbols
(declare-fun |rotate::1::tmp0!0@6#1| () (_ BitVec 32))
; convert
(define-fun |B46| () Bool (= |rotate::1::tmp0!0@6#1| |rotate::1::tmp0!0@6#1|))

; find_symbols
(declare-fun |rotate::1::tmp1!0@6#1| () (_ BitVec 32))
; convert
(define-fun |B47| () Bool (= |rotate::1::tmp1!0@6#1| |rotate::1::tmp1!0@6#1|))

; find_symbols
(declare-fun |rotate::1::tmp2!0@6#1| () (_ BitVec 32))
; convert
(define-fun |B48| () Bool (= |rotate::1::tmp2!0@6#1| |rotate::1::tmp2!0@6#1|))

; find_symbols
(declare-fun |rotate::1::tmp3!0@6#1| () (_ BitVec 32))
; convert
(define-fun |B49| () Bool (= |rotate::1::tmp3!0@6#1| |rotate::1::tmp3!0@6#1|))

; find_symbols
(declare-fun |rotate::1::tmp4!0@6#1| () (_ BitVec 32))
; convert
(define-fun |B50| () Bool (= |rotate::1::tmp4!0@6#1| |rotate::1::tmp4!0@6#1|))

; find_symbols
(declare-fun |rotate::1::tmp5!0@6#1| () (_ BitVec 32))
; convert
(define-fun |B51| () Bool (= |rotate::1::tmp5!0@6#1| |rotate::1::tmp5!0@6#1|))

; find_symbols
(declare-fun |rotate::1::dout_old!0@7#1| () (_ BitVec 32))
; convert
(define-fun |B52| () Bool (= |rotate::1::dout_old!0@7#1| |rotate::1::dout_old!0@7#1|))

; find_symbols
(declare-fun |rotate::1::inr_old!0@7#1| () (_ BitVec 32))
; convert
(define-fun |B53| () Bool (= |rotate::1::inr_old!0@7#1| |rotate::1::inr_old!0@7#1|))

; find_symbols
(declare-fun |rotate::1::tmp0!0@7#1| () (_ BitVec 32))
; convert
(define-fun |B54| () Bool (= |rotate::1::tmp0!0@7#1| |rotate::1::tmp0!0@7#1|))

; find_symbols
(declare-fun |rotate::1::tmp1!0@7#1| () (_ BitVec 32))
; convert
(define-fun |B55| () Bool (= |rotate::1::tmp1!0@7#1| |rotate::1::tmp1!0@7#1|))

; find_symbols
(declare-fun |rotate::1::tmp2!0@7#1| () (_ BitVec 32))
; convert
(define-fun |B56| () Bool (= |rotate::1::tmp2!0@7#1| |rotate::1::tmp2!0@7#1|))

; find_symbols
(declare-fun |rotate::1::tmp3!0@7#1| () (_ BitVec 32))
; convert
(define-fun |B57| () Bool (= |rotate::1::tmp3!0@7#1| |rotate::1::tmp3!0@7#1|))

; find_symbols
(declare-fun |rotate::1::tmp4!0@7#1| () (_ BitVec 32))
; convert
(define-fun |B58| () Bool (= |rotate::1::tmp4!0@7#1| |rotate::1::tmp4!0@7#1|))

; find_symbols
(declare-fun |rotate::1::tmp5!0@7#1| () (_ BitVec 32))
; convert
(define-fun |B59| () Bool (= |rotate::1::tmp5!0@7#1| |rotate::1::tmp5!0@7#1|))

; find_symbols
(declare-fun |rotate::1::dout_old!0@8#1| () (_ BitVec 32))
; convert
(define-fun |B60| () Bool (= |rotate::1::dout_old!0@8#1| |rotate::1::dout_old!0@8#1|))

; find_symbols
(declare-fun |rotate::1::inr_old!0@8#1| () (_ BitVec 32))
; convert
(define-fun |B61| () Bool (= |rotate::1::inr_old!0@8#1| |rotate::1::inr_old!0@8#1|))

; find_symbols
(declare-fun |rotate::1::tmp0!0@8#1| () (_ BitVec 32))
; convert
(define-fun |B62| () Bool (= |rotate::1::tmp0!0@8#1| |rotate::1::tmp0!0@8#1|))

; find_symbols
(declare-fun |rotate::1::tmp1!0@8#1| () (_ BitVec 32))
; convert
(define-fun |B63| () Bool (= |rotate::1::tmp1!0@8#1| |rotate::1::tmp1!0@8#1|))

; find_symbols
(declare-fun |rotate::1::tmp2!0@8#1| () (_ BitVec 32))
; convert
(define-fun |B64| () Bool (= |rotate::1::tmp2!0@8#1| |rotate::1::tmp2!0@8#1|))

; find_symbols
(declare-fun |rotate::1::tmp3!0@8#1| () (_ BitVec 32))
; convert
(define-fun |B65| () Bool (= |rotate::1::tmp3!0@8#1| |rotate::1::tmp3!0@8#1|))

; find_symbols
(declare-fun |rotate::1::tmp4!0@8#1| () (_ BitVec 32))
; convert
(define-fun |B66| () Bool (= |rotate::1::tmp4!0@8#1| |rotate::1::tmp4!0@8#1|))

; find_symbols
(declare-fun |rotate::1::tmp5!0@8#1| () (_ BitVec 32))
; convert
(define-fun |B67| () Bool (= |rotate::1::tmp5!0@8#1| |rotate::1::tmp5!0@8#1|))

; find_symbols
(declare-fun |rotate::1::dout_old!0@9#1| () (_ BitVec 32))
; convert
(define-fun |B68| () Bool (= |rotate::1::dout_old!0@9#1| |rotate::1::dout_old!0@9#1|))

; find_symbols
(declare-fun |rotate::1::inr_old!0@9#1| () (_ BitVec 32))
; convert
(define-fun |B69| () Bool (= |rotate::1::inr_old!0@9#1| |rotate::1::inr_old!0@9#1|))

; find_symbols
(declare-fun |rotate::1::tmp0!0@9#1| () (_ BitVec 32))
; convert
(define-fun |B70| () Bool (= |rotate::1::tmp0!0@9#1| |rotate::1::tmp0!0@9#1|))

; find_symbols
(declare-fun |rotate::1::tmp1!0@9#1| () (_ BitVec 32))
; convert
(define-fun |B71| () Bool (= |rotate::1::tmp1!0@9#1| |rotate::1::tmp1!0@9#1|))

; find_symbols
(declare-fun |rotate::1::tmp2!0@9#1| () (_ BitVec 32))
; convert
(define-fun |B72| () Bool (= |rotate::1::tmp2!0@9#1| |rotate::1::tmp2!0@9#1|))

; find_symbols
(declare-fun |rotate::1::tmp3!0@9#1| () (_ BitVec 32))
; convert
(define-fun |B73| () Bool (= |rotate::1::tmp3!0@9#1| |rotate::1::tmp3!0@9#1|))

; find_symbols
(declare-fun |rotate::1::tmp4!0@9#1| () (_ BitVec 32))
; convert
(define-fun |B74| () Bool (= |rotate::1::tmp4!0@9#1| |rotate::1::tmp4!0@9#1|))

; find_symbols
(declare-fun |rotate::1::tmp5!0@9#1| () (_ BitVec 32))
; convert
(define-fun |B75| () Bool (= |rotate::1::tmp5!0@9#1| |rotate::1::tmp5!0@9#1|))

; find_symbols
(declare-fun |rotate::1::dout_old!0@10#1| () (_ BitVec 32))
; convert
(define-fun |B76| () Bool (= |rotate::1::dout_old!0@10#1| |rotate::1::dout_old!0@10#1|))

; find_symbols
(declare-fun |rotate::1::inr_old!0@10#1| () (_ BitVec 32))
; convert
(define-fun |B77| () Bool (= |rotate::1::inr_old!0@10#1| |rotate::1::inr_old!0@10#1|))

; find_symbols
(declare-fun |rotate::1::tmp0!0@10#1| () (_ BitVec 32))
; convert
(define-fun |B78| () Bool (= |rotate::1::tmp0!0@10#1| |rotate::1::tmp0!0@10#1|))

; find_symbols
(declare-fun |rotate::1::tmp1!0@10#1| () (_ BitVec 32))
; convert
(define-fun |B79| () Bool (= |rotate::1::tmp1!0@10#1| |rotate::1::tmp1!0@10#1|))

; find_symbols
(declare-fun |rotate::1::tmp2!0@10#1| () (_ BitVec 32))
; convert
(define-fun |B80| () Bool (= |rotate::1::tmp2!0@10#1| |rotate::1::tmp2!0@10#1|))

; find_symbols
(declare-fun |rotate::1::tmp3!0@10#1| () (_ BitVec 32))
; convert
(define-fun |B81| () Bool (= |rotate::1::tmp3!0@10#1| |rotate::1::tmp3!0@10#1|))

; find_symbols
(declare-fun |rotate::1::tmp4!0@10#1| () (_ BitVec 32))
; convert
(define-fun |B82| () Bool (= |rotate::1::tmp4!0@10#1| |rotate::1::tmp4!0@10#1|))

; find_symbols
(declare-fun |rotate::1::tmp5!0@10#1| () (_ BitVec 32))
; convert
(define-fun |B83| () Bool (= |rotate::1::tmp5!0@10#1| |rotate::1::tmp5!0@10#1|))

; convert
(define-fun |B84| () Bool (=> true (not (= |main::1::dout!0@1#2| (_ bv2863311530 32)))))

; convert
(define-fun |B85| () Bool (=> true (not (= |main::1::dout!0@1#3| (_ bv2863311530 32)))))

; convert
(define-fun |B86| () Bool (=> true (not (= |main::1::dout!0@1#4| (_ bv2863311530 32)))))

; convert
(define-fun |B87| () Bool (=> true (not (= |main::1::dout!0@1#5| (_ bv2863311530 32)))))

; convert
(define-fun |B88| () Bool (=> true (not (= |main::1::dout!0@1#6| (_ bv2863311530 32)))))

; convert
(define-fun |B89| () Bool (=> true (not (= |main::1::dout!0@1#7| (_ bv2863311530 32)))))

; convert
(define-fun |B90| () Bool (=> true (not (= |main::1::dout!0@1#8| (_ bv2863311530 32)))))

; convert
(define-fun |B91| () Bool (=> true (not (= |main::1::dout!0@1#9| (_ bv2863311530 32)))))

; convert
(define-fun |B92| () Bool (=> true (not (= |main::1::dout!0@1#10| (_ bv2863311530 32)))))

; convert
(define-fun |B93| () Bool (=> true (not (= |main::1::dout!0@1#11| (_ bv2863311530 32)))))

; set_to true
(assert (or (not |B84|) (not |B85|) (not |B86|) (not |B87|) (not |B88|) (not |B89|) (not |B90|) (not |B91|) (not |B92|) (not |B93|)))

; convert
(define-fun |B94| () Bool (= |main::1::dout!0@1#2| (_ bv2863311530 32)))

; convert
(define-fun |B95| () Bool (= |main::1::dout!0@1#3| (_ bv2863311530 32)))

; convert
(define-fun |B96| () Bool (= |main::1::dout!0@1#4| (_ bv2863311530 32)))

; convert
(define-fun |B97| () Bool (= |main::1::dout!0@1#5| (_ bv2863311530 32)))

; convert
(define-fun |B98| () Bool (= |main::1::dout!0@1#6| (_ bv2863311530 32)))

; convert
(define-fun |B99| () Bool (= |main::1::dout!0@1#7| (_ bv2863311530 32)))

; convert
(define-fun |B100| () Bool (= |main::1::dout!0@1#8| (_ bv2863311530 32)))

; convert
(define-fun |B101| () Bool (= |main::1::dout!0@1#9| (_ bv2863311530 32)))

; convert
(define-fun |B102| () Bool (= |main::1::dout!0@1#10| (_ bv2863311530 32)))

(check-sat)

(get-value (|B0|))
(get-value (|B1|))
(get-value (|B10|))
(get-value (|B100|))
(get-value (|B101|))
(get-value (|B102|))
(get-value (|B11|))
(get-value (|B12|))
(get-value (|B13|))
(get-value (|B14|))
(get-value (|B15|))
(get-value (|B16|))
(get-value (|B17|))
(get-value (|B18|))
(get-value (|B19|))
(get-value (|B2|))
(get-value (|B20|))
(get-value (|B21|))
(get-value (|B22|))
(get-value (|B23|))
(get-value (|B24|))
(get-value (|B25|))
(get-value (|B26|))
(get-value (|B27|))
(get-value (|B28|))
(get-value (|B29|))
(get-value (|B3|))
(get-value (|B30|))
(get-value (|B31|))
(get-value (|B32|))
(get-value (|B33|))
(get-value (|B34|))
(get-value (|B35|))
(get-value (|B36|))
(get-value (|B37|))
(get-value (|B38|))
(get-value (|B39|))
(get-value (|B4|))
(get-value (|B40|))
(get-value (|B41|))
(get-value (|B42|))
(get-value (|B43|))
(get-value (|B44|))
(get-value (|B45|))
(get-value (|B46|))
(get-value (|B47|))
(get-value (|B48|))
(get-value (|B49|))
(get-value (|B5|))
(get-value (|B50|))
(get-value (|B51|))
(get-value (|B52|))
(get-value (|B53|))
(get-value (|B54|))
(get-value (|B55|))
(get-value (|B56|))
(get-value (|B57|))
(get-value (|B58|))
(get-value (|B59|))
(get-value (|B6|))
(get-value (|B60|))
(get-value (|B61|))
(get-value (|B62|))
(get-value (|B63|))
(get-value (|B64|))
(get-value (|B65|))
(get-value (|B66|))
(get-value (|B67|))
(get-value (|B68|))
(get-value (|B69|))
(get-value (|B7|))
(get-value (|B70|))
(get-value (|B71|))
(get-value (|B72|))
(get-value (|B73|))
(get-value (|B74|))
(get-value (|B75|))
(get-value (|B76|))
(get-value (|B77|))
(get-value (|B78|))
(get-value (|B79|))
(get-value (|B8|))
(get-value (|B80|))
(get-value (|B81|))
(get-value (|B82|))
(get-value (|B83|))
(get-value (|B84|))
(get-value (|B85|))
(get-value (|B86|))
(get-value (|B87|))
(get-value (|B88|))
(get-value (|B89|))
(get-value (|B9|))
(get-value (|B90|))
(get-value (|B91|))
(get-value (|B92|))
(get-value (|B93|))
(get-value (|B94|))
(get-value (|B95|))
(get-value (|B96|))
(get-value (|B97|))
(get-value (|B98|))
(get-value (|B99|))
(get-value (|__CPROVER_dead_object#1|))
(get-value (|__CPROVER_deallocated#1|))
(get-value (|__CPROVER_malloc_is_new_array#1|))
(get-value (|__CPROVER_malloc_object#1|))
(get-value (|__CPROVER_malloc_size#1|))
(get-value (|__CPROVER_memory_leak#1|))
(get-value (|__CPROVER_next_thread_id#1|))
(get-value (|__CPROVER_pipe_count#1|))
(get-value (|__CPROVER_rounding_mode!0#1|))
(get-value (|__CPROVER_thread_id!0#1|))
(get-value (|__CPROVER_threads_exited#1|))
(get-value (|main::1::amount!0@1#1|))
(get-value (|main::1::clock!0@1#1|))
(get-value (|main::1::din!0@1#1|))
(get-value (|main::1::dout!0@1|))
(get-value (|main::1::dout!0@1#1|))
(get-value (|main::1::dout!0@1#10|))
(get-value (|main::1::dout!0@1#11|))
(get-value (|main::1::dout!0@1#2|))
(get-value (|main::1::dout!0@1#3|))
(get-value (|main::1::dout!0@1#4|))
(get-value (|main::1::dout!0@1#5|))
(get-value (|main::1::dout!0@1#6|))
(get-value (|main::1::dout!0@1#7|))
(get-value (|main::1::dout!0@1#8|))
(get-value (|main::1::dout!0@1#9|))
(get-value (|rotate::1::dout_old!0@1#1|))
(get-value (|rotate::1::dout_old!0@10#1|))
(get-value (|rotate::1::dout_old!0@2#1|))
(get-value (|rotate::1::dout_old!0@3#1|))
(get-value (|rotate::1::dout_old!0@4#1|))
(get-value (|rotate::1::dout_old!0@5#1|))
(get-value (|rotate::1::dout_old!0@6#1|))
(get-value (|rotate::1::dout_old!0@7#1|))
(get-value (|rotate::1::dout_old!0@8#1|))
(get-value (|rotate::1::dout_old!0@9#1|))
(get-value (|rotate::1::inr_old!0@1#1|))
(get-value (|rotate::1::inr_old!0@10#1|))
(get-value (|rotate::1::inr_old!0@2#1|))
(get-value (|rotate::1::inr_old!0@3#1|))
(get-value (|rotate::1::inr_old!0@4#1|))
(get-value (|rotate::1::inr_old!0@5#1|))
(get-value (|rotate::1::inr_old!0@6#1|))
(get-value (|rotate::1::inr_old!0@7#1|))
(get-value (|rotate::1::inr_old!0@8#1|))
(get-value (|rotate::1::inr_old!0@9#1|))
(get-value (|rotate::1::tmp0!0@1#1|))
(get-value (|rotate::1::tmp0!0@1#2|))
(get-value (|rotate::1::tmp0!0@10#1|))
(get-value (|rotate::1::tmp0!0@10#2|))
(get-value (|rotate::1::tmp0!0@2#1|))
(get-value (|rotate::1::tmp0!0@2#2|))
(get-value (|rotate::1::tmp0!0@3#1|))
(get-value (|rotate::1::tmp0!0@3#2|))
(get-value (|rotate::1::tmp0!0@4#1|))
(get-value (|rotate::1::tmp0!0@4#2|))
(get-value (|rotate::1::tmp0!0@5#1|))
(get-value (|rotate::1::tmp0!0@5#2|))
(get-value (|rotate::1::tmp0!0@6#1|))
(get-value (|rotate::1::tmp0!0@6#2|))
(get-value (|rotate::1::tmp0!0@7#1|))
(get-value (|rotate::1::tmp0!0@7#2|))
(get-value (|rotate::1::tmp0!0@8#1|))
(get-value (|rotate::1::tmp0!0@8#2|))
(get-value (|rotate::1::tmp0!0@9#1|))
(get-value (|rotate::1::tmp0!0@9#2|))
(get-value (|rotate::1::tmp1!0@1#1|))
(get-value (|rotate::1::tmp1!0@1#2|))
(get-value (|rotate::1::tmp1!0@10#1|))
(get-value (|rotate::1::tmp1!0@10#2|))
(get-value (|rotate::1::tmp1!0@2#1|))
(get-value (|rotate::1::tmp1!0@2#2|))
(get-value (|rotate::1::tmp1!0@3#1|))
(get-value (|rotate::1::tmp1!0@3#2|))
(get-value (|rotate::1::tmp1!0@4#1|))
(get-value (|rotate::1::tmp1!0@4#2|))
(get-value (|rotate::1::tmp1!0@5#1|))
(get-value (|rotate::1::tmp1!0@5#2|))
(get-value (|rotate::1::tmp1!0@6#1|))
(get-value (|rotate::1::tmp1!0@6#2|))
(get-value (|rotate::1::tmp1!0@7#1|))
(get-value (|rotate::1::tmp1!0@7#2|))
(get-value (|rotate::1::tmp1!0@8#1|))
(get-value (|rotate::1::tmp1!0@8#2|))
(get-value (|rotate::1::tmp1!0@9#1|))
(get-value (|rotate::1::tmp1!0@9#2|))
(get-value (|rotate::1::tmp2!0@1#1|))
(get-value (|rotate::1::tmp2!0@1#2|))
(get-value (|rotate::1::tmp2!0@10#1|))
(get-value (|rotate::1::tmp2!0@10#2|))
(get-value (|rotate::1::tmp2!0@2#1|))
(get-value (|rotate::1::tmp2!0@2#2|))
(get-value (|rotate::1::tmp2!0@3#1|))
(get-value (|rotate::1::tmp2!0@3#2|))
(get-value (|rotate::1::tmp2!0@4#1|))
(get-value (|rotate::1::tmp2!0@4#2|))
(get-value (|rotate::1::tmp2!0@5#1|))
(get-value (|rotate::1::tmp2!0@5#2|))
(get-value (|rotate::1::tmp2!0@6#1|))
(get-value (|rotate::1::tmp2!0@6#2|))
(get-value (|rotate::1::tmp2!0@7#1|))
(get-value (|rotate::1::tmp2!0@7#2|))
(get-value (|rotate::1::tmp2!0@8#1|))
(get-value (|rotate::1::tmp2!0@8#2|))
(get-value (|rotate::1::tmp2!0@9#1|))
(get-value (|rotate::1::tmp2!0@9#2|))
(get-value (|rotate::1::tmp3!0@1#1|))
(get-value (|rotate::1::tmp3!0@1#2|))
(get-value (|rotate::1::tmp3!0@10#1|))
(get-value (|rotate::1::tmp3!0@10#2|))
(get-value (|rotate::1::tmp3!0@2#1|))
(get-value (|rotate::1::tmp3!0@2#2|))
(get-value (|rotate::1::tmp3!0@3#1|))
(get-value (|rotate::1::tmp3!0@3#2|))
(get-value (|rotate::1::tmp3!0@4#1|))
(get-value (|rotate::1::tmp3!0@4#2|))
(get-value (|rotate::1::tmp3!0@5#1|))
(get-value (|rotate::1::tmp3!0@5#2|))
(get-value (|rotate::1::tmp3!0@6#1|))
(get-value (|rotate::1::tmp3!0@6#2|))
(get-value (|rotate::1::tmp3!0@7#1|))
(get-value (|rotate::1::tmp3!0@7#2|))
(get-value (|rotate::1::tmp3!0@8#1|))
(get-value (|rotate::1::tmp3!0@8#2|))
(get-value (|rotate::1::tmp3!0@9#1|))
(get-value (|rotate::1::tmp3!0@9#2|))
(get-value (|rotate::1::tmp4!0@1#1|))
(get-value (|rotate::1::tmp4!0@1#2|))
(get-value (|rotate::1::tmp4!0@10#1|))
(get-value (|rotate::1::tmp4!0@10#2|))
(get-value (|rotate::1::tmp4!0@2#1|))
(get-value (|rotate::1::tmp4!0@2#2|))
(get-value (|rotate::1::tmp4!0@3#1|))
(get-value (|rotate::1::tmp4!0@3#2|))
(get-value (|rotate::1::tmp4!0@4#1|))
(get-value (|rotate::1::tmp4!0@4#2|))
(get-value (|rotate::1::tmp4!0@5#1|))
(get-value (|rotate::1::tmp4!0@5#2|))
(get-value (|rotate::1::tmp4!0@6#1|))
(get-value (|rotate::1::tmp4!0@6#2|))
(get-value (|rotate::1::tmp4!0@7#1|))
(get-value (|rotate::1::tmp4!0@7#2|))
(get-value (|rotate::1::tmp4!0@8#1|))
(get-value (|rotate::1::tmp4!0@8#2|))
(get-value (|rotate::1::tmp4!0@9#1|))
(get-value (|rotate::1::tmp4!0@9#2|))
(get-value (|rotate::1::tmp5!0@1#1|))
(get-value (|rotate::1::tmp5!0@1#2|))
(get-value (|rotate::1::tmp5!0@10#1|))
(get-value (|rotate::1::tmp5!0@10#2|))
(get-value (|rotate::1::tmp5!0@2#1|))
(get-value (|rotate::1::tmp5!0@2#2|))
(get-value (|rotate::1::tmp5!0@3#1|))
(get-value (|rotate::1::tmp5!0@3#2|))
(get-value (|rotate::1::tmp5!0@4#1|))
(get-value (|rotate::1::tmp5!0@4#2|))
(get-value (|rotate::1::tmp5!0@5#1|))
(get-value (|rotate::1::tmp5!0@5#2|))
(get-value (|rotate::1::tmp5!0@6#1|))
(get-value (|rotate::1::tmp5!0@6#2|))
(get-value (|rotate::1::tmp5!0@7#1|))
(get-value (|rotate::1::tmp5!0@7#2|))
(get-value (|rotate::1::tmp5!0@8#1|))
(get-value (|rotate::1::tmp5!0@8#2|))
(get-value (|rotate::1::tmp5!0@9#1|))
(get-value (|rotate::1::tmp5!0@9#2|))
(get-value (|rotate::amount!0@1#1|))
(get-value (|rotate::amount!0@10#1|))
(get-value (|rotate::amount!0@2#1|))
(get-value (|rotate::amount!0@3#1|))
(get-value (|rotate::amount!0@4#1|))
(get-value (|rotate::amount!0@5#1|))
(get-value (|rotate::amount!0@6#1|))
(get-value (|rotate::amount!0@7#1|))
(get-value (|rotate::amount!0@8#1|))
(get-value (|rotate::amount!0@9#1|))
(get-value (|rotate::clock!0@1#1|))
(get-value (|rotate::clock!0@10#1|))
(get-value (|rotate::clock!0@2#1|))
(get-value (|rotate::clock!0@3#1|))
(get-value (|rotate::clock!0@4#1|))
(get-value (|rotate::clock!0@5#1|))
(get-value (|rotate::clock!0@6#1|))
(get-value (|rotate::clock!0@7#1|))
(get-value (|rotate::clock!0@8#1|))
(get-value (|rotate::clock!0@9#1|))
(get-value (|rotate::din!0@1#1|))
(get-value (|rotate::din!0@10#1|))
(get-value (|rotate::din!0@2#1|))
(get-value (|rotate::din!0@3#1|))
(get-value (|rotate::din!0@4#1|))
(get-value (|rotate::din!0@5#1|))
(get-value (|rotate::din!0@6#1|))
(get-value (|rotate::din!0@7#1|))
(get-value (|rotate::din!0@8#1|))
(get-value (|rotate::din!0@9#1|))
(get-value (|rotate::dout!0@1#1|))
(get-value (|rotate::dout!0@10#1|))
(get-value (|rotate::dout!0@2#1|))
(get-value (|rotate::dout!0@3#1|))
(get-value (|rotate::dout!0@4#1|))
(get-value (|rotate::dout!0@5#1|))
(get-value (|rotate::dout!0@6#1|))
(get-value (|rotate::dout!0@7#1|))
(get-value (|rotate::dout!0@8#1|))
(get-value (|rotate::dout!0@9#1|))
(get-value (|smain#1|))
(get-value (|smain#10|))
(get-value (|smain#11|))
(get-value (|smain#12|))
(get-value (|smain#13|))
(get-value (|smain#14|))
(get-value (|smain#15|))
(get-value (|smain#16|))
(get-value (|smain#17|))
(get-value (|smain#18|))
(get-value (|smain#19|))
(get-value (|smain#2|))
(get-value (|smain#20|))
(get-value (|smain#21|))
(get-value (|smain#22|))
(get-value (|smain#23|))
(get-value (|smain#3|))
(get-value (|smain#4|))
(get-value (|smain#5|))
(get-value (|smain#6|))
(get-value (|smain#7|))
(get-value (|smain#8|))
(get-value (|smain#9|))

(exit)
; end of SMT2 file
