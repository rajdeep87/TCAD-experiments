digraph CFA {
200 [shape="circle" label="N200\n230"]
223 [shape="circle" label="N223\n229"]
224 [shape="circle" label="N224\n228"]
225 [shape="circle" label="N225\n227"]
226 [shape="circle" label="N226\n226"]
227 [shape="circle" label="N227\n225"]
228 [shape="circle" label="N228\n224"]
229 [shape="circle" label="N229\n223"]
230 [shape="circle" label="N230\n222"]
231 [shape="circle" label="N231\n221"]
232 [shape="circle" label="N232\n220"]
233 [shape="circle" label="N233\n219"]
234 [shape="circle" label="N234\n218"]
235 [shape="circle" label="N235\n217"]
236 [shape="circle" label="N236\n216"]
237 [shape="circle" label="N237\n215"]
238 [shape="circle" label="N238\n214"]
239 [shape="circle" label="N239\n213"]
240 [shape="circle" label="N240\n212"]
241 [shape="circle" label="N241\n211"]
242 [shape="circle" label="N242\n210"]
243 [shape="circle" label="N243\n209"]
244 [shape="circle" label="N244\n208"]
245 [shape="circle" label="N245\n207"]
246 [shape="circle" label="N246\n206"]
247 [shape="circle" label="N247\n205"]
248 [shape="circle" label="N248\n204"]
249 [shape="circle" label="N249\n203"]
250 [shape="circle" label="N250\n202"]
251 [shape="circle" label="N251\n201"]
252 [shape="circle" label="N252\n200"]
253 [shape="circle" label="N253\n199"]
254 [shape="circle" label="N254\n198"]
255 [shape="circle" label="N255\n197"]
256 [shape="circle" label="N256\n196"]
257 [shape="circle" label="N257\n195"]
258 [shape="circle" label="N258\n194"]
259 [shape="circle" label="N259\n193"]
260 [shape="circle" label="N260\n192"]
261 [shape="circle" label="N261\n191"]
262 [shape="circle" label="N262\n190"]
263 [shape="circle" label="N263\n189"]
264 [shape="circle" label="N264\n188"]
265 [shape="circle" label="N265\n187"]
266 [shape="circle" label="N266\n186"]
267 [shape="circle" label="N267\n185"]
268 [shape="circle" label="N268\n184"]
269 [shape="circle" label="N269\n183"]
270 [shape="circle" label="N270\n182"]
271 [shape="circle" label="N271\n181"]
272 [shape="circle" label="N272\n180"]
273 [shape="circle" label="N273\n179"]
274 [shape="circle" label="N274\n178"]
275 [shape="circle" label="N275\n177"]
276 [shape="circle" label="N276\n176"]
277 [shape="circle" label="N277\n175"]
278 [shape="circle" label="N278\n174"]
279 [shape="circle" label="N279\n173"]
280 [shape="circle" label="N280\n172"]
281 [shape="circle" label="N281\n171"]
282 [shape="circle" label="N282\n170"]
283 [shape="circle" label="N283\n169"]
284 [shape="circle" label="N284\n168"]
285 [shape="circle" label="N285\n167"]
286 [shape="circle" label="N286\n166"]
287 [shape="circle" label="N287\n165"]
288 [shape="circle" label="N288\n164"]
289 [shape="circle" label="N289\n163"]
290 [shape="circle" label="N290\n162"]
291 [shape="circle" label="N291\n161"]
292 [shape="circle" label="N292\n160"]
293 [shape="circle" label="N293\n159"]
294 [shape="circle" label="N294\n158"]
295 [shape="circle" label="N295\n157"]
296 [shape="circle" label="N296\n156"]
297 [shape="circle" label="N297\n155"]
298 [shape="circle" label="N298\n154"]
299 [shape="circle" label="N299\n153"]
300 [shape="circle" label="N300\n152"]
301 [shape="circle" label="N301\n151"]
302 [shape="circle" label="N302\n150"]
303 [shape="circle" label="N303\n149"]
304 [shape="circle" label="N304\n148"]
305 [shape="circle" label="N305\n147"]
306 [shape="circle" label="N306\n146"]
307 [shape="circle" label="N307\n145"]
308 [shape="circle" label="N308\n144"]
309 [shape="circle" label="N309\n143"]
310 [shape="circle" label="N310\n142"]
311 [shape="circle" label="N311\n141"]
312 [shape="circle" label="N312\n140"]
313 [shape="circle" label="N313\n139"]
314 [shape="circle" label="N314\n138"]
315 [shape="circle" label="N315\n137"]
316 [shape="circle" label="N316\n136"]
317 [shape="circle" label="N317\n135"]
318 [shape="circle" label="N318\n134"]
319 [shape="circle" label="N319\n133"]
320 [shape="circle" label="N320\n132"]
321 [shape="circle" label="N321\n131"]
322 [shape="circle" label="N322\n130"]
323 [shape="circle" label="N323\n129"]
324 [shape="circle" label="N324\n128"]
325 [shape="circle" label="N325\n127"]
326 [shape="circle" label="N326\n126"]
327 [shape="circle" label="N327\n125"]
328 [shape="circle" label="N328\n124"]
329 [shape="circle" label="N329\n123"]
330 [shape="circle" label="N330\n122"]
331 [shape="circle" label="N331\n121"]
332 [shape="circle" label="N332\n120"]
333 [shape="circle" label="N333\n119"]
334 [shape="circle" label="N334\n118"]
335 [shape="circle" label="N335\n117"]
336 [shape="circle" label="N336\n116"]
337 [shape="circle" label="N337\n115"]
338 [shape="circle" label="N338\n114"]
339 [shape="circle" label="N339\n113"]
340 [shape="circle" label="N340\n112"]
341 [shape="circle" label="N341\n111"]
342 [shape="circle" label="N342\n110"]
343 [shape="circle" label="N343\n109"]
344 [shape="circle" label="N344\n108"]
345 [shape="circle" label="N345\n107"]
346 [shape="circle" label="N346\n106"]
347 [shape="circle" label="N347\n105"]
348 [shape="circle" label="N348\n104"]
349 [shape="circle" label="N349\n103"]
350 [shape="circle" label="N350\n102"]
351 [shape="circle" label="N351\n101"]
352 [shape="circle" label="N352\n100"]
353 [shape="circle" label="N353\n99"]
354 [shape="circle" label="N354\n98"]
355 [shape="circle" label="N355\n97"]
356 [shape="circle" label="N356\n96"]
357 [shape="circle" label="N357\n95"]
358 [shape="circle" label="N358\n94"]
359 [shape="circle" label="N359\n93"]
360 [shape="circle" label="N360\n92"]
361 [shape="circle" label="N361\n91"]
362 [shape="circle" label="N362\n90"]
363 [shape="circle" label="N363\n89"]
364 [shape="circle" label="N364\n88"]
365 [shape="circle" label="N365\n87"]
366 [shape="circle" label="N366\n86"]
367 [shape="circle" label="N367\n85"]
368 [shape="circle" label="N368\n84"]
369 [shape="circle" label="N369\n83"]
370 [shape="circle" label="N370\n82"]
371 [shape="circle" label="N371\n81"]
372 [shape="circle" label="N372\n80"]
373 [shape="circle" label="N373\n79"]
374 [shape="circle" label="N374\n78"]
375 [shape="circle" label="N375\n77"]
376 [shape="circle" label="N376\n76"]
377 [shape="circle" label="N377\n75"]
378 [shape="circle" label="N378\n74"]
379 [shape="circle" label="N379\n73"]
380 [shape="circle" label="N380\n72"]
381 [shape="circle" label="N381\n71"]
382 [shape="circle" label="N382\n70"]
383 [shape="circle" label="N383\n69"]
384 [shape="circle" label="N384\n68"]
385 [shape="circle" label="N385\n67"]
386 [shape="circle" label="N386\n66"]
387 [shape="circle" label="N387\n65"]
388 [shape="circle" label="N388\n64"]
389 [shape="circle" label="N389\n63"]
390 [shape="circle" label="N390\n62"]
391 [shape="circle" label="N391\n61"]
392 [shape="circle" label="N392\n60"]
393 [shape="circle" label="N393\n59"]
394 [shape="circle" label="N394\n58"]
395 [shape="circle" label="N395\n57"]
396 [shape="circle" label="N396\n56"]
397 [shape="circle" label="N397\n55"]
398 [shape="circle" label="N398\n54"]
399 [shape="circle" label="N399\n53"]
400 [shape="circle" label="N400\n52"]
401 [shape="circle" label="N401\n51"]
402 [shape="circle" label="N402\n50"]
403 [shape="circle" label="N403\n49"]
404 [shape="circle" label="N404\n48"]
405 [shape="circle" label="N405\n47"]
406 [shape="circle" label="N406\n46"]
407 [shape="circle" label="N407\n45"]
408 [shape="circle" label="N408\n44"]
409 [shape="circle" label="N409\n43"]
410 [shape="circle" label="N410\n42"]
411 [shape="circle" label="N411\n41"]
412 [shape="circle" label="N412\n40"]
413 [shape="circle" label="N413\n39"]
414 [shape="circle" label="N414\n38"]
415 [shape="circle" label="N415\n37"]
416 [shape="circle" label="N416\n36"]
417 [shape="circle" label="N417\n35"]
418 [shape="circle" label="N418\n34"]
419 [shape="circle" label="N419\n33"]
420 [shape="circle" label="N420\n32"]
421 [shape="circle" label="N421\n31"]
422 [shape="circle" label="N422\n30"]
423 [shape="circle" label="N423\n29"]
424 [shape="circle" label="N424\n28"]
425 [shape="circle" label="N425\n27"]
426 [shape="circle" label="N426\n26"]
427 [shape="circle" label="N427\n25"]
428 [shape="circle" label="N428\n24"]
429 [shape="circle" label="N429\n23"]
430 [shape="circle" label="N430\n22"]
431 [shape="circle" label="N431\n21"]
201 [shape="circle" label="N201\n20"]
202 [shape="circle" label="N202\n19"]
203 [shape="circle" label="N203\n18"]
204 [shape="circle" label="N204\n17"]
205 [shape="circle" label="N205\n16"]
206 [shape="circle" label="N206\n15"]
207 [shape="circle" label="N207\n14"]
1 [shape="circle" label="N1\n11"]
2 [shape="circle" label="N2\n10"]
3 [shape="circle" label="N3\n9"]
4 [shape="circle" label="N4\n8"]
5 [shape="circle" label="N5\n7"]
6 [shape="circle" label="N6\n6"]
7 [shape="circle" label="N7\n5"]
8 [shape="circle" label="N8\n4"]
9 [shape="circle" label="N9\n3"]
10 [shape="circle" label="N10\n2"]
11 [shape="circle" label="N11\n1"]
0 [shape="circle" label="N0\n0"]
208 [shape="circle" label="N208\n13"]
154 [shape="circle" label="N154\n4"]
155 [shape="circle" label="N155\n3"]
156 [shape="circle" label="N156\n2"]
157 [shape="circle" label="N157\n1"]
153 [shape="circle" label="N153\n0"]
209 [shape="circle" label="N209\n12"]
210 [shape="doublecircle" label="N210\n11"]
211 [shape="circle" label="N211\n10"]
213 [shape="circle" label="N213\n9"]
214 [shape="circle" label="N214\n8"]
215 [shape="circle" label="N215\n7"]
13 [shape="circle" label="N13\n132"]
14 [shape="circle" label="N14\n131"]
15 [shape="circle" label="N15\n130"]
16 [shape="circle" label="N16\n129"]
17 [shape="circle" label="N17\n128"]
18 [shape="circle" label="N18\n127"]
19 [shape="diamond" label="N19\n126"]
20 [shape="circle" label="N20\n125"]
22 [shape="circle" label="N22\n123"]
26 [shape="diamond" label="N26\n122"]
24 [shape="circle" label="N24\n121"]
27 [shape="circle" label="N27\n118"]
32 [shape="diamond" label="N32\n117"]
29 [shape="circle" label="N29\n114"]
33 [shape="circle" label="N33\n112"]
34 [shape="diamond" label="N34\n111"]
37 [shape="diamond" label="N37\n110"]
86 [shape="diamond" label="N86\n109"]
119 [shape="diamond" label="N119\n108"]
126 [shape="circle" label="N126\n107"]
35 [shape="circle" label="N35\n16"]
138 [shape="circle" label="N138\n15"]
139 [shape="diamond" label="N139\n14"]
142 [shape="circle" label="N142\n12"]
143 [shape="circle" label="N143\n10"]
144 [shape="circle" label="N144\n9"]
145 [shape="diamond" label="N145\n8"]
147 [shape="circle" label="N147\n3"]
151 [shape="circle" label="N151\n2"]
152 [shape="circle" label="N152\n1"]
12 [shape="circle" label="N12\n0"]
216 [shape="circle" label="N216\n6"]
159 [shape="circle" label="N159\n40"]
160 [shape="circle" label="N160\n39"]
161 [shape="circle" label="N161\n38"]
162 [shape="circle" label="N162\n37"]
163 [shape="circle" label="N163\n36"]
164 [shape="circle" label="N164\n35"]
165 [shape="circle" label="N165\n34"]
166 [shape="diamond" label="N166\n33"]
168 [shape="circle" label="N168\n32"]
170 [shape="diamond" label="N170\n31"]
172 [shape="circle" label="N172\n30"]
174 [shape="diamond" label="N174\n29"]
176 [shape="circle" label="N176\n28"]
177 [shape="circle" label="N177\n26"]
173 [shape="circle" label="N173\n24"]
169 [shape="circle" label="N169\n22"]
178 [shape="circle" label="N178\n21"]
179 [shape="diamond" label="N179\n20"]
181 [shape="circle" label="N181\n19"]
183 [shape="diamond" label="N183\n18"]
185 [shape="circle" label="N185\n17"]
187 [shape="diamond" label="N187\n16"]
189 [shape="circle" label="N189\n15"]
190 [shape="circle" label="N190\n13"]
186 [shape="circle" label="N186\n11"]
182 [shape="circle" label="N182\n9"]
191 [shape="circle" label="N191\n8"]
192 [shape="diamond" label="N192\n7"]
194 [shape="circle" label="N194\n6"]
195 [shape="circle" label="N195\n4"]
196 [shape="circle" label="N196\n3"]
197 [shape="circle" label="N197\n2"]
198 [shape="circle" label="N198\n1"]
158 [shape="circle" label="N158\n0"]
217 [shape="diamond" label="N217\n5"]
219 [shape="circle" label="N219\n4"]
221 [shape="circle" label="N221\n3"]
218 [shape="circle" label="N218\n0"]
220 [shape="circle" label="N220\n2"]
222 [shape="circle" label="N222\n1"]
193 [shape="circle" label="N193\n5"]
188 [shape="circle" label="N188\n14"]
184 [shape="circle" label="N184\n12"]
180 [shape="circle" label="N180\n10"]
175 [shape="circle" label="N175\n27"]
171 [shape="circle" label="N171\n25"]
167 [shape="circle" label="N167\n23"]
146 [shape="diamond" label="N146\n7"]
149 [shape="diamond" label="N149\n5"]
148 [shape="circle" label="N148\n4"]
150 [shape="diamond" label="N150\n6"]
140 [shape="diamond" label="N140\n13"]
141 [shape="circle" label="N141\n11"]
127 [shape="diamond" label="N127\n106"]
130 [shape="circle" label="N130\n105"]
135 [shape="circle" label="N135\n104"]
136 [shape="circle" label="N136\n103"]
137 [shape="circle" label="N137\n102"]
129 [shape="circle" label="N129\n101"]
131 [shape="circle" label="N131\n100"]
132 [shape="circle" label="N132\n99"]
133 [shape="circle" label="N133\n98"]
134 [shape="circle" label="N134\n97"]
118 [shape="circle" label="N118\n96"]
120 [shape="circle" label="N120\n95"]
121 [shape="circle" label="N121\n94"]
122 [shape="circle" label="N122\n93"]
123 [shape="circle" label="N123\n92"]
124 [shape="circle" label="N124\n91"]
125 [shape="circle" label="N125\n90"]
85 [shape="diamond" label="N85\n89"]
89 [shape="diamond" label="N89\n88"]
95 [shape="diamond" label="N95\n87"]
108 [shape="circle" label="N108\n86"]
113 [shape="circle" label="N113\n85"]
114 [shape="circle" label="N114\n84"]
115 [shape="circle" label="N115\n83"]
116 [shape="circle" label="N116\n82"]
87 [shape="circle" label="N87\n61"]
107 [shape="circle" label="N107\n81"]
109 [shape="circle" label="N109\n80"]
110 [shape="circle" label="N110\n79"]
111 [shape="circle" label="N111\n78"]
112 [shape="circle" label="N112\n77"]
94 [shape="diamond" label="N94\n76"]
98 [shape="circle" label="N98\n75"]
103 [shape="circle" label="N103\n74"]
104 [shape="circle" label="N104\n73"]
105 [shape="circle" label="N105\n72"]
96 [shape="circle" label="N96\n66"]
97 [shape="circle" label="N97\n71"]
99 [shape="circle" label="N99\n70"]
100 [shape="circle" label="N100\n69"]
101 [shape="circle" label="N101\n68"]
102 [shape="circle" label="N102\n67"]
88 [shape="circle" label="N88\n65"]
90 [shape="circle" label="N90\n64"]
91 [shape="circle" label="N91\n63"]
92 [shape="circle" label="N92\n62"]
36 [shape="diamond" label="N36\n60"]
40 [shape="diamond" label="N40\n59"]
46 [shape="diamond" label="N46\n58"]
58 [shape="diamond" label="N58\n57"]
70 [shape="diamond" label="N70\n56"]
80 [shape="circle" label="N80\n55"]
38 [shape="circle" label="N38\n17"]
81 [shape="circle" label="N81\n54"]
82 [shape="circle" label="N82\n53"]
83 [shape="circle" label="N83\n52"]
69 [shape="diamond" label="N69\n51"]
73 [shape="circle" label="N73\n50"]
76 [shape="circle" label="N76\n49"]
77 [shape="circle" label="N77\n48"]
78 [shape="circle" label="N78\n47"]
79 [shape="circle" label="N79\n46"]
71 [shape="circle" label="N71\n42"]
72 [shape="circle" label="N72\n45"]
74 [shape="circle" label="N74\n44"]
75 [shape="circle" label="N75\n43"]
57 [shape="diamond" label="N57\n41"]
61 [shape="circle" label="N61\n40"]
64 [shape="circle" label="N64\n39"]
65 [shape="circle" label="N65\n38"]
66 [shape="circle" label="N66\n37"]
67 [shape="circle" label="N67\n36"]
59 [shape="circle" label="N59\n32"]
60 [shape="circle" label="N60\n35"]
62 [shape="circle" label="N62\n34"]
63 [shape="circle" label="N63\n33"]
45 [shape="diamond" label="N45\n31"]
49 [shape="circle" label="N49\n30"]
52 [shape="circle" label="N52\n29"]
53 [shape="circle" label="N53\n28"]
54 [shape="circle" label="N54\n27"]
55 [shape="circle" label="N55\n26"]
47 [shape="circle" label="N47\n22"]
48 [shape="circle" label="N48\n25"]
50 [shape="circle" label="N50\n24"]
51 [shape="circle" label="N51\n23"]
39 [shape="circle" label="N39\n21"]
41 [shape="circle" label="N41\n20"]
42 [shape="circle" label="N42\n19"]
43 [shape="circle" label="N43\n18"]
31 [shape="circle" label="N31\n116"]
28 [shape="diamond" label="N28\n115"]
30 [shape="circle" label="N30\n113"]
23 [shape="circle" label="N23\n120"]
25 [shape="circle" label="N25\n119"]
21 [shape="circle" label="N21\n124"]
node [shape="circle"]
subgraph cluster_initial_monitor {
label="initial_monitor()"
154 -> 155 [label="Function start dummy edge"]
155 -> 156 [label="smonitor.balance = 0;"]
156 -> 157 [label="*balance = 0;"]
157 -> 153 [label="default return"]}
subgraph cluster_initial_vending {
label="initial_vending()"
1 -> 2 [label="Function start dummy edge"]
2 -> 3 [label="svending.t5 = 0;"]
3 -> 4 [label="svending.t10 = 0;"]
4 -> 5 [label="svending.t25 = 0;"]
5 -> 6 [label="svending.l5 = 0;"]
6 -> 7 [label="svending.l10 = 0;"]
7 -> 8 [label="svending.l25 = 0;"]
8 -> 9 [label="svending.state = ACCEPTING;"]
9 -> 10 [label="svending.change = NONE;"]
10 -> 11 [label="*change = NONE;"]
11 -> 0 [label="default return"]}
subgraph cluster_main {
label="main()"
200 -> 223 [label="INIT GLOBAL VARS"]
223 -> 224 [label="typedef unsigned long int size_t;"]
224 -> 225 [label="typedef unsigned char __u_char;"]
225 -> 226 [label="typedef unsigned short int __u_short;"]
226 -> 227 [label="typedef unsigned int __u_int;"]
227 -> 228 [label="typedef unsigned long int __u_long;"]
228 -> 229 [label="typedef signed char __int8_t;"]
229 -> 230 [label="typedef unsigned char __uint8_t;"]
230 -> 231 [label="typedef signed short int __int16_t;"]
231 -> 232 [label="typedef unsigned short int __uint16_t;"]
232 -> 233 [label="typedef signed int __int32_t;"]
233 -> 234 [label="typedef unsigned int __uint32_t;"]
234 -> 235 [label="typedef signed long int __int64_t;"]
235 -> 236 [label="typedef unsigned long int __uint64_t;"]
236 -> 237 [label="typedef long int __quad_t;"]
237 -> 238 [label="typedef unsigned long int __u_quad_t;"]
238 -> 239 [label="typedef unsigned long int __dev_t;"]
239 -> 240 [label="typedef unsigned int __uid_t;"]
240 -> 241 [label="typedef unsigned int __gid_t;"]
241 -> 242 [label="typedef unsigned long int __ino_t;"]
242 -> 243 [label="typedef unsigned long int __ino64_t;"]
243 -> 244 [label="typedef unsigned int __mode_t;"]
244 -> 245 [label="typedef unsigned long int __nlink_t;"]
245 -> 246 [label="typedef long int __off_t;"]
246 -> 247 [label="typedef long int __off64_t;"]
247 -> 248 [label="typedef int __pid_t;"]
248 -> 249 [label="struct __anon_type___fsid_t {   int __val[2]; } ;"]
249 -> 250 [label="typedef struct __anon_type___fsid_t __fsid_t;"]
250 -> 251 [label="typedef long int __clock_t;"]
251 -> 252 [label="typedef unsigned long int __rlim_t;"]
252 -> 253 [label="typedef unsigned long int __rlim64_t;"]
253 -> 254 [label="typedef unsigned int __id_t;"]
254 -> 255 [label="typedef long int __time_t;"]
255 -> 256 [label="typedef unsigned int __useconds_t;"]
256 -> 257 [label="typedef long int __suseconds_t;"]
257 -> 258 [label="typedef int __daddr_t;"]
258 -> 259 [label="typedef int __key_t;"]
259 -> 260 [label="typedef int __clockid_t;"]
260 -> 261 [label="typedef void *__timer_t;"]
261 -> 262 [label="typedef long int __blksize_t;"]
262 -> 263 [label="typedef long int __blkcnt_t;"]
263 -> 264 [label="typedef long int __blkcnt64_t;"]
264 -> 265 [label="typedef unsigned long int __fsblkcnt_t;"]
265 -> 266 [label="typedef unsigned long int __fsblkcnt64_t;"]
266 -> 267 [label="typedef unsigned long int __fsfilcnt_t;"]
267 -> 268 [label="typedef unsigned long int __fsfilcnt64_t;"]
268 -> 269 [label="typedef long int __fsword_t;"]
269 -> 270 [label="typedef long int __ssize_t;"]
270 -> 271 [label="typedef long int __syscall_slong_t;"]
271 -> 272 [label="typedef unsigned long int __syscall_ulong_t;"]
272 -> 273 [label="typedef __off64_t __loff_t;"]
273 -> 274 [label="typedef __quad_t *__qaddr_t;"]
274 -> 275 [label="typedef char *__caddr_t;"]
275 -> 276 [label="typedef long int __intptr_t;"]
276 -> 277 [label="typedef unsigned int __socklen_t;"]
277 -> 278 [label="struct _IO_FILE ;"]
278 -> 279 [label="typedef struct _IO_FILE FILE;"]
279 -> 280 [label="typedef struct _IO_FILE __FILE;"]
280 -> 281 [label="union __anon_type_0 {   unsigned int __wch;   char __wchb[4]; } ;"]
281 -> 282 [label="struct __anon_type___mbstate_t {   int __count;   union __anon_type_0 __value; } ;"]
282 -> 283 [label="typedef struct __anon_type___mbstate_t __mbstate_t;"]
283 -> 284 [label="struct __anon_type__G_fpos_t {   __off_t __pos;   __mbstate_t __state; } ;"]
284 -> 285 [label="typedef struct __anon_type__G_fpos_t _G_fpos_t;"]
285 -> 286 [label="struct __anon_type__G_fpos64_t {   __off64_t __pos;   __mbstate_t __state; } ;"]
286 -> 287 [label="typedef struct __anon_type__G_fpos_t _G_fpos64_t;"]
287 -> 288 [label="typedef __builtin_va_list __gnuc_va_list;"]
288 -> 289 [label="struct _IO_jump_t ;"]
289 -> 290 [label="typedef void _IO_lock_t;"]
290 -> 291 [label="struct _IO_marker {   struct _IO_marker *_next;   struct _IO_FILE *_sbuf;   int _pos; } ;"]
291 -> 292 [label="enum __codecvt_result {   __codecvt_ok = 0,   __codecvt_partial = 1,   __codecvt_error = 2,   __codecvt_noconv = 3 } ;"]
292 -> 293 [label="struct _IO_FILE {   int _flags;   char *_IO_read_ptr;   char *_IO_read_end;   char *_IO_read_base;   char *_IO_write_base;   char *_IO_write_ptr;   char *_IO_write_end;   char *_IO_buf_base;   char *_IO_buf_end;   char *_IO_save_base;   char *_IO_backup_base;   char *_IO_save_end;   struct _IO_marker *_markers;   struct _IO_FILE *_chain;   int _fileno;   int _flags2;   __off_t _old_offset;   unsigned short _cur_column;   signed char _vtable_offset;   char _shortbuf[1];   _IO_lock_t *_lock;   __off64_t _offset;   void *__pad1;   void *__pad2;   void *__pad3;   void *__pad4;   size_t __pad5;   int _mode;   char _unused2[40]; } ;"]
293 -> 294 [label="typedef struct _IO_FILE _IO_FILE;"]
294 -> 295 [label="struct _IO_FILE_plus ;"]
295 -> 296 [label="extern struct _IO_FILE_plus _IO_2_1_stdin_;"]
296 -> 297 [label="extern struct _IO_FILE_plus _IO_2_1_stdout_;"]
297 -> 298 [label="extern struct _IO_FILE_plus _IO_2_1_stderr_;"]
298 -> 299 [label="typedef __ssize_t  __io_read_fn(void *__cookie, char *__buf, size_t __nbytes);"]
299 -> 300 [label="typedef __ssize_t  __io_write_fn(void *__cookie, const char *__buf, size_t __n);"]
300 -> 301 [label="typedef int __io_seek_fn(void *__cookie, __off64_t *__pos, int __w);"]
301 -> 302 [label="typedef int __io_close_fn(void *__cookie);"]
302 -> 303 [label="int __underflow(_IO_FILE *);"]
303 -> 304 [label="int __uflow(_IO_FILE *);"]
304 -> 305 [label="int __overflow(_IO_FILE *, int);"]
305 -> 306 [label="int _IO_getc(_IO_FILE *__fp);"]
306 -> 307 [label="int _IO_putc(int __c, _IO_FILE *__fp);"]
307 -> 308 [label="int _IO_feof(_IO_FILE *__fp);"]
308 -> 309 [label="int _IO_ferror(_IO_FILE *__fp);"]
309 -> 310 [label="int _IO_peekc_locked(_IO_FILE *__fp);"]
310 -> 311 [label="void _IO_flockfile(_IO_FILE *);"]
311 -> 312 [label="void _IO_funlockfile(_IO_FILE *);"]
312 -> 313 [label="int _IO_ftrylockfile(_IO_FILE *);"]
313 -> 314 [label="int _IO_vfscanf(_IO_FILE *, const char *, __gnuc_va_list , int *);"]
314 -> 315 [label="int _IO_vfprintf(_IO_FILE *, const char *, __gnuc_va_list );"]
315 -> 316 [label="__ssize_t  _IO_padn(_IO_FILE *, int, __ssize_t );"]
316 -> 317 [label="size_t  _IO_sgetn(_IO_FILE *, void *, size_t );"]
317 -> 318 [label="__off64_t  _IO_seekoff(_IO_FILE *, __off64_t , int, int);"]
318 -> 319 [label="__off64_t  _IO_seekpos(_IO_FILE *, __off64_t , int);"]
319 -> 320 [label="void _IO_free_backup_area(_IO_FILE *);"]
320 -> 321 [label="typedef __gnuc_va_list va_list;"]
321 -> 322 [label="typedef __off_t off_t;"]
322 -> 323 [label="typedef __ssize_t ssize_t;"]
323 -> 324 [label="typedef _G_fpos_t fpos_t;"]
324 -> 325 [label="extern struct _IO_FILE *stdin;"]
325 -> 326 [label="extern struct _IO_FILE *stdout;"]
326 -> 327 [label="extern struct _IO_FILE *stderr;"]
327 -> 328 [label="int remove(const char *__filename);"]
328 -> 329 [label="int rename(const char *__old, const char *__new);"]
329 -> 330 [label="int renameat(int __oldfd, const char *__old, int __newfd, const char *__new);"]
330 -> 331 [label="FILE * tmpfile();"]
331 -> 332 [label="char * tmpnam(char *__s);"]
332 -> 333 [label="char * tmpnam_r(char *__s);"]
333 -> 334 [label="char * tempnam(const char *__dir, const char *__pfx);"]
334 -> 335 [label="int fclose(FILE *__stream);"]
335 -> 336 [label="int fflush(FILE *__stream);"]
336 -> 337 [label="int fflush_unlocked(FILE *__stream);"]
337 -> 338 [label="FILE * fopen(const char *__filename, const char *__modes);"]
338 -> 339 [label="FILE * freopen(const char *__filename, const char *__modes, FILE *__stream);"]
339 -> 340 [label="FILE * fdopen(int __fd, const char *__modes);"]
340 -> 341 [label="FILE * fmemopen(void *__s, size_t __len, const char *__modes);"]
341 -> 342 [label="FILE * open_memstream(char **__bufloc, size_t *__sizeloc);"]
342 -> 343 [label="void setbuf(FILE *__stream, char *__buf);"]
343 -> 344 [label="int setvbuf(FILE *__stream, char *__buf, int __modes, size_t __n);"]
344 -> 345 [label="void setbuffer(FILE *__stream, char *__buf, size_t __size);"]
345 -> 346 [label="void setlinebuf(FILE *__stream);"]
346 -> 347 [label="int fprintf(FILE *__stream, const char *__format, ...);"]
347 -> 348 [label="int printf(const char *__format, ...);"]
348 -> 349 [label="int sprintf(char *__s, const char *__format, ...);"]
349 -> 350 [label="int vfprintf(FILE *__s, const char *__format, __gnuc_va_list __arg);"]
350 -> 351 [label="int vprintf(const char *__format, __gnuc_va_list __arg);"]
351 -> 352 [label="int vsprintf(char *__s, const char *__format, __gnuc_va_list __arg);"]
352 -> 353 [label="int snprintf(char *__s, size_t __maxlen, const char *__format, ...);"]
353 -> 354 [label="int vsnprintf(char *__s, size_t __maxlen, const char *__format, __gnuc_va_list __arg);"]
354 -> 355 [label="int vdprintf(int __fd, const char *__fmt, __gnuc_va_list __arg);"]
355 -> 356 [label="int dprintf(int __fd, const char *__fmt, ...);"]
356 -> 357 [label="int fscanf(FILE *__stream, const char *__format, ...);"]
357 -> 358 [label="int scanf(const char *__format, ...);"]
358 -> 359 [label="int sscanf(const char *__s, const char *__format, ...);"]
359 -> 360 [label="int vfscanf(FILE *__s, const char *__format, __gnuc_va_list __arg);"]
360 -> 361 [label="int vscanf(const char *__format, __gnuc_va_list __arg);"]
361 -> 362 [label="int vsscanf(const char *__s, const char *__format, __gnuc_va_list __arg);"]
362 -> 363 [label="int fgetc(FILE *__stream);"]
363 -> 364 [label="int getc(FILE *__stream);"]
364 -> 365 [label="int getchar();"]
365 -> 366 [label="int getc_unlocked(FILE *__stream);"]
366 -> 367 [label="int getchar_unlocked();"]
367 -> 368 [label="int fgetc_unlocked(FILE *__stream);"]
368 -> 369 [label="int fputc(int __c, FILE *__stream);"]
369 -> 370 [label="int putc(int __c, FILE *__stream);"]
370 -> 371 [label="int putchar(int __c);"]
371 -> 372 [label="int fputc_unlocked(int __c, FILE *__stream);"]
372 -> 373 [label="int putc_unlocked(int __c, FILE *__stream);"]
373 -> 374 [label="int putchar_unlocked(int __c);"]
374 -> 375 [label="int getw(FILE *__stream);"]
375 -> 376 [label="int putw(int __w, FILE *__stream);"]
376 -> 377 [label="char * fgets(char *__s, int __n, FILE *__stream);"]
377 -> 378 [label="__ssize_t  __getdelim(char **__lineptr, size_t *__n, int __delimiter, FILE *__stream);"]
378 -> 379 [label="__ssize_t  getdelim(char **__lineptr, size_t *__n, int __delimiter, FILE *__stream);"]
379 -> 380 [label="__ssize_t  getline(char **__lineptr, size_t *__n, FILE *__stream);"]
380 -> 381 [label="int fputs(const char *__s, FILE *__stream);"]
381 -> 382 [label="int puts(const char *__s);"]
382 -> 383 [label="int ungetc(int __c, FILE *__stream);"]
383 -> 384 [label="size_t  fread(void *__ptr, size_t __size, size_t __n, FILE *__stream);"]
384 -> 385 [label="size_t  fwrite(const void *__ptr, size_t __size, size_t __n, FILE *__s);"]
385 -> 386 [label="size_t  fread_unlocked(void *__ptr, size_t __size, size_t __n, FILE *__stream);"]
386 -> 387 [label="size_t  fwrite_unlocked(const void *__ptr, size_t __size, size_t __n, FILE *__stream);"]
387 -> 388 [label="int fseek(FILE *__stream, long int __off, int __whence);"]
388 -> 389 [label="long int ftell(FILE *__stream);"]
389 -> 390 [label="void rewind(FILE *__stream);"]
390 -> 391 [label="int fseeko(FILE *__stream, __off_t __off, int __whence);"]
391 -> 392 [label="__off_t  ftello(FILE *__stream);"]
392 -> 393 [label="int fgetpos(FILE *__stream, fpos_t *__pos);"]
393 -> 394 [label="int fsetpos(FILE *__stream, fpos_t *__pos);"]
394 -> 395 [label="void clearerr(FILE *__stream);"]
395 -> 396 [label="int feof(FILE *__stream);"]
396 -> 397 [label="int ferror(FILE *__stream);"]
397 -> 398 [label="void clearerr_unlocked(FILE *__stream);"]
398 -> 399 [label="int feof_unlocked(FILE *__stream);"]
399 -> 400 [label="int ferror_unlocked(FILE *__stream);"]
400 -> 401 [label="void perror(const char *__s);"]
401 -> 402 [label="extern int sys_nerr;"]
402 -> 403 [label="extern const const char *sys_errlist[];"]
403 -> 404 [label="int fileno(FILE *__stream);"]
404 -> 405 [label="int fileno_unlocked(FILE *__stream);"]
405 -> 406 [label="FILE * popen(const char *__command, const char *__modes);"]
406 -> 407 [label="int pclose(FILE *__stream);"]
407 -> 408 [label="char * ctermid(char *__s);"]
408 -> 409 [label="void flockfile(FILE *__stream);"]
409 -> 410 [label="int ftrylockfile(FILE *__stream);"]
410 -> 411 [label="void funlockfile(FILE *__stream);"]
411 -> 412 [label="unsigned char nondet_uchar();"]
412 -> 413 [label="int BITS = 4;"]
413 -> 414 [label="int NONE = 0;"]
414 -> 415 [label="int NICKEL = 1;"]
415 -> 416 [label="int DIME = 2;"]
416 -> 417 [label="int QUARTER = 3;"]
417 -> 418 [label="int ACCEPTING = 0;"]
418 -> 419 [label="int CHANGE = 1;"]
419 -> 420 [label="int REFUND = 2;"]
420 -> 421 [label="int BEVERAGE = 3;"]
421 -> 422 [label="struct state_elements_vending {   unsigned char t5;   unsigned char t10;   unsigned char t25;   unsigned char l5;   unsigned char l10;   unsigned char l25;   unsigned char change;   unsigned char state; } ;"]
422 -> 423 [label="struct state_elements_vending svending = {  };"]
423 -> 424 [label="void initial_vending(_Bool clock, unsigned char deposit, unsigned char *change, _Bool *beverage, _Bool *enable);"]
424 -> 425 [label="void vending(_Bool clock, unsigned char deposit, unsigned char *change, _Bool *beverage, _Bool *enable);"]
425 -> 426 [label="struct state_elements_monitor {   unsigned char balance; } ;"]
426 -> 427 [label="struct state_elements_monitor smonitor = {  };"]
427 -> 428 [label="void initial_monitor(_Bool clock, unsigned char deposit, _Bool beverage, unsigned char change, unsigned char *balance);"]
428 -> 429 [label="void monitor(_Bool clock, unsigned char deposit, _Bool beverage, unsigned char change, unsigned char *balance);"]
429 -> 430 [label="unsigned char deposit = '\x0';"]
430 -> 431 [label="void main();"]
431 -> 201 [label="Function start dummy edge"]
201 -> 202 [label="_Bool clock;"]
202 -> 203 [label="unsigned char balance;"]
203 -> 204 [label="unsigned char change;"]
204 -> 205 [label="unsigned char nd;"]
205 -> 206 [label="_Bool beverage;"]
206 -> 207 [label="_Bool enable;"]
207 -> 208 [label="initial_vending(clock, deposit, &change, &beverage, &enable);" style="dotted" arrowhead="empty"]
208 -> 209 [label="initial_monitor(clock, deposit, beverage, change, &balance);" style="dotted" arrowhead="empty"]
209 -> 210 [label="while"]
210 -> 211 [label=""]
211 -> 213 [label="unsigned char __CPAchecker_TMP_0;"]
213 -> 214 [label="__CPAchecker_TMP_0 = nondet_uchar();"]
214 -> 215 [label="deposit = __CPAchecker_TMP_0 & 3;"]
215 -> 216 [label="vending(clock, deposit, &change, &beverage, &enable);" style="dotted" arrowhead="empty"]
216 -> 217 [label="monitor(clock, deposit, beverage, change, &balance);" style="dotted" arrowhead="empty"]
217 -> 220 [label="[enable == 0]"]
217 -> 219 [label="[!(enable == 0)]"]
219 -> 221 [label="deposit = nd & 3;"]
221 -> 218 [label=""]
218 -> 210 [label=""]
220 -> 222 [label="deposit = NONE;"]
222 -> 218 [label=""]}
subgraph cluster_monitor {
label="monitor()"
159 -> 160 [label="Function start dummy edge"]
160 -> 161 [label="unsigned char deposit__1;"]
161 -> 162 [label="unsigned char change__1;"]
162 -> 163 [label="unsigned char valD;"]
163 -> 164 [label="unsigned char valC;"]
164 -> 165 [label="unsigned char valB;"]
165 -> 166 [label="int __CPAchecker_TMP_0;"]
166 -> 167 [label="[deposit__1 == QUARTER]"]
166 -> 168 [label="[!(deposit__1 == QUARTER)]"]
168 -> 170 [label="int __CPAchecker_TMP_1;"]
170 -> 171 [label="[deposit__1 == DIME]"]
170 -> 172 [label="[!(deposit__1 == DIME)]"]
172 -> 174 [label="int __CPAchecker_TMP_2;"]
174 -> 175 [label="[deposit__1 == NICKEL]"]
174 -> 176 [label="[!(deposit__1 == NICKEL)]"]
176 -> 177 [label="__CPAchecker_TMP_2 = 0;"]
177 -> 173 [label="__CPAchecker_TMP_1 = __CPAchecker_TMP_2;"]
173 -> 169 [label="__CPAchecker_TMP_0 = __CPAchecker_TMP_1;"]
169 -> 178 [label="valD = __CPAchecker_TMP_0;"]
178 -> 179 [label="int __CPAchecker_TMP_3;"]
179 -> 180 [label="[change__1 == QUARTER]"]
179 -> 181 [label="[!(change__1 == QUARTER)]"]
181 -> 183 [label="int __CPAchecker_TMP_4;"]
183 -> 184 [label="[change__1 == DIME]"]
183 -> 185 [label="[!(change__1 == DIME)]"]
185 -> 187 [label="int __CPAchecker_TMP_5;"]
187 -> 188 [label="[change__1 == NICKEL]"]
187 -> 189 [label="[!(change__1 == NICKEL)]"]
189 -> 190 [label="__CPAchecker_TMP_5 = 0;"]
190 -> 186 [label="__CPAchecker_TMP_4 = __CPAchecker_TMP_5;"]
186 -> 182 [label="__CPAchecker_TMP_3 = __CPAchecker_TMP_4;"]
182 -> 191 [label="valC = __CPAchecker_TMP_3;"]
191 -> 192 [label="int __CPAchecker_TMP_6;"]
192 -> 193 [label="[beverage == 1]"]
192 -> 194 [label="[!(beverage == 1)]"]
194 -> 195 [label="__CPAchecker_TMP_6 = 0;"]
195 -> 196 [label="valB = __CPAchecker_TMP_6;"]
196 -> 197 [label="smonitor.balance = ((smonitor.balance) + valD) - (valC + valB);"]
197 -> 198 [label="*balance = ((smonitor.balance) + valD) - (valC + valB);"]
198 -> 158 [label="default return"]
193 -> 195 [label="__CPAchecker_TMP_6 = 5;"]
188 -> 190 [label="__CPAchecker_TMP_5 = 1;"]
184 -> 186 [label="__CPAchecker_TMP_4 = 2;"]
180 -> 182 [label="__CPAchecker_TMP_3 = 5;"]
175 -> 177 [label="__CPAchecker_TMP_2 = 1;"]
171 -> 173 [label="__CPAchecker_TMP_1 = 2;"]
167 -> 169 [label="__CPAchecker_TMP_0 = 5;"]}
subgraph cluster_vending {
label="vending()"
13 -> 14 [label="Function start dummy edge"]
14 -> 15 [label="unsigned char total;"]
15 -> 16 [label="int __CPAchecker_TMP_0;"]
16 -> 17 [label="int __CPAchecker_TMP_1;"]
17 -> 18 [label="int __CPAchecker_TMP_2;"]
18 -> 19 [label=""]
19 -> 21 [label="[((svending.l5) & 7) == 0]"]
19 -> 20 [label="[!(((svending.l5) & 7) == 0)]"]
20 -> 22 [label="__CPAchecker_TMP_0 = 1;"]
22 -> 26 [label=""]
26 -> 23 [label="[(((svending.l10) & 3) << 1) == 0]"]
26 -> 24 [label="[!((((svending.l10) & 3) << 1) == 0)]"]
24 -> 27 [label="__CPAchecker_TMP_1 = 1;"]
27 -> 32 [label=""]
32 -> 31 [label="[(((svending.l25) & 1) << 2) == 0]"]
32 -> 29 [label="[!((((svending.l25) & 1) << 2) == 0)]"]
29 -> 33 [label="__CPAchecker_TMP_2 = 1;"]
33 -> 34 [label="total = (__CPAchecker_TMP_0 + __CPAchecker_TMP_1) + __CPAchecker_TMP_2;"]
34 -> 36 [label="[(svending.state) == ACCEPTING]"]
34 -> 37 [label="[!((svending.state) == ACCEPTING)]"]
37 -> 85 [label="[(svending.state) == CHANGE]"]
37 -> 86 [label="[!((svending.state) == CHANGE)]"]
86 -> 118 [label="[(svending.state) == BEVERAGE]"]
86 -> 119 [label="[!((svending.state) == BEVERAGE)]"]
119 -> 127 [label="[(svending.state) == REFUND]"]
119 -> 126 [label="[!((svending.state) == REFUND)]"]
126 -> 35 [label=""]
35 -> 138 [label="*beverage = (svending.state) == BEVERAGE;"]
138 -> 139 [label="int __CPAchecker_TMP_3;"]
139 -> 140 [label="[(svending.state) == ACCEPTING]"]
139 -> 142 [label="[!((svending.state) == ACCEPTING)]"]
142 -> 143 [label="__CPAchecker_TMP_3 = 0;"]
143 -> 144 [label="*enable = __CPAchecker_TMP_3;"]
144 -> 145 [label="int __CPAchecker_TMP_4;"]
145 -> 146 [label="[(svending.state) == BEVERAGE]"]
145 -> 147 [label="[!((svending.state) == BEVERAGE)]"]
147 -> 151 [label="__CPAchecker_TMP_4 = 1;"]
151 -> 152 [label="assert(__CPAchecker_TMP_4);"]
152 -> 12 [label="default return"]
146 -> 150 [label="[((total >> 2) & 3) == 1]"]
146 -> 149 [label="[!(((total >> 2) & 3) == 1)]"]
149 -> 147 [label="[(total & 3) == 2]"]
149 -> 148 [label="[!((total & 3) == 2)]"]
148 -> 151 [label="__CPAchecker_TMP_4 = 0;"]
150 -> 147 [label="[(total & 3) == 1]"]
150 -> 149 [label="[!((total & 3) == 1)]"]
140 -> 141 [label="[(total & 15) < 5]"]
140 -> 142 [label="[!((total & 15) < 5)]"]
141 -> 143 [label="__CPAchecker_TMP_3 = 1;"]
127 -> 129 [label="[((unsigned int)(svending.l10)) > 0]"]
127 -> 130 [label="[!(((unsigned int)(svending.l10)) > 0)]"]
130 -> 135 [label="svending.state = ACCEPTING;"]
135 -> 136 [label="svending.change = NONE;"]
136 -> 137 [label="*change = NONE;"]
137 -> 35 [label=""]
129 -> 131 [label="svending.l10 = ((svending.l10) - 1) & 3;"]
131 -> 132 [label="svending.t10 = ((svending.t10) - 1) & 15;"]
132 -> 133 [label="svending.change = DIME;"]
133 -> 134 [label="*change = DIME;"]
134 -> 35 [label=""]
118 -> 120 [label="svending.change = NONE;"]
120 -> 121 [label="*change = NONE;"]
121 -> 122 [label="svending.l5 = 0;"]
122 -> 123 [label="svending.l10 = 0;"]
123 -> 124 [label="svending.l25 = 0;"]
124 -> 125 [label="svending.state = ACCEPTING;"]
125 -> 35 [label=""]
85 -> 88 [label="[((unsigned int)total) == 5]"]
85 -> 89 [label="[!(((unsigned int)total) == 5)]"]
89 -> 94 [label="[((unsigned int)total) == 6]"]
89 -> 95 [label="[!(((unsigned int)total) == 6)]"]
95 -> 107 [label="[((unsigned int)(svending.l10)) > 0]"]
95 -> 108 [label="[!(((unsigned int)(svending.l10)) > 0)]"]
108 -> 113 [label="svending.change = NICKEL;"]
113 -> 114 [label="*change = NICKEL;"]
114 -> 115 [label="svending.t5 = ((svending.t5) - 1) & 15;"]
115 -> 116 [label="svending.l5 = ((svending.l5) - 1) & 7;"]
116 -> 87 [label=""]
87 -> 35 [label=""]
107 -> 109 [label="svending.change = DIME;"]
109 -> 110 [label="*change = DIME;"]
110 -> 111 [label="svending.t10 = ((svending.t10) - 1) & 15;"]
111 -> 112 [label="svending.l10 = ((svending.l10) - 1) & 3;"]
112 -> 87 [label=""]
94 -> 97 [label="[((unsigned int)(svending.t5)) > 0]"]
94 -> 98 [label="[!(((unsigned int)(svending.t5)) > 0)]"]
98 -> 103 [label="svending.change = NONE;"]
103 -> 104 [label="*change = NONE;"]
104 -> 105 [label="svending.state = REFUND;"]
105 -> 96 [label=""]
96 -> 87 [label=""]
97 -> 99 [label="svending.change = NICKEL;"]
99 -> 100 [label="*change = NICKEL;"]
100 -> 101 [label="svending.t5 = ((svending.t5) - 1) & 15;"]
101 -> 102 [label="svending.state = BEVERAGE;"]
102 -> 96 [label=""]
88 -> 90 [label="svending.change = NONE;"]
90 -> 91 [label="*change = NONE;"]
91 -> 92 [label="svending.state = BEVERAGE;"]
92 -> 87 [label=""]
36 -> 39 [label="[((unsigned int)total) >= 5]"]
36 -> 40 [label="[!(((unsigned int)total) >= 5)]"]
40 -> 45 [label="[deposit == NICKEL]"]
40 -> 46 [label="[!(deposit == NICKEL)]"]
46 -> 57 [label="[deposit == DIME]"]
46 -> 58 [label="[!(deposit == DIME)]"]
58 -> 69 [label="[deposit == QUARTER]"]
58 -> 70 [label="[!(deposit == QUARTER)]"]
70 -> 81 [label="[deposit == NONE]"]
70 -> 80 [label="[!(deposit == NONE)]"]
80 -> 38 [label=""]
38 -> 35 [label=""]
81 -> 82 [label="svending.change = NONE;"]
82 -> 83 [label="*change = NONE;"]
83 -> 38 [label=""]
69 -> 72 [label="[(svending.t25) == 15]"]
69 -> 73 [label="[!((svending.t25) == 15)]"]
73 -> 76 [label="svending.change = NONE;"]
76 -> 77 [label="*change = NONE;"]
77 -> 78 [label="svending.t25 = ((svending.t25) + 1) & 15;"]
78 -> 79 [label="svending.l25 = ((svending.l25) + 1) & 1;"]
79 -> 71 [label=""]
71 -> 38 [label=""]
72 -> 74 [label="svending.change = QUARTER;"]
74 -> 75 [label="*change = QUARTER;"]
75 -> 71 [label=""]
57 -> 60 [label="[(svending.t10) == 15]"]
57 -> 61 [label="[!((svending.t10) == 15)]"]
61 -> 64 [label="svending.change = NONE;"]
64 -> 65 [label="*change = NONE;"]
65 -> 66 [label="svending.t10 = ((svending.t10) + 1) & 15;"]
66 -> 67 [label="svending.l10 = ((svending.l10) + 1) & 3;"]
67 -> 59 [label=""]
59 -> 38 [label=""]
60 -> 62 [label="svending.change = DIME;"]
62 -> 63 [label="*change = DIME;"]
63 -> 59 [label=""]
45 -> 48 [label="[(svending.t5) == 15]"]
45 -> 49 [label="[!((svending.t5) == 15)]"]
49 -> 52 [label="svending.change = NONE;"]
52 -> 53 [label="*change = NONE;"]
53 -> 54 [label="svending.t5 = ((svending.t5) + 1) & 15;"]
54 -> 55 [label="svending.l5 = ((svending.l5) + 1) & 7;"]
55 -> 47 [label=""]
47 -> 38 [label=""]
48 -> 50 [label="svending.change = NICKEL;"]
50 -> 51 [label="*change = NICKEL;"]
51 -> 47 [label=""]
39 -> 41 [label="svending.change = deposit & 3;"]
41 -> 42 [label="*change = deposit & 3;"]
42 -> 43 [label="svending.state = CHANGE;"]
43 -> 38 [label=""]
31 -> 28 [label=""]
28 -> 30 [label="[((svending.l25) & 1) == 0]"]
28 -> 29 [label="[!(((svending.l25) & 1) == 0)]"]
30 -> 33 [label="__CPAchecker_TMP_2 = 0;"]
23 -> 25 [label=""]
25 -> 27 [label="__CPAchecker_TMP_1 = 0;"]
21 -> 22 [label="__CPAchecker_TMP_0 = 0;"]}
207 -> 1 [label="initial_vending(clock, deposit, &change, &beverage, &enable)"]
0 -> 208 [label="Return edge from initial_vending to main"]
208 -> 154 [label="initial_monitor(clock, deposit, beverage, change, &balance)"]
153 -> 209 [label="Return edge from initial_monitor to main"]
215 -> 13 [label="vending(clock, deposit, &change, &beverage, &enable)"]
12 -> 216 [label="Return edge from vending to main"]
216 -> 159 [label="monitor(clock, deposit, beverage, change, &balance)"]
158 -> 217 [label="Return edge from monitor to main"]}