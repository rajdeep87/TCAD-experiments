digraph ARG {
node [style="filled" shape="box" color="white"]
0 [fillcolor="cornflowerblue" label="0 @ N85\nmain entry\nAbstractionState: ABS0: true\n" id="0"]
89 [label="89 @ N99\nmain\n" id="89"]
90 [label="90 @ N91\nmain\n" id="90"]
92 [fillcolor="cornflowerblue" label="92 @ N92\nmain\nAbstractionState: ABS3\n" id="92"]
93 [label="93 @ N97\nmain\n" id="93"]
94 [label="94 @ N1\nspinner entry\n" id="94"]
95 [label="95 @ N10\nspinner\n" id="95"]
97 [label="97 @ N11\nspinner\n" id="97"]
100 [label="100 @ N13\nspinner\n" id="100"]
101 [label="101 @ N15\nspinner\n" id="101"]
103 [label="103 @ N16\nspinner\n" id="103"]
106 [label="106 @ N18\nspinner\n" id="106"]
107 [label="107 @ N20\nspinner\n" id="107"]
109 [label="109 @ N21\nspinner\n" id="109"]
112 [label="112 @ N23\nspinner\n" id="112"]
113 [label="113 @ N25\nspinner\n" id="113"]
115 [label="115 @ N26\nspinner\n" id="115"]
118 [label="118 @ N28\nspinner\n" id="118"]
119 [label="119 @ N30\nspinner\n" id="119"]
121 [label="121 @ N31\nspinner\n" id="121"]
124 [label="124 @ N33\nspinner\n" id="124"]
125 [label="125 @ N35\nspinner\n" id="125"]
127 [label="127 @ N36\nspinner\n" id="127"]
130 [label="130 @ N38\nspinner\n" id="130"]
131 [label="131 @ N40\nspinner\n" id="131"]
133 [label="133 @ N41\nspinner\n" id="133"]
136 [label="136 @ N43\nspinner\n" id="136"]
137 [label="137 @ N45\nspinner\n" id="137"]
139 [label="139 @ N46\nspinner\n" id="139"]
142 [label="142 @ N48\nspinner\n" id="142"]
143 [label="143 @ N50\nspinner\n" id="143"]
145 [label="145 @ N51\nspinner\n" id="145"]
148 [label="148 @ N53\nspinner\n" id="148"]
149 [label="149 @ N55\nspinner\n" id="149"]
151 [label="151 @ N56\nspinner\n" id="151"]
154 [label="154 @ N58\nspinner\n" id="154"]
155 [label="155 @ N59\nspinner\n" id="155"]
157 [label="157 @ N61\nspinner\n" id="157"]
158 [label="158 @ N63\nspinner\n" id="158"]
162 [label="162 @ N60\nspinner\n" id="162"]
163 [label="163 @ N68\nspinner\n" id="163"]
174 [label="174 @ N69\nspinner\n" id="174"]
176 [label="176 @ N74\nspinner\n" id="176"]
177 [label="177 @ N76\nspinner\n" id="177"]
188 [label="188 @ N77\nspinner\n" id="188"]
190 [label="190 @ N82\nspinner\n" id="190"]
191 [label="191 @ N83\nspinner\n" id="191"]
192 [label="192 @ N0\nspinner exit\n" id="192"]
193 [label="193 @ N98\nmain\n" id="193"]
195 [fillcolor="cornflowerblue" label="195 @ N92\nmain\nAbstractionState: ABS6: true\n" id="195"]
196 [label="196 @ N97\nmain\n" id="196"]
197 [label="197 @ N1\nspinner entry\n" id="197"]
198 [label="198 @ N10\nspinner\n" id="198"]
200 [label="200 @ N11\nspinner\n" id="200"]
203 [label="203 @ N13\nspinner\n" id="203"]
204 [label="204 @ N15\nspinner\n" id="204"]
206 [label="206 @ N16\nspinner\n" id="206"]
209 [label="209 @ N18\nspinner\n" id="209"]
210 [label="210 @ N20\nspinner\n" id="210"]
212 [label="212 @ N21\nspinner\n" id="212"]
215 [label="215 @ N23\nspinner\n" id="215"]
216 [label="216 @ N25\nspinner\n" id="216"]
218 [label="218 @ N26\nspinner\n" id="218"]
221 [label="221 @ N28\nspinner\n" id="221"]
222 [label="222 @ N30\nspinner\n" id="222"]
224 [label="224 @ N31\nspinner\n" id="224"]
227 [label="227 @ N33\nspinner\n" id="227"]
228 [label="228 @ N35\nspinner\n" id="228"]
230 [label="230 @ N36\nspinner\n" id="230"]
233 [label="233 @ N38\nspinner\n" id="233"]
234 [label="234 @ N40\nspinner\n" id="234"]
236 [label="236 @ N41\nspinner\n" id="236"]
239 [label="239 @ N43\nspinner\n" id="239"]
240 [label="240 @ N45\nspinner\n" id="240"]
242 [label="242 @ N46\nspinner\n" id="242"]
245 [label="245 @ N48\nspinner\n" id="245"]
246 [label="246 @ N50\nspinner\n" id="246"]
248 [label="248 @ N51\nspinner\n" id="248"]
251 [label="251 @ N53\nspinner\n" id="251"]
252 [label="252 @ N55\nspinner\n" id="252"]
254 [label="254 @ N56\nspinner\n" id="254"]
257 [label="257 @ N58\nspinner\n" id="257"]
258 [label="258 @ N59\nspinner\n" id="258"]
260 [label="260 @ N61\nspinner\n" id="260"]
261 [label="261 @ N63\nspinner\n" id="261"]
265 [label="265 @ N60\nspinner\n" id="265"]
266 [label="266 @ N68\nspinner\n" id="266"]
277 [label="277 @ N69\nspinner\n" id="277"]
279 [label="279 @ N74\nspinner\n" id="279"]
280 [label="280 @ N76\nspinner\n" id="280"]
291 [label="291 @ N77\nspinner\n" id="291"]
293 [label="293 @ N82\nspinner\n" id="293"]
294 [label="294 @ N83\nspinner\n" id="294"]
295 [label="295 @ N0\nspinner exit\n" id="295"]
296 [label="296 @ N98\nmain\n" id="296"]
298 [fillcolor="green" label="298 @ N92\nmain\nAbstractionState: ABS9: true\n" id="298"]
282 [label="282 @ N80\nspinner\n" id="282"]
284 [label="284 @ N79\nspinner\n" id="284"]
287 [label="287 @ N81\nspinner\n" id="287"]
289 [label="289 @ N78\nspinner\n" id="289"]
268 [label="268 @ N72\nspinner\n" id="268"]
270 [label="270 @ N71\nspinner\n" id="270"]
273 [label="273 @ N73\nspinner\n" id="273"]
275 [label="275 @ N70\nspinner\n" id="275"]
259 [label="259 @ N62\nspinner\n" id="259"]
263 [label="263 @ N64\nspinner\n" id="263"]
253 [label="253 @ N57\nspinner\n" id="253"]
247 [label="247 @ N52\nspinner\n" id="247"]
241 [label="241 @ N47\nspinner\n" id="241"]
235 [label="235 @ N42\nspinner\n" id="235"]
229 [label="229 @ N37\nspinner\n" id="229"]
223 [label="223 @ N32\nspinner\n" id="223"]
217 [label="217 @ N27\nspinner\n" id="217"]
211 [label="211 @ N22\nspinner\n" id="211"]
205 [label="205 @ N17\nspinner\n" id="205"]
199 [label="199 @ N12\nspinner\n" id="199"]
179 [label="179 @ N80\nspinner\n" id="179"]
181 [label="181 @ N79\nspinner\n" id="181"]
184 [label="184 @ N81\nspinner\n" id="184"]
186 [label="186 @ N78\nspinner\n" id="186"]
165 [label="165 @ N72\nspinner\n" id="165"]
167 [label="167 @ N71\nspinner\n" id="167"]
170 [label="170 @ N73\nspinner\n" id="170"]
172 [label="172 @ N70\nspinner\n" id="172"]
156 [label="156 @ N62\nspinner\n" id="156"]
160 [label="160 @ N64\nspinner\n" id="160"]
150 [label="150 @ N57\nspinner\n" id="150"]
144 [label="144 @ N52\nspinner\n" id="144"]
138 [label="138 @ N47\nspinner\n" id="138"]
132 [label="132 @ N42\nspinner\n" id="132"]
126 [label="126 @ N37\nspinner\n" id="126"]
120 [label="120 @ N32\nspinner\n" id="120"]
114 [label="114 @ N27\nspinner\n" id="114"]
108 [label="108 @ N22\nspinner\n" id="108"]
102 [label="102 @ N17\nspinner\n" id="102"]
96 [label="96 @ N12\nspinner\n" id="96"]
0 -> 89 [label="Line 0: \lINIT GLOBAL VARS\l" id="0 -> 89"]
89 -> 90 [label="Lines 33 - 956: \ltypedef unsigned long int size_t;\ltypedef unsigned char __u_char;\ltypedef unsigned short int __u_short;\ltypedef unsigned int __u_int;\ltypedef unsigned long int __u_long;\ltypedef signed char __int8_t;\ltypedef unsigned char __uint8_t;\ltypedef signed short int __int16_t;\ltypedef unsigned short int __uint16_t;\ltypedef signed int __int32_t;\ltypedef unsigned int __uint32_t;\ltypedef signed long int __int64_t;\ltypedef unsigned long int __uint64_t;\ltypedef long int __quad_t;\ltypedef unsigned long int __u_quad_t;\ltypedef unsigned long int __dev_t;\ltypedef unsigned int __uid_t;\ltypedef unsigned int __gid_t;\ltypedef unsigned long int __ino_t;\ltypedef unsigned long int __ino64_t;\ltypedef unsigned int __mode_t;\ltypedef unsigned long int __nlink_t;\ltypedef long int __off_t;\ltypedef long int __off64_t;\ltypedef int __pid_t;\lstruct __anon_type___fsid_t {   int __val[2]; } ;\ltypedef struct __anon_type___fsid_t __fsid_t;\ltypedef long int __clock_t;\ltypedef unsigned long int __rlim_t;\ltypedef unsigned long int __rlim64_t;\ltypedef unsigned int __id_t;\ltypedef long int __time_t;\ltypedef unsigned int __useconds_t;\ltypedef long int __suseconds_t;\ltypedef int __daddr_t;\ltypedef int __key_t;\ltypedef int __clockid_t;\ltypedef void *__timer_t;\ltypedef long int __blksize_t;\ltypedef long int __blkcnt_t;\ltypedef long int __blkcnt64_t;\ltypedef unsigned long int __fsblkcnt_t;\ltypedef unsigned long int __fsblkcnt64_t;\ltypedef unsigned long int __fsfilcnt_t;\ltypedef unsigned long int __fsfilcnt64_t;\ltypedef long int __fsword_t;\ltypedef long int __ssize_t;\ltypedef long int __syscall_slong_t;\ltypedef unsigned long int __syscall_ulong_t;\ltypedef __off64_t __loff_t;\ltypedef __quad_t *__qaddr_t;\ltypedef char *__caddr_t;\ltypedef long int __intptr_t;\ltypedef unsigned int __socklen_t;\lstruct _IO_FILE ;\ltypedef struct _IO_FILE FILE;\ltypedef struct _IO_FILE __FILE;\lunion __anon_type_0 {   unsigned int __wch;   char __wchb[4]; } ;\lstruct __anon_type___mbstate_t {   int __count;   union __anon_type_0 __value; } ;\ltypedef struct __anon_type___mbstate_t __mbstate_t;\lstruct __anon_type__G_fpos_t {   __off_t __pos;   __mbstate_t __state; } ;\ltypedef struct __anon_type__G_fpos_t _G_fpos_t;\lstruct __anon_type__G_fpos64_t {   __off64_t __pos;   __mbstate_t __state; } ;\ltypedef struct __anon_type__G_fpos_t _G_fpos64_t;\ltypedef __builtin_va_list __gnuc_va_list;\lstruct _IO_jump_t ;\ltypedef void _IO_lock_t;\lstruct _IO_marker {   struct _IO_marker *_next;   struct _IO_FILE *_sbuf;   int _pos; } ;\lenum __codecvt_result {   __codecvt_ok = 0,   __codecvt_partial = 1,   __codecvt_error = 2,   __codecvt_noconv = 3 } ;\lstruct _IO_FILE {   int _flags;   char *_IO_read_ptr;   char *_IO_read_end;   char *_IO_read_base;   char *_IO_write_base;   char *_IO_write_ptr;   char *_IO_write_end;   char *_IO_buf_base;   char *_IO_buf_end;   char *_IO_save_base;   char *_IO_backup_base;   char *_IO_save_end;   struct _IO_marker *_markers;   struct _IO_FILE *_chain;   int _fileno;   int _flags2;   __off_t _old_offset;   unsigned short _cur_column;   signed char _vtable_offset;   char _shortbuf[1];   _IO_lock_t *_lock;   __off64_t _offset;   void *__pad1;   void *__pad2;   void *__pad3;   void *__pad4;   size_t __pad5;   int _mode;   char _unused2[40]; } ;\ltypedef struct _IO_FILE _IO_FILE;\lstruct _IO_FILE_plus ;\lextern struct _IO_FILE_plus _IO_2_1_stdin_;\lextern struct _IO_FILE_plus _IO_2_1_stdout_;\lextern struct _IO_FILE_plus _IO_2_1_stderr_;\ltypedef __ssize_t  __io_read_fn(void *__cookie, char *__buf, size_t __nbytes);\ltypedef __ssize_t  __io_write_fn(void *__cookie, const char *__buf, size_t __n);\ltypedef int __io_seek_fn(void *__cookie, __off64_t *__pos, int __w);\ltypedef int __io_close_fn(void *__cookie);\lint __underflow(_IO_FILE *);\lint __uflow(_IO_FILE *);\lint __overflow(_IO_FILE *, int);\lint _IO_getc(_IO_FILE *__fp);\lint _IO_putc(int __c, _IO_FILE *__fp);\lint _IO_feof(_IO_FILE *__fp);\lint _IO_ferror(_IO_FILE *__fp);\lint _IO_peekc_locked(_IO_FILE *__fp);\lvoid _IO_flockfile(_IO_FILE *);\lvoid _IO_funlockfile(_IO_FILE *);\lint _IO_ftrylockfile(_IO_FILE *);\lint _IO_vfscanf(_IO_FILE *, const char *, __gnuc_va_list , int *);\lint _IO_vfprintf(_IO_FILE *, const char *, __gnuc_va_list );\l__ssize_t  _IO_padn(_IO_FILE *, int, __ssize_t );\lsize_t  _IO_sgetn(_IO_FILE *, void *, size_t );\l__off64_t  _IO_seekoff(_IO_FILE *, __off64_t , int, int);\l__off64_t  _IO_seekpos(_IO_FILE *, __off64_t , int);\lvoid _IO_free_backup_area(_IO_FILE *);\ltypedef __gnuc_va_list va_list;\ltypedef __off_t off_t;\ltypedef __ssize_t ssize_t;\ltypedef _G_fpos_t fpos_t;\lextern struct _IO_FILE *stdin;\lextern struct _IO_FILE *stdout;\lextern struct _IO_FILE *stderr;\lint remove(const char *__filename);\lint rename(const char *__old, const char *__new);\lint renameat(int __oldfd, const char *__old, int __newfd, const char *__new);\lFILE * tmpfile();\lchar * tmpnam(char *__s);\lchar * tmpnam_r(char *__s);\lchar * tempnam(const char *__dir, const char *__pfx);\lint fclose(FILE *__stream);\lint fflush(FILE *__stream);\lint fflush_unlocked(FILE *__stream);\lFILE * fopen(const char *__filename, const char *__modes);\lFILE * freopen(const char *__filename, const char *__modes, FILE *__stream);\lFILE * fdopen(int __fd, const char *__modes);\lFILE * fmemopen(void *__s, size_t __len, const char *__modes);\lFILE * open_memstream(char **__bufloc, size_t *__sizeloc);\lvoid setbuf(FILE *__stream, char *__buf);\lint setvbuf(FILE *__stream, char *__buf, int __modes, size_t __n);\lvoid setbuffer(FILE *__stream, char *__buf, size_t __size);\lvoid setlinebuf(FILE *__stream);\lint fprintf(FILE *__stream, const char *__format, ...);\lint printf(const char *__format, ...);\lint sprintf(char *__s, const char *__format, ...);\lint vfprintf(FILE *__s, const char *__format, __gnuc_va_list __arg);\lint vprintf(const char *__format, __gnuc_va_list __arg);\lint vsprintf(char *__s, const char *__format, __gnuc_va_list __arg);\lint snprintf(char *__s, size_t __maxlen, const char *__format, ...);\lint vsnprintf(char *__s, size_t __maxlen, const char *__format, __gnuc_va_list __arg);\lint vdprintf(int __fd, const char *__fmt, __gnuc_va_list __arg);\lint dprintf(int __fd, const char *__fmt, ...);\lint fscanf(FILE *__stream, const char *__format, ...);\lint scanf(const char *__format, ...);\lint sscanf(const char *__s, const char *__format, ...);\lint vfscanf(FILE *__s, const char *__format, __gnuc_va_list __arg);\lint vscanf(const char *__format, __gnuc_va_list __arg);\lint vsscanf(const char *__s, const char *__format, __gnuc_va_list __arg);\lint fgetc(FILE *__stream);\lint getc(FILE *__stream);\lint getchar();\lint getc_unlocked(FILE *__stream);\lint getchar_unlocked();\lint fgetc_unlocked(FILE *__stream);\lint fputc(int __c, FILE *__stream);\lint putc(int __c, FILE *__stream);\lint putchar(int __c);\lint fputc_unlocked(int __c, FILE *__stream);\lint putc_unlocked(int __c, FILE *__stream);\lint putchar_unlocked(int __c);\lint getw(FILE *__stream);\lint putw(int __w, FILE *__stream);\lchar * fgets(char *__s, int __n, FILE *__stream);\l__ssize_t  __getdelim(char **__lineptr, size_t *__n, int __delimiter, FILE *__stream);\l__ssize_t  getdelim(char **__lineptr, size_t *__n, int __delimiter, FILE *__stream);\l__ssize_t  getline(char **__lineptr, size_t *__n, FILE *__stream);\lint fputs(const char *__s, FILE *__stream);\lint puts(const char *__s);\lint ungetc(int __c, FILE *__stream);\lsize_t  fread(void *__ptr, size_t __size, size_t __n, FILE *__stream);\lsize_t  fwrite(const void *__ptr, size_t __size, size_t __n, FILE *__s);\lsize_t  fread_unlocked(void *__ptr, size_t __size, size_t __n, FILE *__stream);\lsize_t  fwrite_unlocked(const void *__ptr, size_t __size, size_t __n, FILE *__stream);\lint fseek(FILE *__stream, long int __off, int __whence);\llong int ftell(FILE *__stream);\lvoid rewind(FILE *__stream);\lint fseeko(FILE *__stream, __off_t __off, int __whence);\l__off_t  ftello(FILE *__stream);\lint fgetpos(FILE *__stream, fpos_t *__pos);\lint fsetpos(FILE *__stream, fpos_t *__pos);\lvoid clearerr(FILE *__stream);\lint feof(FILE *__stream);\lint ferror(FILE *__stream);\lvoid clearerr_unlocked(FILE *__stream);\lint feof_unlocked(FILE *__stream);\lint ferror_unlocked(FILE *__stream);\lvoid perror(const char *__s);\lextern int sys_nerr;\lextern const const char *sys_errlist[];\lint fileno(FILE *__stream);\lint fileno_unlocked(FILE *__stream);\lFILE * popen(const char *__command, const char *__modes);\lint pclose(FILE *__stream);\lchar * ctermid(char *__s);\lvoid flockfile(FILE *__stream);\lint ftrylockfile(FILE *__stream);\lvoid funlockfile(FILE *__stream);\lvoid __assert_fail(const char *__assertion, const char *__file, unsigned int __line, const char *__function);\lvoid __assert_perror_fail(int __errnum, const char *__file, unsigned int __line, const char *__function);\lvoid __assert(const char *__assertion, const char *__file, int __line);\l_Bool nondet_bool();\lstruct state_elements_main {   unsigned int inr;   _Bool spl;   unsigned int dout; } ;\lstruct state_elements_main smain = {  };\lvoid spinner(_Bool clock, _Bool spin, unsigned char amount, unsigned int din, unsigned int *dout);\lvoid main();\lFunction start dummy edge\l_Bool clock;\l_Bool spin;\lunsigned char amount;\lunsigned int din;\lunsigned int dout;\l" id="89 -> 90"]
90 -> 92 [label="Line 957: \lwhile\l" id="90 -> 92"]
92 -> 93 [label="Lines 957 - 960: \l\lspin = nondet_bool();\lamount = nondet_bool();\ldin = nondet_bool();\l" id="92 -> 93"]
93 -> 94 [label="Line 961: \lspinner(clock, spin, amount, din, &dout)\l" id="93 -> 94"]
94 -> 95 [label="Lines 0 - 893: \lFunction start dummy edge\lunsigned int tmp0;\lunsigned int tmp1;\lunsigned int tmp2;\lunsigned int tmp3;\lunsigned int tmp4;\lunsigned int tmp5;\ltmp0 = smain.inr;\lunsigned int __CPAchecker_TMP_0;\l" id="94 -> 95"]
95 -> 96 [label="Line 893: \l[(amount & 1) == 0]\l" id="95 -> 96"]
95 -> 97 [label="Line 893: \l[!((amount & 1) == 0)]\l" id="95 -> 97"]
97 -> 100 [label="Line 893: \l__CPAchecker_TMP_0 = (tmp0 >> 1) & 2147483647;\l" id="97 -> 100"]
100 -> 101 [label="Lines 893 - 894: \ltmp1 = __CPAchecker_TMP_0 | ((tmp1 >> 31) << 31);\lunsigned int __CPAchecker_TMP_1;\l" id="100 -> 101"]
101 -> 102 [label="Line 894: \l[(amount & 1) == 0]\l" id="101 -> 102"]
101 -> 103 [label="Line 894: \l[!((amount & 1) == 0)]\l" id="101 -> 103"]
103 -> 106 [label="Line 894: \l__CPAchecker_TMP_1 = tmp0 & 1;\l" id="103 -> 106"]
106 -> 107 [label="Lines 894 - 896: \ltmp1 = (tmp1 & 2147483647) | (__CPAchecker_TMP_1 << 31);\lunsigned int __CPAchecker_TMP_2;\l" id="106 -> 107"]
107 -> 108 [label="Line 896: \l[((amount >> 1) & 1) == 0]\l" id="107 -> 108"]
107 -> 109 [label="Line 896: \l[!(((amount >> 1) & 1) == 0)]\l" id="107 -> 109"]
109 -> 112 [label="Line 896: \l__CPAchecker_TMP_2 = (tmp1 >> 2) & 1073741823;\l" id="109 -> 112"]
112 -> 113 [label="Lines 896 - 897: \ltmp2 = __CPAchecker_TMP_2 | ((tmp2 >> 30) << 30);\lunsigned int __CPAchecker_TMP_3;\l" id="112 -> 113"]
113 -> 114 [label="Line 897: \l[((amount >> 1) & 1) == 0]\l" id="113 -> 114"]
113 -> 115 [label="Line 897: \l[!(((amount >> 1) & 1) == 0)]\l" id="113 -> 115"]
115 -> 118 [label="Line 897: \l__CPAchecker_TMP_3 = tmp1 & 3;\l" id="115 -> 118"]
118 -> 119 [label="Lines 897 - 899: \ltmp2 = ((__CPAchecker_TMP_3 & 3) << 30) | (tmp2 & 1073741823);\lunsigned int __CPAchecker_TMP_4;\l" id="118 -> 119"]
119 -> 120 [label="Line 899: \l[((amount >> 2) & 1) == 0]\l" id="119 -> 120"]
119 -> 121 [label="Line 899: \l[!(((amount >> 2) & 1) == 0)]\l" id="119 -> 121"]
121 -> 124 [label="Line 899: \l__CPAchecker_TMP_4 = (tmp2 >> 4) & 268435455;\l" id="121 -> 124"]
124 -> 125 [label="Lines 899 - 900: \ltmp3 = __CPAchecker_TMP_4 | ((tmp3 >> 28) << 28);\lunsigned int __CPAchecker_TMP_5;\l" id="124 -> 125"]
125 -> 126 [label="Line 900: \l[((amount >> 2) & 1) == 0]\l" id="125 -> 126"]
125 -> 127 [label="Line 900: \l[!(((amount >> 2) & 1) == 0)]\l" id="125 -> 127"]
127 -> 130 [label="Line 900: \l__CPAchecker_TMP_5 = tmp2 & 15;\l" id="127 -> 130"]
130 -> 131 [label="Lines 900 - 902: \ltmp3 = ((__CPAchecker_TMP_5 & 15) << 28) | (tmp3 & 268435455);\lunsigned int __CPAchecker_TMP_6;\l" id="130 -> 131"]
131 -> 132 [label="Line 902: \l[((amount >> 3) & 1) == 0]\l" id="131 -> 132"]
131 -> 133 [label="Line 902: \l[!(((amount >> 3) & 1) == 0)]\l" id="131 -> 133"]
133 -> 136 [label="Line 902: \l__CPAchecker_TMP_6 = (tmp3 >> 8) & 16777215;\l" id="133 -> 136"]
136 -> 137 [label="Lines 902 - 903: \ltmp4 = __CPAchecker_TMP_6 | ((tmp4 >> 24) << 24);\lunsigned int __CPAchecker_TMP_7;\l" id="136 -> 137"]
137 -> 138 [label="Line 903: \l[((amount >> 3) & 1) == 0]\l" id="137 -> 138"]
137 -> 139 [label="Line 903: \l[!(((amount >> 3) & 1) == 0)]\l" id="137 -> 139"]
139 -> 142 [label="Line 903: \l__CPAchecker_TMP_7 = tmp3 & 255;\l" id="139 -> 142"]
142 -> 143 [label="Lines 903 - 906: \ltmp4 = ((__CPAchecker_TMP_7 & 255) << 24) | (tmp3 & 16777215);\lunsigned int __CPAchecker_TMP_8;\l" id="142 -> 143"]
143 -> 144 [label="Line 906: \l[((amount >> 4) & 1) == 0]\l" id="143 -> 144"]
143 -> 145 [label="Line 906: \l[!(((amount >> 4) & 1) == 0)]\l" id="143 -> 145"]
145 -> 148 [label="Line 906: \l__CPAchecker_TMP_8 = (tmp4 >> 16) & 65535;\l" id="145 -> 148"]
148 -> 149 [label="Lines 906 - 907: \ltmp5 = __CPAchecker_TMP_8 | ((tmp4 >> 16) << 16);\lunsigned int __CPAchecker_TMP_9;\l" id="148 -> 149"]
149 -> 150 [label="Line 907: \l[((amount >> 4) & 1) == 0]\l" id="149 -> 150"]
149 -> 151 [label="Line 907: \l[!(((amount >> 4) & 1) == 0)]\l" id="149 -> 151"]
151 -> 154 [label="Line 907: \l__CPAchecker_TMP_9 = tmp4 & 65535;\l" id="151 -> 154"]
154 -> 155 [label="Line 907: \ltmp5 = ((__CPAchecker_TMP_9 & 65535) << 16) | (tmp4 & 65535);\l" id="154 -> 155"]
155 -> 156 [label="Line 909: \l[(smain.spl) == 0]\l" id="155 -> 156"]
155 -> 157 [label="Line 909: \l[!((smain.spl) == 0)]\l" id="155 -> 157"]
157 -> 158 [label="Line 910: \lsmain.inr = smain.dout;\l" id="157 -> 158"]
158 -> 162 [label="Line 0: \l\l" id="158 -> 162"]
162 -> 163 [label="Lines 914 - 923: \lsmain.dout = tmp5;\lsmain.spl = spin;\l*dout = smain.dout;\lvoid __CPAchecker_TMP_11;\l" id="162 -> 163"]
163 -> 165 [label="Line 923: \l[!(((smain.inr) & 1) == 0)]\l" id="163 -> 165"]
163 -> 174 [label="Line 923: \l[((smain.inr) & 1) == 0]\l" id="163 -> 174"]
174 -> 176 [label="Line 923: \l0;\l" id="174 -> 176"]
176 -> 177 [label="Lines 923 - 938: \l0;\lvoid __CPAchecker_TMP_13;\l" id="176 -> 177"]
177 -> 179 [label="Line 938: \l[!(((smain.inr) & 0) == 0)]\l" id="177 -> 179"]
177 -> 188 [label="Line 938: \l[((smain.inr) & 0) == 0]\l" id="177 -> 188"]
188 -> 190 [label="Line 938: \l0;\l" id="188 -> 190"]
190 -> 191 [label="Line 938: \l0;\l" id="190 -> 191"]
191 -> 192 [label="Line 0: \ldefault return\l" id="191 -> 192"]
192 -> 193 [label="Line 961: \lReturn edge from spinner to main\l" id="192 -> 193"]
193 -> 195 [label="Line 0: \l\l" id="193 -> 195"]
298 -> 195 [style="dashed" weight="0" label="covered by"]
195 -> 196 [label="Lines 957 - 960: \l\lspin = nondet_bool();\lamount = nondet_bool();\ldin = nondet_bool();\l" id="195 -> 196"]
196 -> 197 [label="Line 961: \lspinner(clock, spin, amount, din, &dout)\l" id="196 -> 197"]
197 -> 198 [label="Lines 0 - 893: \lFunction start dummy edge\lunsigned int tmp0;\lunsigned int tmp1;\lunsigned int tmp2;\lunsigned int tmp3;\lunsigned int tmp4;\lunsigned int tmp5;\ltmp0 = smain.inr;\lunsigned int __CPAchecker_TMP_0;\l" id="197 -> 198"]
198 -> 199 [label="Line 893: \l[(amount & 1) == 0]\l" id="198 -> 199"]
198 -> 200 [label="Line 893: \l[!((amount & 1) == 0)]\l" id="198 -> 200"]
200 -> 203 [label="Line 893: \l__CPAchecker_TMP_0 = (tmp0 >> 1) & 2147483647;\l" id="200 -> 203"]
203 -> 204 [label="Lines 893 - 894: \ltmp1 = __CPAchecker_TMP_0 | ((tmp1 >> 31) << 31);\lunsigned int __CPAchecker_TMP_1;\l" id="203 -> 204"]
204 -> 205 [label="Line 894: \l[(amount & 1) == 0]\l" id="204 -> 205"]
204 -> 206 [label="Line 894: \l[!((amount & 1) == 0)]\l" id="204 -> 206"]
206 -> 209 [label="Line 894: \l__CPAchecker_TMP_1 = tmp0 & 1;\l" id="206 -> 209"]
209 -> 210 [label="Lines 894 - 896: \ltmp1 = (tmp1 & 2147483647) | (__CPAchecker_TMP_1 << 31);\lunsigned int __CPAchecker_TMP_2;\l" id="209 -> 210"]
210 -> 211 [label="Line 896: \l[((amount >> 1) & 1) == 0]\l" id="210 -> 211"]
210 -> 212 [label="Line 896: \l[!(((amount >> 1) & 1) == 0)]\l" id="210 -> 212"]
212 -> 215 [label="Line 896: \l__CPAchecker_TMP_2 = (tmp1 >> 2) & 1073741823;\l" id="212 -> 215"]
215 -> 216 [label="Lines 896 - 897: \ltmp2 = __CPAchecker_TMP_2 | ((tmp2 >> 30) << 30);\lunsigned int __CPAchecker_TMP_3;\l" id="215 -> 216"]
216 -> 217 [label="Line 897: \l[((amount >> 1) & 1) == 0]\l" id="216 -> 217"]
216 -> 218 [label="Line 897: \l[!(((amount >> 1) & 1) == 0)]\l" id="216 -> 218"]
218 -> 221 [label="Line 897: \l__CPAchecker_TMP_3 = tmp1 & 3;\l" id="218 -> 221"]
221 -> 222 [label="Lines 897 - 899: \ltmp2 = ((__CPAchecker_TMP_3 & 3) << 30) | (tmp2 & 1073741823);\lunsigned int __CPAchecker_TMP_4;\l" id="221 -> 222"]
222 -> 223 [label="Line 899: \l[((amount >> 2) & 1) == 0]\l" id="222 -> 223"]
222 -> 224 [label="Line 899: \l[!(((amount >> 2) & 1) == 0)]\l" id="222 -> 224"]
224 -> 227 [label="Line 899: \l__CPAchecker_TMP_4 = (tmp2 >> 4) & 268435455;\l" id="224 -> 227"]
227 -> 228 [label="Lines 899 - 900: \ltmp3 = __CPAchecker_TMP_4 | ((tmp3 >> 28) << 28);\lunsigned int __CPAchecker_TMP_5;\l" id="227 -> 228"]
228 -> 229 [label="Line 900: \l[((amount >> 2) & 1) == 0]\l" id="228 -> 229"]
228 -> 230 [label="Line 900: \l[!(((amount >> 2) & 1) == 0)]\l" id="228 -> 230"]
230 -> 233 [label="Line 900: \l__CPAchecker_TMP_5 = tmp2 & 15;\l" id="230 -> 233"]
233 -> 234 [label="Lines 900 - 902: \ltmp3 = ((__CPAchecker_TMP_5 & 15) << 28) | (tmp3 & 268435455);\lunsigned int __CPAchecker_TMP_6;\l" id="233 -> 234"]
234 -> 235 [label="Line 902: \l[((amount >> 3) & 1) == 0]\l" id="234 -> 235"]
234 -> 236 [label="Line 902: \l[!(((amount >> 3) & 1) == 0)]\l" id="234 -> 236"]
236 -> 239 [label="Line 902: \l__CPAchecker_TMP_6 = (tmp3 >> 8) & 16777215;\l" id="236 -> 239"]
239 -> 240 [label="Lines 902 - 903: \ltmp4 = __CPAchecker_TMP_6 | ((tmp4 >> 24) << 24);\lunsigned int __CPAchecker_TMP_7;\l" id="239 -> 240"]
240 -> 241 [label="Line 903: \l[((amount >> 3) & 1) == 0]\l" id="240 -> 241"]
240 -> 242 [label="Line 903: \l[!(((amount >> 3) & 1) == 0)]\l" id="240 -> 242"]
242 -> 245 [label="Line 903: \l__CPAchecker_TMP_7 = tmp3 & 255;\l" id="242 -> 245"]
245 -> 246 [label="Lines 903 - 906: \ltmp4 = ((__CPAchecker_TMP_7 & 255) << 24) | (tmp3 & 16777215);\lunsigned int __CPAchecker_TMP_8;\l" id="245 -> 246"]
246 -> 247 [label="Line 906: \l[((amount >> 4) & 1) == 0]\l" id="246 -> 247"]
246 -> 248 [label="Line 906: \l[!(((amount >> 4) & 1) == 0)]\l" id="246 -> 248"]
248 -> 251 [label="Line 906: \l__CPAchecker_TMP_8 = (tmp4 >> 16) & 65535;\l" id="248 -> 251"]
251 -> 252 [label="Lines 906 - 907: \ltmp5 = __CPAchecker_TMP_8 | ((tmp4 >> 16) << 16);\lunsigned int __CPAchecker_TMP_9;\l" id="251 -> 252"]
252 -> 253 [label="Line 907: \l[((amount >> 4) & 1) == 0]\l" id="252 -> 253"]
252 -> 254 [label="Line 907: \l[!(((amount >> 4) & 1) == 0)]\l" id="252 -> 254"]
254 -> 257 [label="Line 907: \l__CPAchecker_TMP_9 = tmp4 & 65535;\l" id="254 -> 257"]
257 -> 258 [label="Line 907: \ltmp5 = ((__CPAchecker_TMP_9 & 65535) << 16) | (tmp4 & 65535);\l" id="257 -> 258"]
258 -> 259 [label="Line 909: \l[(smain.spl) == 0]\l" id="258 -> 259"]
258 -> 260 [label="Line 909: \l[!((smain.spl) == 0)]\l" id="258 -> 260"]
260 -> 261 [label="Line 910: \lsmain.inr = smain.dout;\l" id="260 -> 261"]
261 -> 265 [label="Line 0: \l\l" id="261 -> 265"]
265 -> 266 [label="Lines 914 - 923: \lsmain.dout = tmp5;\lsmain.spl = spin;\l*dout = smain.dout;\lvoid __CPAchecker_TMP_11;\l" id="265 -> 266"]
266 -> 268 [label="Line 923: \l[!(((smain.inr) & 1) == 0)]\l" id="266 -> 268"]
266 -> 277 [label="Line 923: \l[((smain.inr) & 1) == 0]\l" id="266 -> 277"]
277 -> 279 [label="Line 923: \l0;\l" id="277 -> 279"]
279 -> 280 [label="Lines 923 - 938: \l0;\lvoid __CPAchecker_TMP_13;\l" id="279 -> 280"]
280 -> 282 [label="Line 938: \l[!(((smain.inr) & 0) == 0)]\l" id="280 -> 282"]
280 -> 291 [label="Line 938: \l[((smain.inr) & 0) == 0]\l" id="280 -> 291"]
291 -> 293 [label="Line 938: \l0;\l" id="291 -> 293"]
293 -> 294 [label="Line 938: \l0;\l" id="293 -> 294"]
294 -> 295 [label="Line 0: \ldefault return\l" id="294 -> 295"]
295 -> 296 [label="Line 961: \lReturn edge from spinner to main\l" id="295 -> 296"]
296 -> 298 [label="Line 0: \l\l" id="296 -> 298"]
282 -> 284 [label="Line 938: \l[!(((smain.dout) & 0) == 0)]\l" id="282 -> 284"]
282 -> 291 [label="Line 938: \l[((smain.dout) & 0) == 0]\l" id="282 -> 291"]
284 -> 287 [label="Line 938: \l[!((smain.spl) == 0)]\l" id="284 -> 287"]
284 -> 291 [label="Line 938: \l[(smain.spl) == 0]\l" id="284 -> 291"]
287 -> 289 [label="Line 938: \l[((smain.inr) & 0) == 0]\l" id="287 -> 289"]
287 -> 291 [label="Line 938: \l[!(((smain.inr) & 0) == 0)]\l" id="287 -> 291"]
268 -> 270 [label="Line 923: \l[!(((smain.dout) & 1) == 0)]\l" id="268 -> 270"]
268 -> 277 [label="Line 923: \l[((smain.dout) & 1) == 0]\l" id="268 -> 277"]
270 -> 273 [label="Line 923: \l[!((smain.spl) == 0)]\l" id="270 -> 273"]
270 -> 277 [label="Line 923: \l[(smain.spl) == 0]\l" id="270 -> 277"]
273 -> 275 [label="Line 923: \l[((smain.inr) & 1) == 0]\l" id="273 -> 275"]
273 -> 277 [label="Line 923: \l[!(((smain.inr) & 1) == 0)]\l" id="273 -> 277"]
259 -> 263 [label="Line 912: \lsmain.inr = din;\l" id="259 -> 263"]
263 -> 265 [label="Line 0: \l\l" id="263 -> 265"]
253 -> 257 [label="Line 907: \l__CPAchecker_TMP_9 = (tmp4 >> 16) & 65535;\l" id="253 -> 257"]
247 -> 251 [label="Line 906: \l__CPAchecker_TMP_8 = tmp4 & 65535;\l" id="247 -> 251"]
241 -> 245 [label="Line 903: \l__CPAchecker_TMP_7 = (tmp3 >> 24) & 255;\l" id="241 -> 245"]
235 -> 239 [label="Line 902: \l__CPAchecker_TMP_6 = tmp3 & 16777215;\l" id="235 -> 239"]
229 -> 233 [label="Line 900: \l__CPAchecker_TMP_5 = (tmp2 >> 28) & 15;\l" id="229 -> 233"]
223 -> 227 [label="Line 899: \l__CPAchecker_TMP_4 = tmp2 & 268435455;\l" id="223 -> 227"]
217 -> 221 [label="Line 897: \l__CPAchecker_TMP_3 = (tmp1 >> 30) & 3;\l" id="217 -> 221"]
211 -> 215 [label="Line 896: \l__CPAchecker_TMP_2 = tmp1 & 1073741823;\l" id="211 -> 215"]
205 -> 209 [label="Line 894: \l__CPAchecker_TMP_1 = (tmp0 >> 31) & 1;\l" id="205 -> 209"]
199 -> 203 [label="Line 893: \l__CPAchecker_TMP_0 = tmp0 & 2147483647;\l" id="199 -> 203"]
179 -> 181 [label="Line 938: \l[!(((smain.dout) & 0) == 0)]\l" id="179 -> 181"]
179 -> 188 [label="Line 938: \l[((smain.dout) & 0) == 0]\l" id="179 -> 188"]
181 -> 184 [label="Line 938: \l[!((smain.spl) == 0)]\l" id="181 -> 184"]
181 -> 188 [label="Line 938: \l[(smain.spl) == 0]\l" id="181 -> 188"]
184 -> 186 [label="Line 938: \l[((smain.inr) & 0) == 0]\l" id="184 -> 186"]
184 -> 188 [label="Line 938: \l[!(((smain.inr) & 0) == 0)]\l" id="184 -> 188"]
165 -> 167 [label="Line 923: \l[!(((smain.dout) & 1) == 0)]\l" id="165 -> 167"]
165 -> 174 [label="Line 923: \l[((smain.dout) & 1) == 0]\l" id="165 -> 174"]
167 -> 170 [label="Line 923: \l[!((smain.spl) == 0)]\l" id="167 -> 170"]
167 -> 174 [label="Line 923: \l[(smain.spl) == 0]\l" id="167 -> 174"]
170 -> 172 [label="Line 923: \l[((smain.inr) & 1) == 0]\l" id="170 -> 172"]
170 -> 174 [label="Line 923: \l[!(((smain.inr) & 1) == 0)]\l" id="170 -> 174"]
156 -> 160 [label="Line 912: \lsmain.inr = din;\l" id="156 -> 160"]
160 -> 162 [label="Line 0: \l\l" id="160 -> 162"]
150 -> 154 [label="Line 907: \l__CPAchecker_TMP_9 = (tmp4 >> 16) & 65535;\l" id="150 -> 154"]
144 -> 148 [label="Line 906: \l__CPAchecker_TMP_8 = tmp4 & 65535;\l" id="144 -> 148"]
138 -> 142 [label="Line 903: \l__CPAchecker_TMP_7 = (tmp3 >> 24) & 255;\l" id="138 -> 142"]
132 -> 136 [label="Line 902: \l__CPAchecker_TMP_6 = tmp3 & 16777215;\l" id="132 -> 136"]
126 -> 130 [label="Line 900: \l__CPAchecker_TMP_5 = (tmp2 >> 28) & 15;\l" id="126 -> 130"]
120 -> 124 [label="Line 899: \l__CPAchecker_TMP_4 = tmp2 & 268435455;\l" id="120 -> 124"]
114 -> 118 [label="Line 897: \l__CPAchecker_TMP_3 = (tmp1 >> 30) & 3;\l" id="114 -> 118"]
108 -> 112 [label="Line 896: \l__CPAchecker_TMP_2 = tmp1 & 1073741823;\l" id="108 -> 112"]
102 -> 106 [label="Line 894: \l__CPAchecker_TMP_1 = (tmp0 >> 31) & 1;\l" id="102 -> 106"]
96 -> 100 [label="Line 893: \l__CPAchecker_TMP_0 = tmp0 & 2147483647;\l" id="96 -> 100"]
}
